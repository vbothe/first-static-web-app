{"version":3,"file":"app.92bd130ccf5d3f07ba18.js","mappings":"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","sources":["webpack:///./app/scripts/app-settings.js","webpack:///./app/scripts/commonStyles/commonStyles.js","webpack:///./app/scripts/commonUtil/unsavedWarningModal.js","webpack:///./app/scripts/components/add-new-templates/AddNewTemplates.jsx","webpack:///./app/scripts/components/guide/GuideFilterPills.jsx","webpack:///./app/scripts/components/guide/GuideFilterSlider.jsx","webpack:///./app/scripts/components/guide/GuideFilters.jsx","webpack:///./app/scripts/components/guide/MergeFields.jsx","webpack:///./app/scripts/components/guide/UserDefinedField.jsx","webpack:///./app/scripts/components/layout/Header.jsx","webpack:///./app/scripts/components/layout/Layout.jsx","webpack:///./app/scripts/components/template-actions/MultiFileUpload.jsx","webpack:///./app/scripts/components/template-actions/PreviewTemplate.jsx","webpack:///./app/scripts/components/template-actions/PublishTemplate.jsx","webpack:///./app/scripts/components/template-actions/UploadTemplate.jsx","webpack:///./app/scripts/components/template-actions/ValidateTemplate.jsx","webpack:///./app/scripts/components/template-details/EditTemplate.jsx","webpack:///./app/scripts/components/template-details/TemplateDetails.jsx","webpack:///./app/scripts/components/template-details/TemplateVersions.jsx","webpack:///./app/scripts/components/template-details/ViewTemplate.jsx","webpack:///./app/scripts/components/template-filters/FilterSlider.jsx","webpack:///./app/scripts/components/template-filters/TemplateFilters.jsx","webpack:///./app/scripts/components/template-filters/TemplatesSubNav.jsx","webpack:///./app/scripts/components/templates-list/TemplatesHomePage.jsx","webpack:///./app/scripts/components/templates-list/TemplatesList.jsx","webpack:///./app/scripts/constants/addNewTemplate.js","webpack:///./app/scripts/constants/global.js","webpack:///./app/scripts/constants/guide.js","webpack:///./app/scripts/constants/templateActions.js","webpack:///./app/scripts/constants/templateDetails.js","webpack:///./app/scripts/constants/templateFilters.js","webpack:///./app/scripts/constants/templateList.js","webpack:///./app/scripts/constants/templatesHomePage.js","webpack:///./app/scripts/createLocalStorageLogStore.js","webpack:///./app/scripts/createStore.js","webpack:///./app/scripts/ducks/applications.reducer.js","webpack:///./app/scripts/ducks/categories.reducer.js","webpack:///./app/scripts/ducks/guideFilters.reducer.js","webpack:///./app/scripts/ducks/index.js","webpack:///./app/scripts/ducks/languages.reducer.js","webpack:///./app/scripts/ducks/lobs.reducer.js","webpack:///./app/scripts/ducks/mergeFields.reducer.js","webpack:///./app/scripts/ducks/opsSegments.reducer.js","webpack:///./app/scripts/ducks/programs.reducer.js","webpack:///./app/scripts/ducks/reasons.reducer.js","webpack:///./app/scripts/ducks/recipients.reducer.js","webpack:///./app/scripts/ducks/templateDetails.reducer.js","webpack:///./app/scripts/ducks/templateFilters.reducer.js","webpack:///./app/scripts/ducks/templateList.reducer.js","webpack:///./app/scripts/ducks/templateStatus.reducer.js","webpack:///./app/scripts/ducks/userDefinedFields.reducer.js","webpack:///./app/scripts/index.jsx","webpack:///./app/scripts/route-config.jsx","webpack:///./app/scripts/selectors/guide.selector.js","webpack:///./app/scripts/selectors/index.js","webpack:///./app/scripts/selectors/statusDetails.selector.js","webpack:///./app/scripts/selectors/templateDetails.selector.js","webpack:///./app/scripts/selectors/templateFilters.selector.js","webpack:///./app/scripts/selectors/templateList.selector.js","webpack:///./app/scripts/selectors/templateLookups.selector.js","webpack:///./app/scripts/services/addNewTemplates/addNewTemplates.service.js","webpack:///./app/scripts/services/guide/guide.service.js","webpack:///./app/scripts/services/index.js","webpack:///./app/scripts/services/layout/header.service.js","webpack:///./app/scripts/services/templateActions/templateActions.service.js","webpack:///./app/scripts/services/templateDetails/templateDetails.service.js","webpack:///./app/scripts/services/templateFilters/templateFilters.service.js","webpack:///./app/scripts/services/templateList/schema.js","webpack:///./app/scripts/services/templateList/templateList.service.js","webpack:///./app/scripts/services/templateLookups/templateLookups.service.js"],"sourcesContent":["import { APP_SETTINGS, MODULES } from \"@evolent/roots\";\r\n\r\nAPP_SETTINGS.moduleId = MODULES.letterAdminTool;\r\n\r\nexport default APP_SETTINGS;\r\n","import styled from \"styled-components\";\r\nimport {\r\n  Spacing,\r\n  EhMessage,\r\n  EhFlexBox,\r\n  Colors,\r\n  EhHeaderMat,\r\n  EhLabelMat,\r\n  EhButton,\r\n} from \"@evolent/prism-react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\n\r\nexport const StyledBox = styled(EhFlexBox)`\r\n  && {\r\n    background-color: ${Colors.white};\r\n    width: 100%;\r\n    height: calc(${Spacing.spacingXxLarge} + ${Spacing.spacingXLarge});\r\n    margin-top: calc(${Spacing.spacingXxLarge} + ${Spacing.spacingLarge});\r\n  }\r\n`;\r\nexport const StyledDiv = styled.div`\r\n  width: 100%;\r\n  position: relative;\r\n  &&&& {\r\n    padding: 0.3rem ${Spacing.spacingXLarge};\r\n  }\r\n`;\r\nexport const StyledHeader = styled(EhHeaderMat)`\r\n  && {\r\n    padding-top: ${Spacing.spacingLarge};\r\n    margin-right: ${Spacing.spacingSmall};\r\n  }\r\n`;\r\nexport const StyledOuterContainer = styled.div`\r\n  padding: ${Spacing.spacingXLarge} ${Spacing.spacingXLarge}\r\n    ${Spacing.spacingNone} !important;\r\n  min-height: 83.5vh;\r\n`;\r\nexport const StyledInnerContainer = styled.div`\r\n  width: 100%;\r\n  background-color: ${Colors.white};\r\n  padding: ${Spacing.spacingSmall} 0;\r\n  border-radius: ${Spacing.borderRadiusSmall};\r\n`;\r\nexport const StyledEhMessage = styled(EhMessage)`\r\n  &&&& {\r\n    margin-top: ${Spacing.spacingSmall};\r\n  }\r\n`;\r\nexport const StyledTableContainer = styled.div`\r\n  margin: ${Spacing.spacingMedium};\r\n`;\r\nexport const StyledFlexBox = styled(EhFlexBox)`\r\n  padding-left: ${Spacing.spacingLarge};\r\n  padding-right: ${Spacing.spacingLarge};\r\n`;\r\n\r\nexport const StyledButtonContainer = styled(Grid.Column)`\r\n  && {\r\n    margin-top: ${Spacing.spacingSmall};\r\n  }\r\n`;\r\n\r\nexport const StyledTemplateContainer = styled.div`\r\nwidth: 100%;\r\nbackground-color: ${Colors.white};\r\npadding: ${Spacing.spacingXLarge} ${Spacing.spacingXxLarge};\r\nborder-radius: ${Spacing.borderRadiusSmall};\r\n}\r\n`;\r\n\r\nexport const StyledEhLabel = styled(EhLabelMat)`\r\n  &&& {\r\n    font-weight: bold;\r\n    color: black;\r\n  }\r\n`;\r\n\r\nexport const SliderContent = styled.div`\r\n  background-color: ${Colors.white};\r\n  box-sizing: border-box;\r\n  height: 100%;\r\n  border-top: 1px solid ${Colors.indigo[25]};\r\n  padding: ${Spacing.spacingNone} ${Spacing.spacingXxLarge};\r\n  margin-right: ${Spacing.spacingNone};\r\n`;\r\n\r\nexport const StyledFilterDiv = styled.div`\r\n  margin-top: ${Spacing.spacingSmall};\r\n  text-align: right;\r\n`;\r\n\r\nexport const StyledGuideFilterContainer = styled.div`\r\n  && {\r\n    padding: ${Spacing.spacingLarge} ${Spacing.spacingNone};\r\n  }\r\n`;\r\n\r\nexport const StyledApplyButton = styled(EhButton)`\r\n  && {\r\n    margin-top: ${Spacing.spacingXLarge};\r\n  }\r\n`;\r\n","import { showUnsavedChangeWarning } from \"@evolent/prism-react\";\r\n\r\nexport const showUnsavedWarningModal = (showUnsavedWarning, closeModal) => {\r\n  if (showUnsavedWarning) {\r\n    showUnsavedChangeWarning((discard) => {\r\n      discard && closeModal();\r\n    });\r\n  } else {\r\n    closeModal();\r\n  }\r\n};\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid, Progress } from \"semantic-ui-react\";\r\nimport axios from \"axios\";\r\nimport bytes from \"bytes\";\r\nimport {\r\n  Spacing,\r\n  EhWithTracking,\r\n  EhButton,\r\n  EhForm,\r\n  asField,\r\n  EhDropdownField,\r\n  EhCheckboxGroupField,\r\n  Colors,\r\n  goBack,\r\n  showUnsavedChangeWarning,\r\n  EhTextMat,\r\n  EhInputField,\r\n  EhTextareaField,\r\n  EhButtonGroup,\r\n  showModal,\r\n  EhAlertModalMat,\r\n  ehToast,\r\n} from \"@evolent/prism-react\";\r\nimport { sortBy, filter, pick, findIndex, remove, cloneDeep } from \"lodash\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { MODULES, userAppClientsSelector, APP_SETTINGS } from \"@evolent/roots\";\r\nimport {\r\n  APPLICATIONS,\r\n  MESSAGES,\r\n  TEMPLATE_DESCRIPTION_MAX_LENGTH,\r\n  TOAST_MESSAGES,\r\n  TOAST_PROPS,\r\n} from \"../../constants/global\";\r\nimport {\r\n  ATTACHMENTS_STRINGS,\r\n  DUPLICATE_TEMPLATE_MESSAGE,\r\n} from \"../../constants/addNewTemplate\";\r\nimport {\r\n  getApplicationsLogic,\r\n  getLinesofBusinessLogic,\r\n  getCategoriesLogic,\r\n  getReasonsLogic,\r\n  getRecipientsLogic,\r\n  getLanguagesLogic,\r\n  getProgramsLogic,\r\n  getOpsSegmentsLogic,\r\n  saveTemplateLogic,\r\n  showReasons,\r\n  showPrograms,\r\n  categoryChangeHandler,\r\n} from \"../../services\";\r\nimport {\r\n  applicationSelector,\r\n  linesOfBusinessSelector,\r\n  categorySelector,\r\n  reasonsSelector,\r\n  recipientsSelector,\r\n  languagesSelector,\r\n  programsSelector,\r\n  opsSegmentsSelector,\r\n} from \"../../selectors\";\r\nimport {\r\n  StyledBox,\r\n  StyledDiv,\r\n  StyledHeader,\r\n  StyledOuterContainer,\r\n} from \"../../commonStyles/commonStyles\";\r\nimport MultiFileUpload from \"../template-actions/MultiFileUpload\";\r\nimport PreviewTemplate from \"../template-actions/PreviewTemplate\";\r\n\r\nconst StyledInnerContainer = styled.div`\r\n  width: 100%;\r\n  background-color: ${Colors.white};\r\n  padding: ${Spacing.spacingXLarge} ${Spacing.spacingXxLarge};\r\n  border-radius: ${Spacing.borderRadiusSmall};\r\n}\r\n`;\r\nconst StyledButton = styled(EhButton)`\r\n  && {\r\n    margin-top: ${Spacing.spacingXSmall};\r\n  }\r\n`;\r\nconst InnerContainer = styled(Grid)`\r\n  &&&& {\r\n    border: ${Spacing.borderWidthThin} solid ${Colors.indigo[25]};\r\n    width: 100%;\r\n    margin: ${Spacing.spacingSmall} ${Spacing.spacingLarge}\r\n      ${Spacing.spacingLarge};\r\n    padding: ${Spacing.spacingNone} ${Spacing.spacingNone}\r\n      ${Spacing.spacingLarge} ${Spacing.spacingNone};\r\n    border-radius: ${Spacing.borderRadiusLarge};\r\n  }\r\n`;\r\nconst StyledTemplateHeader = styled(Grid.Row)`\r\n  && {\r\n    border-bottom: ${(props) =>\r\n      props.border === \"bottom\" &&\r\n      `${Spacing.borderWidthThin} solid ${Colors.indigo[25]}`};\r\n    padding: ${Spacing.spacingSmall} ${Spacing.spacingLarge};\r\n  }\r\n`;\r\n\r\nconst UploadContainer = styled.div`\r\n  height: 3rem;\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: ${Spacing.spacingMedium};\r\n  border-width: ${Spacing.borderWidthThin};\r\n  border-radius: ${Spacing.borderRadiusLarge};\r\n  border-color: ${Colors.indigo[25]};\r\n  border-style: solid;\r\n  word-break: break-all;\r\n`;\r\n\r\nconst StrechDiv = styled(Grid.Row)`\r\n  flex: 1;\r\n  margin-right: ${Spacing.spacingMedium};\r\n`;\r\n\r\nconst StyledProgress = styled(Progress)`\r\n  &&& {\r\n    margin: 0;\r\n  }\r\n`;\r\n\r\nconst MultiFileUploadField = asField(MultiFileUpload);\r\n\r\nconst AddNewTemplatesComponent = ({\r\n  clients,\r\n  applicationsData,\r\n  linesOfBusinessData,\r\n  categoriesData,\r\n  getApplicationsLogic,\r\n  getLinesofBusinessLogic,\r\n  getCategoriesLogic,\r\n  getReasonsLogic,\r\n  getRecipientsLogic,\r\n  getLanguagesLogic,\r\n  getProgramsLogic,\r\n  getOpsSegmentsLogic,\r\n  saveTemplateLogic,\r\n  languages,\r\n  recipientsData,\r\n  history,\r\n  reasons,\r\n  programs,\r\n  opsSegments,\r\n}) => {\r\n  const { loading: appLoading, data: applications } = applicationsData;\r\n  const { loading: lobsLoading, data: linesOfBusiness } = linesOfBusinessData;\r\n  const { loading: categoriesLoading, data: categories } = categoriesData;\r\n  const { loading: recipientsLoading, data: recipients } = recipientsData;\r\n  const clientNames = sortBy(clients[MODULES.letterAdminTool], [\"name\"]);\r\n  const [validationMsg, setValidationMsg] = useState();\r\n  const [fileInfo, setFileInfo] = useState([]);\r\n  const [progressInfo, setProgressInfo] = useState([]);\r\n  const [dispNames, setDispNames] = useState([]);\r\n\r\n  const {\r\n    MAX_SIZE,\r\n    UPLOAD_ATTACHMENT_FORMAT,\r\n    SUPPORTED_FILES_MESSAGE,\r\n    MAX_FILES,\r\n  } = ATTACHMENTS_STRINGS;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getApplicationsLogic();\r\n      await getLinesofBusinessLogic();\r\n      await getCategoriesLogic();\r\n    })();\r\n  }, []);\r\n\r\n  const navigateToPreviousPage = () => {\r\n    goBack(history, \"/\");\r\n  };\r\n\r\n  const discardTemplateHandler = (form) => {\r\n    if (form?.dirty) {\r\n      showUnsavedChangeWarning((discard) => {\r\n        discard && navigateToPreviousPage();\r\n      });\r\n    } else {\r\n      navigateToPreviousPage();\r\n    }\r\n  };\r\n\r\n  const findDuplicates = (arr) =>\r\n    arr.filter((item, index) => arr.indexOf(item) !== index);\r\n\r\n  const addNewTemplatesHandler = async (form) => {\r\n    const { files, descriptions, displayNames } = form;\r\n\r\n    const uniqueDuplicateNames = [...new Set(findDuplicates(displayNames))];\r\n\r\n    if (uniqueDuplicateNames.length > 0) {\r\n      const message = `${DUPLICATE_TEMPLATE_MESSAGE}\r\n      ${uniqueDuplicateNames.join(\", \")}`;\r\n\r\n      const closeModal = showModal(\r\n        <EhAlertModalMat\r\n          heading=\"Duplicate Display Names\"\r\n          iconName=\"info-circle\"\r\n          iconColor={Colors.blue[100]}\r\n          message={message}\r\n          data-aq=\"duplicate-display-names\"\r\n          buttons={[\r\n            {\r\n              text: \"Ok\",\r\n              onClick: () => {\r\n                closeModal();\r\n              },\r\n            },\r\n          ]}\r\n        />\r\n      );\r\n      return;\r\n    }\r\n\r\n    const TemplateDescriptorDtos = files.map((file, index) => {\r\n      return {\r\n        ...file,\r\n        displayName: displayNames[index],\r\n        description: descriptions && descriptions[index],\r\n      };\r\n    });\r\n\r\n    const TemplateLookupDataDto = pick(form, [\r\n      \"categoryIds\",\r\n      \"clientId\",\r\n      \"decisionReasonIds\",\r\n      \"lineOfBusinessIds\",\r\n      \"opsSegmentIds\",\r\n      \"programIds\",\r\n      \"recipientCategoryIds\",\r\n      \"languageId\",\r\n    ]);\r\n\r\n    const templateData = {\r\n      publishTemplate: false,\r\n      AddNewTemplatesDto: {\r\n        TemplateLookupDataDto: {\r\n          ...TemplateLookupDataDto,\r\n          applicationId: form?.application?.value,\r\n        },\r\n        TemplateDescriptorDtos: TemplateDescriptorDtos,\r\n      },\r\n    };\r\n    await saveTemplateLogic({ templateData });\r\n    history.push(`/new`);\r\n    ehToast.success(null, TOAST_MESSAGES.TEMPLATE_SAVED_SUCCESS, {\r\n      ...TOAST_PROPS,\r\n    });\r\n  };\r\n\r\n  const clientChangeHandler = async (form, clientId) => {\r\n    form.setFieldValue(\"lineOfBusinessIds\", []);\r\n    form.setFieldValue(\"decisionReasonIds\", []);\r\n    form.setFieldValue(\"languageId\");\r\n    form.setFieldValue(\"programIds\", []);\r\n    form.setFieldValue(\"opsSegmentIds\", []);\r\n\r\n    if (clientId) {\r\n      await Promise.all([\r\n        getReasonsLogic({ clientId }),\r\n        getLanguagesLogic({ clientId }),\r\n        getProgramsLogic({ clientId }),\r\n        getOpsSegmentsLogic({ clientId }),\r\n      ]);\r\n    }\r\n  };\r\n\r\n  const applicationChangeHandler = async (form, application) => {\r\n    form.setFieldValue(\"categoryIds\", []);\r\n    form.setFieldValue(\"decisionReasonIds\", []);\r\n    form.setFieldValue(\"recipientCategoryIds\", []);\r\n    form.setFieldValue(\"languageId\");\r\n    form.setFieldValue(\"programIds\", []);\r\n    form.setFieldValue(\"opsSegmentIds\", []);\r\n\r\n    application?.value === APPLICATIONS.all &&\r\n      form.setFieldValue(\"lineOfBusinessIds\", []);\r\n\r\n    application?.value === APPLICATIONS.um &&\r\n      (await getRecipientsLogic({ applicationId: application.value }));\r\n  };\r\n\r\n  const doUploadHandler = async (form) => {\r\n    const uploadUrl = `${APP_SETTINGS.letterAdminServices}FileCaches`;\r\n    const filesClone = cloneDeep(form.values.files);\r\n    form.setFieldValue(\"files\", fileInfo);\r\n    if (!filesClone.length) {\r\n      setValidationMsg(\"File Not Supported\");\r\n      form.setFieldTouched(\"files\", false);\r\n    } else {\r\n      let fileSizeLimit;\r\n      const updatedFiles = [];\r\n      const updatedDisplayNames = [];\r\n      setProgressInfo([]);\r\n      for (let i = 0; i < filesClone.length; i++) {\r\n        if (fileInfo.length + i + 1 > MAX_FILES) {\r\n          break;\r\n        }\r\n        if (filesClone[i].size > bytes.parse(MAX_SIZE)) {\r\n          fileSizeLimit = true;\r\n          setProgressInfo((prevState) => {\r\n            const newState = cloneDeep(prevState);\r\n            newState[i] = null;\r\n            return newState;\r\n          });\r\n        } else {\r\n          setProgressInfo((prevPro) => {\r\n            const newPro = [...prevPro];\r\n            newPro.push(1);\r\n            return newPro;\r\n          });\r\n          const data = new FormData();\r\n          data.append(\"file\", filesClone[i], filesClone[i].name);\r\n          await axios\r\n            .post(uploadUrl, data, {\r\n              onUploadProgress: (element) => {\r\n                setProgressInfo((prevState) => {\r\n                  const newState = cloneDeep(prevState);\r\n                  newState[i] = Math.floor(\r\n                    (element.loaded / element.total) * 100\r\n                  );\r\n                  return newState;\r\n                });\r\n              },\r\n              withCredentials: true,\r\n            })\r\n            .then((response) => {\r\n              setProgressInfo((prevProgressState) => {\r\n                const newProgressState = cloneDeep(prevProgressState);\r\n                newProgressState[i] = null;\r\n                return newProgressState;\r\n              });\r\n              updatedFiles.push(response.data.data[0]);\r\n              form.setFieldValue(\"files\", [...fileInfo, ...updatedFiles]);\r\n              const displayName = response.data.data[0].fileName.replace(\r\n                /\\.(docx|doc|dotx|dot)$/,\r\n                \"\"\r\n              );\r\n              updatedDisplayNames.push(displayName);\r\n              form.setFieldValue(\"displayNames\", [\r\n                ...dispNames,\r\n                ...updatedDisplayNames,\r\n              ]);\r\n            });\r\n        }\r\n      }\r\n      fileSizeLimit\r\n        ? setValidationMsg(`File size larger than ${MAX_SIZE}`)\r\n        : setValidationMsg(\"\");\r\n      setFileInfo((prevFiles) => [...prevFiles, ...updatedFiles]);\r\n      setDispNames((prevNames) => [...prevNames, ...updatedDisplayNames]);\r\n    }\r\n  };\r\n\r\n  const lastFileRemove = (form) => {\r\n    setProgressInfo([]);\r\n    form.setFieldTouched(\"files\", false);\r\n  };\r\n\r\n  const removeUploadHandler = (form, file) => {\r\n    setValidationMsg(\"\");\r\n    form.values.files.length === 1 && lastFileRemove(form);\r\n\r\n    setFileInfo((prevFiles) => {\r\n      const newFiles = cloneDeep(prevFiles);\r\n      remove(newFiles, (el) => el.id === file.id);\r\n      return newFiles;\r\n    });\r\n    const filesClone = cloneDeep(form.values.files);\r\n    const fileIndex = findIndex(filesClone, (el) => el.id === file.id);\r\n    remove(filesClone, (item) => item.id === file.id);\r\n    form.setFieldValue(\"files\", filesClone);\r\n\r\n    const newDisplayNames = cloneDeep(form.values.displayNames);\r\n    newDisplayNames.splice(fileIndex, 1);\r\n    form.setFieldValue(\"displayNames\", newDisplayNames);\r\n    setDispNames(newDisplayNames);\r\n\r\n    const descriptionsClone = cloneDeep(form.values?.descriptions);\r\n    form.setFieldValue(\r\n      \"descriptions\",\r\n      descriptionsClone && descriptionsClone.splice(fileIndex, 1)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <EhForm onSave={addNewTemplatesHandler}>\r\n      {(form) => (\r\n        <Fragment>\r\n          <StyledBox>\r\n            <StyledDiv>\r\n              <Grid>\r\n                <Grid.Column width={6}>\r\n                  <StyledHeader data=\"tempaltes-sub-header\">\r\n                    Add New Template\r\n                  </StyledHeader>\r\n                </Grid.Column>\r\n                <Grid.Column width={6} floated=\"right\" textAlign=\"right\">\r\n                  <StyledButton\r\n                    text=\"Discard Template\"\r\n                    data-aq=\"discard-new-template\"\r\n                    negative\r\n                    onClick={() => discardTemplateHandler(form)}\r\n                  />\r\n                </Grid.Column>\r\n              </Grid>\r\n            </StyledDiv>\r\n          </StyledBox>\r\n          <StyledOuterContainer>\r\n            <StyledInnerContainer>\r\n              <Grid>\r\n                <Grid.Row>\r\n                  <Grid.Column width={3}>\r\n                    <EhDropdownField\r\n                      fieldLabel=\"Client\"\r\n                      keyField=\"id\"\r\n                      select=\"id\"\r\n                      name=\"clientId\"\r\n                      options={clientNames}\r\n                      clearable\r\n                      required\r\n                      display=\"name\"\r\n                      onChange={(value) => clientChangeHandler(form, value)}\r\n                      data-aq=\"client-lookup\"\r\n                      placeholder=\"Select Client\"\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column width={3}>\r\n                    <EhDropdownField\r\n                      fieldLabel=\"Application\"\r\n                      name=\"application\"\r\n                      display=\"name\"\r\n                      loading={appLoading}\r\n                      keyField=\"value\"\r\n                      clearable\r\n                      required\r\n                      options={applications}\r\n                      onChange={(value) =>\r\n                        applicationChangeHandler(form, value)\r\n                      }\r\n                      data-aq=\"application-lookup\"\r\n                      placeholder=\"Select Application\"\r\n                    />\r\n                  </Grid.Column>\r\n                  {showPrograms(form?.values?.categoryIds) && (\r\n                    <Grid.Column width={3}>\r\n                      <EhDropdownField\r\n                        fieldLabel=\"Language\"\r\n                        keyField=\"key\"\r\n                        select=\"key\"\r\n                        name=\"languageId\"\r\n                        loading={languages[form?.values?.clientId]?.loading}\r\n                        options={languages[form?.values?.clientId]?.data}\r\n                        required\r\n                        clearable\r\n                        display=\"description\"\r\n                        data-aq=\"language-lookup\"\r\n                        placeholder={MESSAGES.CLIENT_NOT_SELECTED_MESSAGE}\r\n                      />\r\n                    </Grid.Column>\r\n                  )}\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                  {form?.values?.application?.value !== 0 && (\r\n                    <Grid.Column width={3}>\r\n                      <EhCheckboxGroupField\r\n                        fieldLabel=\"Line(s) of Business\"\r\n                        name=\"lineOfBusinessIds\"\r\n                        keyField=\"lobId\"\r\n                        select=\"lobId\"\r\n                        loading={lobsLoading}\r\n                        options={\r\n                          form?.values?.clientId\r\n                            ? filter(linesOfBusiness, {\r\n                                clientId: form?.values?.clientId,\r\n                              })\r\n                            : []\r\n                        }\r\n                        display=\"lobName\"\r\n                        data-aq=\"lob-checkbox\"\r\n                        showCount\r\n                        noResultsText={MESSAGES.CLIENT_NOT_SELECTED_MESSAGE}\r\n                      />\r\n                    </Grid.Column>\r\n                  )}\r\n                  <Grid.Column width={3}>\r\n                    <EhCheckboxGroupField\r\n                      fieldLabel=\"Category\"\r\n                      name=\"categoryIds\"\r\n                      keyField=\"categoryId\"\r\n                      select=\"categoryId\"\r\n                      loading={categoriesLoading}\r\n                      onChange={(value) => {\r\n                        categoryChangeHandler(form, value);\r\n                      }}\r\n                      options={\r\n                        form?.values?.application\r\n                          ? filter(categories, {\r\n                              applicationId: form?.values?.application.value,\r\n                            })\r\n                          : []\r\n                      }\r\n                      display=\"name\"\r\n                      data-aq=\"category-checkbox\"\r\n                      showCount\r\n                      noResultsText={MESSAGES.APPLICATION_NOT_SELECTED_MESSAGE}\r\n                    />\r\n                  </Grid.Column>\r\n                  {showReasons(form?.values?.categoryIds) && (\r\n                    <>\r\n                      <Grid.Column width={3}>\r\n                        <EhCheckboxGroupField\r\n                          fieldLabel=\"Reasons\"\r\n                          name=\"decisionReasonIds\"\r\n                          keyField=\"id\"\r\n                          select=\"id\"\r\n                          loading={reasons[form?.values?.clientId]?.loading}\r\n                          options={reasons[form?.values?.clientId]?.data || []}\r\n                          display=\"description\"\r\n                          data-aq=\"reasons-checkbox\"\r\n                          showCount\r\n                          required\r\n                          noResultsText={MESSAGES.CLIENT_NOT_SELECTED_MESSAGE}\r\n                        />\r\n                      </Grid.Column>\r\n                      <Grid.Column width={3}>\r\n                        <EhCheckboxGroupField\r\n                          fieldLabel=\"Recipient\"\r\n                          name=\"recipientCategoryIds\"\r\n                          keyField=\"recipientCategoryId\"\r\n                          select=\"recipientCategoryId\"\r\n                          loading={recipientsLoading}\r\n                          options={recipients}\r\n                          display=\"recipientCategoryDesc\"\r\n                          data-aq=\"recipients-checkbox\"\r\n                          showCount\r\n                          required\r\n                          noResultsText={\r\n                            MESSAGES.APPLICATION_NOT_SELECTED_MESSAGE\r\n                          }\r\n                        />\r\n                      </Grid.Column>\r\n                    </>\r\n                  )}\r\n                  {showPrograms(form?.values?.categoryIds) && (\r\n                    <Grid.Column width={3}>\r\n                      <EhCheckboxGroupField\r\n                        fieldLabel=\"Programs\"\r\n                        name=\"programIds\"\r\n                        keyField=\"key\"\r\n                        select=\"key\"\r\n                        loading={programs[form?.values?.clientId]?.loading}\r\n                        options={programs[form?.values?.clientId]?.data || []}\r\n                        display=\"name\"\r\n                        data-aq=\"programs-checkbox\"\r\n                        showCount\r\n                        required\r\n                        noResultsText={MESSAGES.CLIENT_NOT_SELECTED_MESSAGE}\r\n                      />\r\n                    </Grid.Column>\r\n                  )}\r\n                  {(showReasons(form?.values?.categoryIds) ||\r\n                    showPrograms(form?.values?.categoryIds)) && (\r\n                    <Grid.Column width={3}>\r\n                      <EhCheckboxGroupField\r\n                        fieldLabel=\"Ops Segment\"\r\n                        name=\"opsSegmentIds\"\r\n                        keyField=\"id\"\r\n                        select=\"id\"\r\n                        loading={opsSegments[form?.values?.clientId]?.loading}\r\n                        options={\r\n                          opsSegments[form?.values?.clientId]?.data || []\r\n                        }\r\n                        display=\"opsSegment\"\r\n                        data-aq=\"opsSegments-checkbox\"\r\n                        showCount\r\n                        required\r\n                        noResultsText={MESSAGES.CLIENT_NOT_SELECTED_MESSAGE}\r\n                      />\r\n                    </Grid.Column>\r\n                  )}\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                  {progressInfo.length ? (\r\n                    <InnerContainer>\r\n                      <StyledTemplateHeader border=\"bottom\">\r\n                        <Grid.Column width={3}>\r\n                          <EhTextMat size=\"medium\" fontWeight=\"bold\">\r\n                            File Name\r\n                          </EhTextMat>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={3}>\r\n                          <EhTextMat size=\"medium\" fontWeight=\"bold\">\r\n                            Display Name\r\n                          </EhTextMat>\r\n                        </Grid.Column>\r\n                        <Grid.Column width={6}>\r\n                          <EhTextMat size=\"medium\" fontWeight=\"bold\">\r\n                            Description\r\n                          </EhTextMat>\r\n                        </Grid.Column>\r\n                      </StyledTemplateHeader>\r\n                      {form.values?.files?.map((file, index) => {\r\n                        return (\r\n                          <StyledTemplateHeader key={index}>\r\n                            <Grid.Column width={3}>\r\n                              <EhTextMat\r\n                                size=\"medium\"\r\n                                data-aq=\"file-display-name\"\r\n                              >\r\n                                {file?.fileName}\r\n                              </EhTextMat>\r\n                            </Grid.Column>\r\n                            <Grid.Column width={3}>\r\n                              <EhInputField\r\n                                name={`displayNames[${index}]`}\r\n                                data-aq=\"display-name\"\r\n                                required\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column width={5}>\r\n                              <EhTextareaField\r\n                                name={`descriptions[${index}]`}\r\n                                data-aq=\"template-description\"\r\n                                maxLength={TEMPLATE_DESCRIPTION_MAX_LENGTH}\r\n                              />\r\n                            </Grid.Column>\r\n                            <Grid.Column width={1}>\r\n                              <EhButtonGroup>\r\n                                <EhButton\r\n                                  icon=\"eye\"\r\n                                  data-aq=\"preview-uploaded-template\"\r\n                                  onClick={() => {\r\n                                    const closeModal = showModal(\r\n                                      <PreviewTemplate\r\n                                        closeModal={() => closeModal()}\r\n                                        id={file.id}\r\n                                      />\r\n                                    );\r\n                                  }}\r\n                                />\r\n                                <EhButton\r\n                                  icon=\"trash alternate\"\r\n                                  data-aq=\"remove-uploaded-template\"\r\n                                  onClick={() =>\r\n                                    removeUploadHandler(form, file)\r\n                                  }\r\n                                />\r\n                              </EhButtonGroup>\r\n                            </Grid.Column>\r\n                          </StyledTemplateHeader>\r\n                        );\r\n                      })}\r\n                      {progressInfo.map((progress, index) => {\r\n                        return progress ? (\r\n                          <StyledTemplateHeader key={`p${index}`}>\r\n                            <Grid.Column width={12}>\r\n                              <UploadContainer>\r\n                                <StrechDiv>\r\n                                  <StyledProgress percent={progress} />\r\n                                </StrechDiv>\r\n                                <div>{`${progress}%`}</div>\r\n                                <EhButton\r\n                                  onClick={() => {\r\n                                    setProgressInfo((prevProgress) => {\r\n                                      const newProgress = cloneDeep(\r\n                                        prevProgress\r\n                                      );\r\n                                      newProgress.splice(index, 1);\r\n                                      return newProgress;\r\n                                    });\r\n                                  }}\r\n                                  data-aq=\"progress-cancel-button\"\r\n                                  borderless\r\n                                  negative\r\n                                >\r\n                                  Cancel\r\n                                </EhButton>\r\n                              </UploadContainer>\r\n                            </Grid.Column>\r\n                          </StyledTemplateHeader>\r\n                        ) : null;\r\n                      })}\r\n                    </InnerContainer>\r\n                  ) : null}\r\n                  {fileInfo.length < 25 && (\r\n                    <Grid.Column width={6}>\r\n                      <MultiFileUploadField\r\n                        name=\"files\"\r\n                        accept={UPLOAD_ATTACHMENT_FORMAT}\r\n                        required\r\n                        buttonText={\r\n                          fileInfo.length ? \"Add More\" : \"Select File\"\r\n                        }\r\n                        acceptText={SUPPORTED_FILES_MESSAGE}\r\n                        onChange={(files) => {\r\n                          form.values.files = files;\r\n                          setTimeout(() => {\r\n                            doUploadHandler(form);\r\n                          });\r\n                        }}\r\n                      />\r\n                    </Grid.Column>\r\n                  )}\r\n                </Grid.Row>\r\n                {validationMsg && (\r\n                  <Grid.Row>\r\n                    <Grid.Column width={3}>\r\n                      <EhTextMat color=\"red\" data-aq=\"validation-message\">\r\n                        {validationMsg}\r\n                      </EhTextMat>\r\n                    </Grid.Column>\r\n                  </Grid.Row>\r\n                )}\r\n                <Grid.Row>\r\n                  <Grid.Column width={3}>\r\n                    <EhButton primary type=\"submit\" data-aq=\"add-new-templates\">\r\n                      Save\r\n                    </EhButton>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n              </Grid>\r\n            </StyledInnerContainer>\r\n          </StyledOuterContainer>\r\n        </Fragment>\r\n      )}\r\n    </EhForm>\r\n  );\r\n};\r\n\r\nAddNewTemplatesComponent.propTypes = {\r\n  clients: PropTypes.object,\r\n  applicationsData: PropTypes.object,\r\n  linesOfBusinessData: PropTypes.object,\r\n  categoriesData: PropTypes.object,\r\n  getApplicationsLogic: PropTypes.func,\r\n  getLinesofBusinessLogic: PropTypes.func,\r\n  getCategoriesLogic: PropTypes.func,\r\n  getReasonsLogic: PropTypes.func,\r\n  getRecipientsLogic: PropTypes.func,\r\n  getLanguagesLogic: PropTypes.func,\r\n  getProgramsLogic: PropTypes.func,\r\n  getOpsSegmentsLogic: PropTypes.func,\r\n  saveTemplateLogic: PropTypes.func,\r\n  history: PropTypes.object,\r\n  reasons: PropTypes.object,\r\n  languages: PropTypes.object,\r\n  recipientsData: PropTypes.object,\r\n  programs: PropTypes.object,\r\n  opsSegments: PropTypes.object,\r\n};\r\n\r\nexport const AddNewTemplates = connect(\r\n  (state) => ({\r\n    clients: userAppClientsSelector(state),\r\n    applicationsData: applicationSelector(state),\r\n    linesOfBusinessData: linesOfBusinessSelector(state),\r\n    categoriesData: categorySelector(state),\r\n    reasons: reasonsSelector(state),\r\n    recipientsData: recipientsSelector(state),\r\n    languages: languagesSelector(state),\r\n    programs: programsSelector(state),\r\n    opsSegments: opsSegmentsSelector(state),\r\n  }),\r\n  {\r\n    getApplicationsLogic,\r\n    getLinesofBusinessLogic,\r\n    getCategoriesLogic,\r\n    getReasonsLogic,\r\n    getRecipientsLogic,\r\n    getLanguagesLogic,\r\n    getProgramsLogic,\r\n    getOpsSegmentsLogic,\r\n    saveTemplateLogic,\r\n  }\r\n)(EhWithTracking(AddNewTemplatesComponent, \"AddNewTemplatesComponent\"));\r\n","import styled from \"styled-components\";\r\nimport { isEmpty } from \"lodash\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { EhFlexBox, EhTextMat, Spacing } from \"@evolent/prism-react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst StyledText = styled(EhTextMat)`\r\n  && {\r\n    margin-top: ${Spacing.spacingMedium};\r\n    padding: ${Spacing.spacingSmall};\r\n  }\r\n`;\r\n\r\nexport const GuideFilterPills = ({ filters }) => {\r\n  const { application, fieldName } = filters;\r\n  return (\r\n    <EhFlexBox justifyContent=\"space-between\">\r\n      <Grid.Column width={2}>\r\n        {!isEmpty(application) && (\r\n          <StyledText>Application: {application.name}</StyledText>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={1}>\r\n        {!isEmpty(fieldName) && !isEmpty(application) && (\r\n          <StyledText> | </StyledText>\r\n        )}\r\n      </Grid.Column>\r\n      <Grid.Column width={4}>\r\n        {!isEmpty(fieldName) && <StyledText>Name: {fieldName}</StyledText>}\r\n      </Grid.Column>\r\n    </EhFlexBox>\r\n  );\r\n};\r\n\r\nGuideFilterPills.propTypes = {\r\n  filters: PropTypes.object,\r\n};\r\n","import { Transition } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { EhWithTracking } from \"@evolent/prism-react\";\r\nimport { GuideFilters } from \"./GuideFilters\";\r\nimport { SliderContent } from \"../../commonStyles/commonStyles\";\r\nimport { EXPAND_SLIDER_DURATION } from \"../../constants/templateFilters\";\r\n\r\nconst GuideFilterSliderComponent = ({\r\n  showFilters,\r\n  fieldType,\r\n  onApplyFilter,\r\n}) => {\r\n  return (\r\n    <Transition.Group animation=\"slide down\" duration={EXPAND_SLIDER_DURATION}>\r\n      {showFilters && (\r\n        <SliderContent>\r\n          <GuideFilters\r\n            fieldType={fieldType}\r\n            closeFilterSlider={onApplyFilter}\r\n          />\r\n        </SliderContent>\r\n      )}\r\n    </Transition.Group>\r\n  );\r\n};\r\n\r\nGuideFilterSliderComponent.propTypes = {\r\n  showFilters: PropTypes.bool,\r\n  fieldType: PropTypes.string,\r\n  onApplyFilter: PropTypes.func,\r\n};\r\nexport const GuideFilterSlider = EhWithTracking(\r\n  GuideFilterSliderComponent,\r\n  \"GuideFilterSliderComponent\"\r\n);\r\n","import { useEffect } from \"react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  EhWithTracking,\r\n  EhForm,\r\n  EhDropdownField,\r\n  EhInputField,\r\n} from \"@evolent/prism-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { getApplicationsLogic, setGuideFilterLogic } from \"./../../services\";\r\nimport { applicationSelector, guideFiltersSelector } from \"./../../selectors\";\r\nimport {\r\n  StyledGuideFilterContainer,\r\n  StyledApplyButton,\r\n} from \"../../commonStyles/commonStyles\";\r\nimport { GUIDE_FIELDS_STATUS } from \"../../constants/guide\";\r\n\r\nconst GuideFiltersComponent = ({\r\n  appliedFilters,\r\n  fieldType,\r\n  applicationsData,\r\n  getApplicationsLogic,\r\n  setGuideFilterLogic,\r\n  closeFilterSlider,\r\n}) => {\r\n  const { loading: appLoading, data: applications } = applicationsData;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getApplicationsLogic();\r\n    })();\r\n  }, []);\r\n\r\n  const saveFiltersHandler = async (form) => {\r\n    await setGuideFilterLogic({\r\n      type: fieldType,\r\n      data: form,\r\n    });\r\n    closeFilterSlider();\r\n  };\r\n\r\n  return (\r\n    <StyledGuideFilterContainer>\r\n      <EhForm initialValues={appliedFilters} onSave={saveFiltersHandler}>\r\n        {() => (\r\n          <Grid>\r\n            <Grid.Row>\r\n              <Grid.Column width={4}>\r\n                <EhDropdownField\r\n                  fieldLabel=\"Application\"\r\n                  display=\"name\"\r\n                  loading={appLoading}\r\n                  keyField=\"value\"\r\n                  name=\"application\"\r\n                  placeholder=\"Select Application\"\r\n                  options={applications}\r\n                  clearable\r\n                  data-aq=\"applications-filter\"\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column width={5}>\r\n                <EhInputField\r\n                  name=\"fieldName\"\r\n                  fieldLabel=\"Name\"\r\n                  placeholder={`Search ${\r\n                    fieldType === GUIDE_FIELDS_STATUS.MERGE_FIELDS\r\n                      ? \"merge field\"\r\n                      : \"user defined field\"\r\n                  } name`}\r\n                  data-aq=\"name-filter\"\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column width={3}>\r\n                <StyledApplyButton primary type=\"submit\" data-aq=\"apply-button\">\r\n                  Apply\r\n                </StyledApplyButton>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        )}\r\n      </EhForm>\r\n    </StyledGuideFilterContainer>\r\n  );\r\n};\r\n\r\nGuideFiltersComponent.propTypes = {\r\n  fieldType: PropTypes.string,\r\n  appliedFilters: PropTypes.object,\r\n  applicationsData: PropTypes.object,\r\n  getApplicationsLogic: PropTypes.func,\r\n  setGuideFilterLogic: PropTypes.func,\r\n  closeFilterSlider: PropTypes.func,\r\n};\r\nexport const GuideFilters = connect(\r\n  (state, { fieldType }) => ({\r\n    applicationsData: applicationSelector(state),\r\n    appliedFilters: guideFiltersSelector(state, fieldType),\r\n  }),\r\n  {\r\n    getApplicationsLogic,\r\n    setGuideFilterLogic,\r\n  }\r\n)(EhWithTracking(GuideFiltersComponent, \"GuideFiltersComponent\"));\r\n","import { Fragment, useState, useEffect } from \"react\";\r\nimport {\r\n  EhWithTracking,\r\n  EhTextMat,\r\n  EhDataTable,\r\n  EhPaginationLabel,\r\n  EhTablePagination,\r\n  EhButton,\r\n} from \"@evolent/prism-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { chunk, isEmpty } from \"lodash\";\r\nimport {\r\n  FIELDS_PER_PAGE,\r\n  GUIDE_FIELDS_STATUS,\r\n  MERGE_FIELDS_COLUMNS,\r\n  MESSAGES,\r\n} from \"../../constants/guide\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { GuideFilterPills } from \"./GuideFilterPills\";\r\nimport { getMergeFieldsLogic, sortFieldsByColumns } from \"../../services\";\r\nimport {\r\n  mergeFieldsSelector,\r\n  guideFiltersSelector,\r\n  filterGuideFields,\r\n  filterButtonText,\r\n} from \"../../selectors\";\r\nimport {\r\n  StyledBox,\r\n  StyledDiv,\r\n  StyledHeader,\r\n  StyledOuterContainer,\r\n  StyledInnerContainer,\r\n  StyledEhMessage,\r\n  StyledTableContainer,\r\n  StyledFlexBox,\r\n  StyledFilterDiv,\r\n} from \"../../commonStyles/commonStyles\";\r\nimport { GuideFilterSlider } from \"./GuideFilterSlider\";\r\n\r\nconst { APPLICATION, NAME, DESCRIPTION } = MERGE_FIELDS_COLUMNS;\r\nconst getMergeFieldsColumns = () => [\r\n  {\r\n    width: 2,\r\n    field: APPLICATION.fieldName,\r\n    header: APPLICATION.name,\r\n    id: APPLICATION.id,\r\n    renderData: (mergeField) => (\r\n      <EhTextMat ellipsis>{mergeField.application}</EhTextMat>\r\n    ),\r\n  },\r\n  {\r\n    width: 2,\r\n    field: NAME.fieldName,\r\n    header: NAME.name,\r\n    id: NAME.id,\r\n    renderData: (mergeField) => (\r\n      <EhTextMat ellipsis>{mergeField.displayName}</EhTextMat>\r\n    ),\r\n  },\r\n  {\r\n    width: 8,\r\n    field: DESCRIPTION.fieldName,\r\n    header: DESCRIPTION.name,\r\n    id: DESCRIPTION.id,\r\n    renderData: (mergeField) => (\r\n      <EhTextMat ellipsis>{mergeField.description}</EhTextMat>\r\n    ),\r\n  },\r\n];\r\nconst MergeFieldsComponent = ({\r\n  mergeFields,\r\n  getMergeFieldsLogic,\r\n  guideFilters,\r\n}) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [mergeFieldsError, setMergeFieldsError] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [tableState, setTableState] = useState({\r\n    sortColumn: NAME.fieldName,\r\n    sortDescending: false,\r\n  });\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const filterHasData = !isEmpty(guideFilters);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        await getMergeFieldsLogic();\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setMergeFieldsError(true);\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  if (filterHasData) {\r\n    mergeFields = filterGuideFields(guideFilters, mergeFields);\r\n  }\r\n  const totalMergeFieldsCount = mergeFields?.length;\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n  }, [guideFilters]);\r\n\r\n  const onSortChange = ({ field, sortDescending }) => {\r\n    setTableState({\r\n      sortColumn: field,\r\n      sortDescending,\r\n    });\r\n  };\r\n\r\n  const sortedMergeFields = chunk(\r\n    sortFieldsByColumns(\r\n      mergeFields,\r\n      tableState.sortColumn,\r\n      tableState.sortDescending\r\n    ),\r\n    FIELDS_PER_PAGE\r\n  )[page - 1];\r\n\r\n  const showPaginationContent = !loading && mergeFields.length;\r\n  const paginationContent = showPaginationContent ? (\r\n    <div>\r\n      <StyledFlexBox justifyContent=\"space-between\" alignItems=\"baseline\">\r\n        <EhPaginationLabel\r\n          pageNumber={page}\r\n          totalCount={totalMergeFieldsCount}\r\n          pageSize={FIELDS_PER_PAGE}\r\n          endingText=\"Merge Fields\"\r\n        />\r\n        <EhTablePagination\r\n          data-aq=\"merge-fields-table-pagination\"\r\n          totalPages={Math.ceil(totalMergeFieldsCount / FIELDS_PER_PAGE)}\r\n          activePage={page}\r\n          onPageChange={(e, { activePage, totalPages }) => {\r\n            activePage <= totalPages + 1 && setPage(activePage);\r\n          }}\r\n        />\r\n      </StyledFlexBox>\r\n    </div>\r\n  ) : null;\r\n\r\n  return (\r\n    <Fragment>\r\n      <StyledBox>\r\n        <StyledDiv>\r\n          <Grid>\r\n            <Grid.Column width={2}>\r\n              <StyledHeader data-aq=\"merge-fields-title\">\r\n                Merge Fields\r\n              </StyledHeader>\r\n            </Grid.Column>\r\n            <GuideFilterPills filters={guideFilters} />\r\n            <Grid.Column width={3} floated=\"right\">\r\n              <StyledFilterDiv floated=\"right\">\r\n                <EhButton\r\n                  text={`${\r\n                    filterOpen ? \"Discard\" : filterButtonText(guideFilters)\r\n                  } Filter`}\r\n                  data-aq=\"filter-button\"\r\n                  onClick={() => setFilterOpen(!filterOpen)}\r\n                  negative={filterOpen}\r\n                />\r\n              </StyledFilterDiv>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </StyledDiv>\r\n      </StyledBox>\r\n      <GuideFilterSlider\r\n        showFilters={filterOpen}\r\n        fieldType={GUIDE_FIELDS_STATUS.MERGE_FIELDS}\r\n        onApplyFilter={() => setFilterOpen(false)}\r\n      />\r\n      <StyledOuterContainer>\r\n        <StyledInnerContainer>\r\n          {paginationContent}\r\n          <StyledTableContainer>\r\n            <EhDataTable\r\n              stickyArea={{ headers: true }}\r\n              key={`merge-fields-${loading}`}\r\n              fixed\r\n              loading={loading}\r\n              columns={getMergeFieldsColumns()}\r\n              data={sortedMergeFields}\r\n              keyField=\"id\"\r\n              noResultsMessage={\r\n                <StyledEhMessage\r\n                  warning={!mergeFieldsError}\r\n                  error={mergeFieldsError}\r\n                  header={\r\n                    mergeFieldsError\r\n                      ? MESSAGES.ERROR_GETTING_MERGE_FIELDS\r\n                      : MESSAGES.NO_MERGE_FIELDS_MESSAGE\r\n                  }\r\n                  data-aq=\"no-merge-fields-message\"\r\n                />\r\n              }\r\n              data-aq=\"merge-fields-table\"\r\n              sortable\r\n              sortColumn={tableState.sortColumn}\r\n              sortDescending={tableState.sortDescending}\r\n              onSortChange={onSortChange}\r\n            />\r\n          </StyledTableContainer>\r\n          {paginationContent}\r\n        </StyledInnerContainer>\r\n      </StyledOuterContainer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMergeFieldsComponent.propTypes = {\r\n  getMergeFieldsLogic: PropTypes.func,\r\n  mergeFields: PropTypes.array,\r\n  guideFilters: PropTypes.object,\r\n};\r\n\r\nexport const MergeFields = connect(\r\n  (state) => {\r\n    return {\r\n      mergeFields: mergeFieldsSelector(state),\r\n      guideFilters: guideFiltersSelector(\r\n        state,\r\n        GUIDE_FIELDS_STATUS.MERGE_FIELDS\r\n      ),\r\n    };\r\n  },\r\n  {\r\n    getMergeFieldsLogic,\r\n  }\r\n)(EhWithTracking(MergeFieldsComponent, \"MergeFieldsComponent\"));\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport {\r\n  EhTextMat,\r\n  EhDataTable,\r\n  EhWithTracking,\r\n  EhPaginationLabel,\r\n  EhTablePagination,\r\n  EhButton,\r\n} from \"@evolent/prism-react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { chunk, isEmpty } from \"lodash\";\r\nimport { getAskFieldLogic, sortFieldsByColumns } from \"../../services\";\r\nimport {\r\n  USER_DEFINED_FIELD_COLUMNS,\r\n  MESSAGES,\r\n  FIELDS_PER_PAGE,\r\n  GUIDE_FIELDS_STATUS,\r\n} from \"../../constants/guide\";\r\nimport {\r\n  userDefinedFieldsSelector,\r\n  guideFiltersSelector,\r\n  filterGuideFields,\r\n  filterButtonText,\r\n} from \"../../selectors\";\r\nimport {\r\n  StyledBox,\r\n  StyledDiv,\r\n  StyledHeader,\r\n  StyledOuterContainer,\r\n  StyledInnerContainer,\r\n  StyledEhMessage,\r\n  StyledTableContainer,\r\n  StyledFlexBox,\r\n  StyledFilterDiv,\r\n} from \"../../commonStyles/commonStyles\";\r\nimport { GuideFilterSlider } from \"./GuideFilterSlider\";\r\nimport { GuideFilterPills } from \"./GuideFilterPills\";\r\n\r\nconst {\r\n  APPLICATION,\r\n  NAME,\r\n  PROMPT_TEXT,\r\n  REFERENCE_TEXT,\r\n} = USER_DEFINED_FIELD_COLUMNS;\r\n\r\nconst getUserDefinedFieldTableColumns = () => [\r\n  {\r\n    width: 1,\r\n    field: APPLICATION.fieldName,\r\n    header: APPLICATION.name,\r\n    id: APPLICATION.id,\r\n    renderData: (askField) => (\r\n      <EhTextMat ellipsis>{askField.application}</EhTextMat>\r\n    ),\r\n  },\r\n  {\r\n    width: 2,\r\n    field: NAME.fieldName,\r\n    header: NAME.name,\r\n    id: NAME.id,\r\n    renderData: (askField) => (\r\n      <EhTextMat ellipsis>{askField.displayName}</EhTextMat>\r\n    ),\r\n  },\r\n  {\r\n    width: 5,\r\n    field: PROMPT_TEXT.fieldName,\r\n    header: PROMPT_TEXT.name,\r\n    id: PROMPT_TEXT.id,\r\n    renderData: (askField) => (\r\n      <EhTextMat ellipsis>{askField.promptText}</EhTextMat>\r\n    ),\r\n  },\r\n  {\r\n    width: 2,\r\n    field: REFERENCE_TEXT.fieldName,\r\n    header: REFERENCE_TEXT.name,\r\n    id: REFERENCE_TEXT.id,\r\n    renderData: (askField) => <EhTextMat>{askField.hasRefText}</EhTextMat>,\r\n  },\r\n];\r\n\r\nconst UserDefinedFieldComponent = ({\r\n  askFields,\r\n  getAskFieldLogic,\r\n  guideFilters,\r\n}) => {\r\n  const [loading, setLoading] = useState(true);\r\n  const [askFieldsError, setAskFieldsError] = useState(false);\r\n  const [page, setPage] = useState(1);\r\n  const [tableState, setTableState] = useState({\r\n    sortColumn: NAME.fieldName,\r\n    sortDescending: false,\r\n  });\r\n  const [filterOpen, setFilterOpen] = useState(false);\r\n  const filterHasData = !isEmpty(guideFilters);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        await getAskFieldLogic();\r\n        setLoading(false);\r\n      } catch (error) {\r\n        setAskFieldsError(true);\r\n        setLoading(false);\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n  }, [guideFilters]);\r\n\r\n  const onSortChange = ({ field, sortDescending }) => {\r\n    setTableState({\r\n      sortColumn: field,\r\n      sortDescending,\r\n    });\r\n  };\r\n\r\n  if (filterHasData) {\r\n    askFields = filterGuideFields(guideFilters, askFields);\r\n  }\r\n\r\n  const totalFieldCount = askFields?.length;\r\n  const sortedUserDefinedFields = chunk(\r\n    sortFieldsByColumns(\r\n      askFields,\r\n      tableState.sortColumn,\r\n      tableState.sortDescending\r\n    ),\r\n    FIELDS_PER_PAGE\r\n  )[page - 1];\r\n\r\n  const showPagination = !loading && askFields.length;\r\n  const paginationContent = showPagination ? (\r\n    <div>\r\n      <StyledFlexBox justifyContent=\"space-between\" alignItems=\"baseline\">\r\n        <EhPaginationLabel\r\n          pageNumber={page}\r\n          totalCount={totalFieldCount}\r\n          pageSize={FIELDS_PER_PAGE}\r\n          endingText=\"User Defined Fields\"\r\n        />\r\n        <EhTablePagination\r\n          data-aq=\"user-defined-field-table-pagination\"\r\n          totalPages={Math.ceil(totalFieldCount / FIELDS_PER_PAGE)}\r\n          activePage={page}\r\n          onPageChange={(e, { activePage, totalPages }) => {\r\n            activePage <= totalPages + 1 && setPage(activePage);\r\n          }}\r\n        />\r\n      </StyledFlexBox>\r\n    </div>\r\n  ) : null;\r\n\r\n  return (\r\n    <Fragment>\r\n      <StyledBox>\r\n        <StyledDiv>\r\n          <Grid>\r\n            <Grid.Column width={2}>\r\n              <StyledHeader data-aq=\"user-defined-field-title\">\r\n                User Defined Fields\r\n              </StyledHeader>\r\n            </Grid.Column>\r\n            <GuideFilterPills filters={guideFilters} />\r\n            <Grid.Column width={3} floated=\"right\">\r\n              <StyledFilterDiv>\r\n                <EhButton\r\n                  text={`${\r\n                    filterOpen ? \"Discard\" : filterButtonText(guideFilters)\r\n                  } Filter`}\r\n                  data-aq=\"filter-button\"\r\n                  onClick={() => setFilterOpen(!filterOpen)}\r\n                  negative={filterOpen}\r\n                />\r\n              </StyledFilterDiv>\r\n            </Grid.Column>\r\n          </Grid>\r\n        </StyledDiv>\r\n      </StyledBox>\r\n      <GuideFilterSlider\r\n        showFilters={filterOpen}\r\n        fieldType={GUIDE_FIELDS_STATUS.USER_DEFINED_FIELDS}\r\n        onApplyFilter={() => setFilterOpen(false)}\r\n      />\r\n      <StyledOuterContainer>\r\n        <StyledInnerContainer>\r\n          {paginationContent}\r\n          <StyledTableContainer>\r\n            <EhDataTable\r\n              stickyArea={{ headers: true }}\r\n              fixed\r\n              key={`ask-fields-${loading}`}\r\n              loading={loading}\r\n              columns={getUserDefinedFieldTableColumns()}\r\n              data={sortedUserDefinedFields}\r\n              keyField=\"id\"\r\n              noResultsMessage={\r\n                <StyledEhMessage\r\n                  warning={!askFieldsError}\r\n                  error={askFieldsError}\r\n                  header={\r\n                    askFieldsError\r\n                      ? MESSAGES.ERROR_GETTING_USER_DEFINED_FIELDS\r\n                      : MESSAGES.NO_USER_DEFINED_FIELDS_MESSAGE\r\n                  }\r\n                  data-aq=\"no-user-defined-fields-message\"\r\n                />\r\n              }\r\n              data-aq=\"user-defined-field-table\"\r\n              sortable\r\n              onSortChange={onSortChange}\r\n              sortColumn={tableState.sortColumn}\r\n              sortDescending={tableState.sortDescending}\r\n            />\r\n          </StyledTableContainer>\r\n          {paginationContent}\r\n        </StyledInnerContainer>\r\n      </StyledOuterContainer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nUserDefinedFieldComponent.propTypes = {\r\n  getAskFieldLogic: PropTypes.func,\r\n  askFields: PropTypes.array,\r\n  guideFilters: PropTypes.object,\r\n};\r\nexport const UserDefinedField = connect(\r\n  (state) => {\r\n    return {\r\n      askFields: userDefinedFieldsSelector(state),\r\n      guideFilters: guideFiltersSelector(\r\n        state,\r\n        GUIDE_FIELDS_STATUS.USER_DEFINED_FIELDS\r\n      ),\r\n    };\r\n  },\r\n  { getAskFieldLogic }\r\n)(EhWithTracking(UserDefinedFieldComponent, \"UserDefinedFieldComponent\"));\r\n","import { Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Grid, Image, Icon } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  EhLayoutHeader,\r\n  EhHeaderMenu,\r\n  EhWithTracking,\r\n  EhAlertModalMat,\r\n  showModal,\r\n  EhAppDrawer,\r\n  EhButton,\r\n  EhFlexBox,\r\n  EhMenu,\r\n  Colors,\r\n  Spacing,\r\n  Typography,\r\n} from \"@evolent/prism-react\";\r\nimport {\r\n  APP_SETTINGS,\r\n  Session,\r\n  handleContactSupport,\r\n  download,\r\n} from \"@evolent/roots\";\r\nimport { downloadStarterTemplateLogic } from \"../../services\";\r\n\r\nconst StyledMenu = styled(EhMenu)`\r\n  &&&&& {\r\n    margin-left: ${Spacing.spacingXxxLarge};\r\n    .item {\r\n      :hover {\r\n        background-color: rgb(25, 30, 80);\r\n      }\r\n      &.active {\r\n        border-color: ${Colors.aqua[75]};\r\n      }\r\n      padding: 0.8rem ${Spacing.spacingSmall} ${Spacing.spacingSmall};\r\n      font-weight: ${Typography.fontWeightRegular};\r\n      font-size: ${Typography.fontSizeMedium};\r\n      border-bottom-width: ${Spacing.spacingXxSmall};\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledIcon = styled(Icon)`\r\n  &&&& {\r\n    color: ${Colors.white};\r\n    cursor: pointer;\r\n    margin: 0 ${Spacing.spacingMedium};\r\n    font-size: ${Typography.fontSizeLarge};\r\n  }\r\n`;\r\n\r\nconst StyledLayoutHeader = styled(EhLayoutHeader)`\r\n  &&&&& {\r\n    height: 50px;\r\n    padding: 0 ${Spacing.spacingXLarge};\r\n  }\r\n`;\r\n\r\nconst StyledLogo = styled(Image)`\r\n  && {\r\n    width: 234px;\r\n    max-width: 234px;\r\n  }\r\n`;\r\n\r\nconst ContactSupportButton = styled(EhButton)`\r\n  &&&&& {\r\n    background-color: transparent !important;\r\n  }\r\n`;\r\n\r\nconst HeaderComponent = (props) => {\r\n  const apps = [\"/published\", \"/archived\", \"/new\"];\r\n  const { user, location, downloadStarterTemplateLogic } = props;\r\n  const { firstName, lastName, email } = user;\r\n  const isJiraSupportLinkEnabled = APP_SETTINGS.jiraSupportLinkEnabled;\r\n\r\n  const downloadStarterTemplate = async () => {\r\n    const logic = () => downloadStarterTemplateLogic();\r\n\r\n    await download(logic);\r\n  };\r\n\r\n  const logo = (\r\n    <Link to=\"/\">\r\n      <StyledLogo alt=\"Identifi App\" src=\"images/Identifi_Admin_Tools.svg\" />\r\n    </Link>\r\n  );\r\n\r\n  const appControls = (\r\n    <Grid.Column>\r\n      <StyledMenu inverted pointing>\r\n        <EhMenu.Item\r\n          key=\"navItem1\"\r\n          name=\"Letter Templates\"\r\n          active={apps.includes(location.pathname)}\r\n          as={Link}\r\n          to=\"/\"\r\n        />\r\n      </StyledMenu>\r\n    </Grid.Column>\r\n  );\r\n\r\n  const platformControls = (\r\n    <Fragment>\r\n      <StyledIcon\r\n        name=\"download\"\r\n        onClick={downloadStarterTemplate}\r\n        data-aq=\"download-template-icon\"\r\n      />\r\n      <EhHeaderMenu\r\n        icon=\"question circle\"\r\n        items={[\r\n          {\r\n            display: \"Merge Fields\",\r\n            name: \"Merge-fields\",\r\n            onClick: () => {\r\n              window.open(\r\n                `${\r\n                  process.env.NODE_ENV === \"production\"\r\n                    ? \"/letterAdminTool\"\r\n                    : \"\"\r\n                }/#/merge-fields`\r\n              );\r\n            },\r\n          },\r\n          {\r\n            display: \"User Defined Fields\",\r\n            name: \"User-defined-fields\",\r\n            onClick: () => {\r\n              window.open(\r\n                `${\r\n                  process.env.NODE_ENV === \"production\"\r\n                    ? \"/letterAdminTool\"\r\n                    : \"\"\r\n                }/#/user-defined-fields`\r\n              );\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n      <EhAppDrawer type=\"popup\" data-aq=\"app-drawer\" />\r\n      <EhHeaderMenu\r\n        icon=\"user circle\"\r\n        header={firstName + \" \" + lastName}\r\n        items={[\r\n          {\r\n            display: \"My Profile\",\r\n            name: \"My-profile\",\r\n            onClick: () => {\r\n              window.open(`${APP_SETTINGS.launcherUrl}#/profile`);\r\n            },\r\n          },\r\n          ...(isJiraSupportLinkEnabled\r\n            ? [\r\n                {\r\n                  display: (\r\n                    <EhFlexBox>\r\n                      Contact Support\r\n                      <ContactSupportButton\r\n                        borderless\r\n                        icon=\"external\"\r\n                        size=\"small\"\r\n                      />\r\n                    </EhFlexBox>\r\n                  ),\r\n                  name: \"contactSupport\",\r\n                  onClick: async () => {\r\n                    handleContactSupport(email);\r\n                  },\r\n                },\r\n              ]\r\n            : []),\r\n          {\r\n            display: \"Sign Out\",\r\n            name: \"User-sign-out\",\r\n            onClick: () => {\r\n              const closeModal = showModal(\r\n                <EhAlertModalMat\r\n                  heading=\"Are you sure you want to sign out?\"\r\n                  buttons={[\r\n                    {\r\n                      text: \"Cancel\",\r\n                      onClick: () => closeModal(),\r\n                    },\r\n                    {\r\n                      text: \"Sign out\",\r\n                      negative: true,\r\n                      onClick: async () => {\r\n                        await Session.end();\r\n                      },\r\n                    },\r\n                  ]}\r\n                />\r\n              );\r\n            },\r\n          },\r\n        ]}\r\n      />\r\n    </Fragment>\r\n  );\r\n\r\n  return (\r\n    <StyledLayoutHeader\r\n      logo={logo}\r\n      appControls={appControls}\r\n      platformControls={platformControls}\r\n    />\r\n  );\r\n};\r\n\r\nHeaderComponent.propTypes = {\r\n  user: PropTypes.object,\r\n  location: PropTypes.shape({\r\n    pathname: PropTypes.string,\r\n  }),\r\n  downloadStarterTemplateLogic: PropTypes.func,\r\n};\r\n\r\nexport const Header = connect(null, { downloadStarterTemplateLogic })(\r\n  EhWithTracking(HeaderComponent, \"HeaderComponent\")\r\n);\r\n","import { useEffect } from \"react\";\r\nimport { Switch, Redirect, Route, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  EhGlobalComponents,\r\n  EhRoute,\r\n  Forbidden,\r\n  SecureSession,\r\n  EhWithTracking,\r\n  Footer,\r\n  getTermsAndConditionLogic,\r\n} from \"@evolent/prism-react\";\r\nimport {\r\n  getUserProfile,\r\n  hasAccessSelector,\r\n  APP_SETTINGS,\r\n  getUserProfileSelector,\r\n  AppInsightsService,\r\n} from \"@evolent/roots\";\r\nimport { Header } from \"./Header\";\r\nimport { MergeFields } from \"../guide/MergeFields\";\r\nimport { UserDefinedField } from \"../guide/UserDefinedField\";\r\nimport { TemplatesHomePage } from \"../templates-list/TemplatesHomePage\";\r\nimport { AddNewTemplates } from \"../add-new-templates/AddNewTemplates\";\r\nimport { TemplateDetails } from \"../template-details/TemplateDetails\";\r\nimport { DEFAULT_BACKGROUND_COLOR } from \"./../../constants/global\";\r\n\r\nconst StyledContainer = styled.div`\r\n  display: grid;\r\n  background-color: ${DEFAULT_BACKGROUND_COLOR} !important;\r\n`;\r\n\r\nconst Layout = ({\r\n  hasAccess,\r\n  loggedInUserMeta,\r\n  getUserProfile,\r\n  location,\r\n  getTermsAndConditionLogic,\r\n}) => {\r\n  useEffect(() => {\r\n    !hasAccess &&\r\n      window.location.replace(APP_SETTINGS.launcherUrl + \"#/no-access\");\r\n  }, [hasAccess]);\r\n\r\n  const onAuthenticateSuccess = async () => {\r\n    await getUserProfile();\r\n    loggedInUserMeta && AppInsightsService.setAuthId(loggedInUserMeta.userKey);\r\n  };\r\n\r\n  const setAuthorizationToken = (token) => {\r\n    axios.defaults.headers.common[\"Authorization\"] = token;\r\n  };\r\n\r\n  return (\r\n    <SecureSession\r\n      onSessionStart={onAuthenticateSuccess}\r\n      setAuthorizationToken={setAuthorizationToken}\r\n      hasAccess={hasAccess}\r\n    >\r\n      <StyledContainer>\r\n        <Header user={loggedInUserMeta} location={location} />\r\n        <Switch>\r\n          <Route exact path=\"/\" render={() => <Redirect to=\"/published\" />} />\r\n          <EhRoute\r\n            exact\r\n            path=\"/published\"\r\n            component={TemplatesHomePage}\r\n            title=\"Published Templates\"\r\n          />\r\n          <EhRoute\r\n            exact\r\n            path=\"/new\"\r\n            component={TemplatesHomePage}\r\n            title=\"New Templates\"\r\n          />\r\n          <EhRoute\r\n            exact\r\n            path=\"/archived\"\r\n            component={TemplatesHomePage}\r\n            title=\"Archived Templates\"\r\n          />\r\n          <EhRoute\r\n            exact\r\n            path=\"/merge-fields\"\r\n            component={MergeFields}\r\n            title=\"Merge Fields\"\r\n          />\r\n          <EhRoute\r\n            exact\r\n            path=\"/user-defined-fields\"\r\n            component={UserDefinedField}\r\n            title=\"User Defined Fields\"\r\n          />\r\n          <EhRoute\r\n            exact\r\n            path=\"/add-new-templates\"\r\n            component={AddNewTemplates}\r\n            title=\"Add New Templates\"\r\n          />\r\n          <EhRoute\r\n            exact\r\n            path=\"/clients/:clientId/template-details/:templateId\"\r\n            component={TemplateDetails}\r\n            title=\"Template Details\"\r\n          />\r\n          <EhRoute exact path=\"*\" component={Forbidden} title=\"Forbidden\" />\r\n        </Switch>\r\n        <Footer\r\n          getTermsLogic={getTermsAndConditionLogic}\r\n          color={DEFAULT_BACKGROUND_COLOR}\r\n        />\r\n      </StyledContainer>\r\n      <EhGlobalComponents />\r\n    </SecureSession>\r\n  );\r\n};\r\n\r\nLayout.propTypes = {\r\n  getUserProfile: PropTypes.func,\r\n  hasAccess: PropTypes.bool,\r\n  location: PropTypes.shape({\r\n    search: PropTypes.string,\r\n  }),\r\n  loggedInUserMeta: PropTypes.object,\r\n  getTermsAndConditionLogic: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n  hasAccess: hasAccessSelector(state),\r\n  loggedInUserMeta: getUserProfileSelector(state),\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  getUserProfile,\r\n  getTermsAndConditionLogic,\r\n})(withRouter(EhWithTracking(Layout, \"Layout\")));\r\n","import { Fragment } from \"react\";\r\nimport Dropzone from \"react-dropzone\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport {\r\n  Colors,\r\n  Spacing,\r\n  Typography,\r\n  EhButton,\r\n  EhTextMat,\r\n} from \"@evolent/prism-react\";\r\n\r\nconst StyledDropzone = styled(Dropzone)`\r\n  &[style] {\r\n    height: 3rem;\r\n    width: auto;\r\n    border-style: dashed;\r\n    border-color: ${Colors.indigo[25]};\r\n    border-width: ${Spacing.borderWidthThin};\r\n    border-radius: ${Spacing.borderRadiusLarge};\r\n    padding: ${Spacing.spacingXSmall};\r\n    display: flex;\r\n    align-items: center;\r\n    color: ${Colors.blue[100]};\r\n    font-weight: ${Typography.fontWeightBold};\r\n    font-size: ${Typography.fontSizeSmall};\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst MultiFileUpload = ({\r\n  accept,\r\n  name,\r\n  onChange,\r\n  acceptText,\r\n  buttonText,\r\n}) => {\r\n  return (\r\n    <Fragment>\r\n      <StyledDropzone\r\n        accept={accept}\r\n        name={name}\r\n        multiple\r\n        onDrop={(acceptedFiles) => onChange(acceptedFiles)}\r\n      >\r\n        <Fragment>\r\n          <EhButton text={buttonText} primary />\r\n          or Drag File Here\r\n        </Fragment>\r\n      </StyledDropzone>\r\n      <EhTextMat>{acceptText}</EhTextMat>\r\n    </Fragment>\r\n  );\r\n};\r\nMultiFileUpload.propTypes = {\r\n  accept: PropTypes.string,\r\n  name: PropTypes.string,\r\n  onChange: PropTypes.func,\r\n  acceptText: PropTypes.string,\r\n  buttonText: PropTypes.string,\r\n};\r\n\r\nexport default MultiFileUpload;\r\n","import { useState, useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport {\r\n  EhWithTracking,\r\n  EhFormModalMat,\r\n  EhButton,\r\n  EhButtonGroup,\r\n  EhTextareaField,\r\n  EhDocument,\r\n  EhLoader,\r\n  ehToast,\r\n} from \"@evolent/prism-react\";\r\nimport {\r\n  getTemplateUdfLogic,\r\n  setTemplateUdfLogic,\r\n  getTemplateContentLogic,\r\n  publishTemplateLogic,\r\n  publishTemplateVersionLogic,\r\n} from \"../../services\";\r\nimport { PREVIEW_TITLES } from \"../../constants/templateActions\";\r\nimport { showUnsavedWarningModal } from \"../../commonUtil/unsavedWarningModal\";\r\nimport { TOAST_MESSAGES, TOAST_PROPS } from \"../../constants/global\";\r\n\r\nconst PreviewTemplate = (props) => {\r\n  const {\r\n    configId,\r\n    clientId,\r\n    id,\r\n    templateId,\r\n    configuration,\r\n    closeModal,\r\n    getTemplateUdfLogic,\r\n    setTemplateUdfLogic,\r\n    getTemplateContentLogic,\r\n    publishTemplate,\r\n    publishTemplateLogic,\r\n    publishTemplateVersionLogic,\r\n  } = props;\r\n  let showUnsavedWarning = false;\r\n  const [udf, setUdf] = useState([]);\r\n  const [currentStep, setCurrentStep] = useState(1);\r\n  const [showBackButton, setShowBackButton] = useState(true);\r\n  const [loading, setLoading] = useState(true);\r\n  const [generatedTemplateId, setGeneratedTemplateId] = useState();\r\n\r\n  const generateTemplate = async (form) => {\r\n    const data = await setTemplateUdfLogic({\r\n      clientId,\r\n      configId,\r\n      params: form || {},\r\n      cacheKey: id,\r\n    });\r\n    setGeneratedTemplateId(data.id);\r\n    setCurrentStep(2);\r\n  };\r\n\r\n  const onSave = async (form) => {\r\n    if (currentStep === 1) {\r\n      await generateTemplate(form);\r\n    } else {\r\n      if (configuration) {\r\n        await publishTemplateVersionLogic({\r\n          configuration,\r\n          clientId,\r\n          templateId,\r\n        });\r\n      } else {\r\n        await publishTemplateLogic({\r\n          clientId,\r\n          configurationId: configId,\r\n        });\r\n      }\r\n      closeModal();\r\n      ehToast.success(null, TOAST_MESSAGES.TEMPLATE_PUBLISH_SUCCESS, {\r\n        ...TOAST_PROPS,\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      try {\r\n        const data = await getTemplateUdfLogic({ configId, clientId, id });\r\n        if (!data.data.length) {\r\n          await generateTemplate();\r\n          setShowBackButton(false);\r\n        }\r\n        setUdf(data.data);\r\n        setLoading(false);\r\n      } catch (error) {\r\n        closeModal();\r\n      }\r\n    })();\r\n  }, []);\r\n\r\n  const getModalHeader = () => {\r\n    return currentStep === 1\r\n      ? PREVIEW_TITLES.STEP_ONE\r\n      : PREVIEW_TITLES.STEP_TWO;\r\n  };\r\n\r\n  const getModalContent = () =>\r\n    currentStep === 1 ? (\r\n      <Grid>\r\n        {udf.map((field) => (\r\n          <Grid.Row key={`${field.bookmarkName}`}>\r\n            <Grid.Column width={12}>\r\n              <EhTextareaField\r\n                fieldLabel={field.promptText}\r\n                name={field.bookmarkName}\r\n                rows={6}\r\n                required\r\n                maxLength={500}\r\n              />\r\n            </Grid.Column>\r\n          </Grid.Row>\r\n        ))}\r\n      </Grid>\r\n    ) : (\r\n      <EhDocument\r\n        logic={() =>\r\n          getTemplateContentLogic({\r\n            id: generatedTemplateId,\r\n          })\r\n        }\r\n      />\r\n    );\r\n\r\n  if (loading) {\r\n    return <EhLoader loaderContent=\"Loading\" />;\r\n  }\r\n\r\n  return (\r\n    <EhFormModalMat\r\n      size=\"large\"\r\n      onSave={onSave}\r\n      renderHeader={getModalHeader}\r\n      renderFooter={(form) => {\r\n        showUnsavedWarning = form?.dirty;\r\n        return (\r\n          <Grid>\r\n            <Grid.Row>\r\n              <Grid.Column>\r\n                <EhButtonGroup>\r\n                  {currentStep === 1 && (\r\n                    <>\r\n                      <EhButton\r\n                        data-aq=\"cancel-button\"\r\n                        onClick={() =>\r\n                          showUnsavedWarningModal(\r\n                            showUnsavedWarning,\r\n                            closeModal\r\n                          )\r\n                        }\r\n                      >\r\n                        Cancel\r\n                      </EhButton>\r\n                      <EhButton\r\n                        primary\r\n                        type=\"submit\"\r\n                        data-aq=\"preview-template-button\"\r\n                      >\r\n                        Preview Template\r\n                      </EhButton>\r\n                    </>\r\n                  )}\r\n                  {currentStep === 2 && (\r\n                    <>\r\n                      {showBackButton && (\r\n                        <EhButton\r\n                          data-aq=\"back-button\"\r\n                          onClick={() => {\r\n                            setCurrentStep(1);\r\n                          }}\r\n                        >\r\n                          Back\r\n                        </EhButton>\r\n                      )}\r\n                      <EhButton\r\n                        data-aq=\"close-button\"\r\n                        onClick={() => closeModal()}\r\n                      >\r\n                        Close\r\n                      </EhButton>\r\n                      {publishTemplate && (\r\n                        <EhButton\r\n                          primary\r\n                          type=\"submit\"\r\n                          data-aq=\"publish-template-button\"\r\n                        >\r\n                          Publish\r\n                        </EhButton>\r\n                      )}\r\n                    </>\r\n                  )}\r\n                </EhButtonGroup>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        );\r\n      }}\r\n      closeIcon\r\n      onClose={() => showUnsavedWarningModal(showUnsavedWarning, closeModal)}\r\n      renderContent={getModalContent}\r\n    />\r\n  );\r\n};\r\n\r\nPreviewTemplate.propTypes = {\r\n  configId: PropTypes.number,\r\n  id: PropTypes.number,\r\n  clientId: PropTypes.number,\r\n  templateId: PropTypes.number,\r\n  configuration: PropTypes.object,\r\n  closeModal: PropTypes.func.isRequired,\r\n  getTemplateUdfLogic: PropTypes.func,\r\n  setTemplateUdfLogic: PropTypes.func,\r\n  getTemplateContentLogic: PropTypes.func,\r\n  publishTemplate: PropTypes.bool,\r\n  publishTemplateLogic: PropTypes.func,\r\n  publishTemplateVersionLogic: PropTypes.func,\r\n};\r\n\r\nexport default connect(null, {\r\n  getTemplateUdfLogic,\r\n  setTemplateUdfLogic,\r\n  getTemplateContentLogic,\r\n  publishTemplateLogic,\r\n  publishTemplateVersionLogic,\r\n})(EhWithTracking(PreviewTemplate, \"PreviewTemplate\"));\r\n","import PropTypes from \"prop-types\";\r\nimport { EhAlertModalMat, showModal, Colors } from \"@evolent/prism-react\";\r\nimport {\r\n  PUBLISH_REQUIRES_DATA,\r\n  PUBLISH_TEMPLATE,\r\n} from \"../../constants/templateActions\";\r\nimport { templateHasRequiredData } from \"../../services\";\r\nimport PreviewTemplate from \"./PreviewTemplate\";\r\n\r\nconst PublishTemplate = (props) => {\r\n  const { data, closeConfirmModal, hasPublishedVersion, configuration } = props;\r\n  const hasRequiredData = templateHasRequiredData(data);\r\n  const { configurationId, clientId, templateId } = data;\r\n  const modalMessage = hasPublishedVersion\r\n    ? PUBLISH_TEMPLATE.TEXT_REPLACE\r\n    : PUBLISH_TEMPLATE.TEXT;\r\n\r\n  return hasRequiredData ? (\r\n    <EhAlertModalMat\r\n      heading={PUBLISH_TEMPLATE.TITLE}\r\n      iconName=\"info-circle\"\r\n      iconColor={Colors.blue[100]}\r\n      message={modalMessage}\r\n      data-aq=\"publish-template-modal\"\r\n      buttons={[\r\n        {\r\n          text: \"Cancel\",\r\n          onClick: () => {\r\n            closeConfirmModal();\r\n          },\r\n        },\r\n        {\r\n          text: \"Ok\",\r\n          primary: true,\r\n          onClick: () => {\r\n            closeConfirmModal();\r\n            const closeModal = showModal(\r\n              <PreviewTemplate\r\n                closeModal={() => closeModal()}\r\n                configId={configurationId}\r\n                clientId={clientId}\r\n                publishTemplate\r\n                configuration={configuration}\r\n                templateId={templateId}\r\n              />\r\n            );\r\n          },\r\n        },\r\n      ]}\r\n    />\r\n  ) : (\r\n    <EhAlertModalMat\r\n      heading={PUBLISH_REQUIRES_DATA.TITLE}\r\n      iconName=\"info-circle\"\r\n      iconColor={Colors.blue[100]}\r\n      message={PUBLISH_REQUIRES_DATA.PUBLISH_TEXT}\r\n      data-aq=\"missing-required-fields-modal\"\r\n      buttons={[\r\n        {\r\n          text: \"Ok\",\r\n          onClick: () => {\r\n            closeConfirmModal();\r\n          },\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nPublishTemplate.propTypes = {\r\n  data: PropTypes.object,\r\n  configuration: PropTypes.object,\r\n  closeConfirmModal: PropTypes.func,\r\n  hasPublishedVersion: PropTypes.bool,\r\n};\r\n\r\nexport default PublishTemplate;\r\n","import { useState } from \"react\";\r\nimport { Transition, Grid } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\nimport { SliderContent } from \"../../commonStyles/commonStyles\";\r\nimport { APP_SETTINGS } from \"@evolent/roots\";\r\nimport {\r\n  EhWithTracking,\r\n  EhForm,\r\n  Spacing,\r\n  EhTextMat,\r\n  EhFileUploadField,\r\n  EhFlexBox,\r\n  EhButton,\r\n  showModal,\r\n  EhAlertModalMat,\r\n  ehToast,\r\n} from \"@evolent/prism-react\";\r\nimport { find } from \"lodash\";\r\nimport { addNewTemplateVersionLogic } from \"../../services\";\r\nimport { REPLACE_DRAFT } from \"../../constants/templateActions\";\r\nimport { EXPAND_SLIDER_DURATION } from \"../../constants/templateFilters\";\r\nimport { ATTACHMENTS_STRINGS } from \"../../constants/addNewTemplate\";\r\nimport { TEMPLATE_STATUS } from \"../../constants/templateList\";\r\nimport { TOAST_MESSAGES, TOAST_PROPS } from \"../../constants/global\";\r\n\r\nconst StyledContainer = styled.div`\r\n  && {\r\n    padding: ${Spacing.spacingLarge} ${Spacing.spacingNone}\r\n      ${Spacing.spacingXLarge} ${Spacing.spacingNone};\r\n  }\r\n`;\r\n\r\nconst StyledEhTextMat = styled(EhTextMat)`\r\n  && {\r\n    padding-left: ${Spacing.spacingXSmall};\r\n    padding-right: ${Spacing.spacingMedium};\r\n  }\r\n`;\r\n\r\nconst StyledFlexBox = styled(EhFlexBox)`\r\n  && {\r\n    margin-top: -${Spacing.spacingSmall};\r\n  }\r\n`;\r\n\r\nconst UploadTemplateComponent = ({\r\n  templateDetails,\r\n  addNewTemplateVersionLogic,\r\n  onCloseSlider,\r\n  onFileUpload,\r\n}) => {\r\n  const {\r\n    MAX_SIZE,\r\n    UPLOAD_ATTACHMENT_FORMAT,\r\n    UPLOAD_ATTACHMENT_MSG,\r\n  } = ATTACHMENTS_STRINGS;\r\n  const [validationMsg, setValidationMsg] = useState(\"\");\r\n\r\n  const saveAsDraftHandler = async (form) => {\r\n    const { file } = form;\r\n    const id = file?.data[0].id;\r\n    const { configurations } = templateDetails;\r\n    const hasDraftConfiguration = !!find(configurations, {\r\n      statusId: TEMPLATE_STATUS.NEW,\r\n    });\r\n\r\n    if (hasDraftConfiguration) {\r\n      const closeConfirmModal = showModal(\r\n        <EhAlertModalMat\r\n          message={REPLACE_DRAFT.TEXT}\r\n          heading={REPLACE_DRAFT.TITLE}\r\n          buttons={[\r\n            {\r\n              text: \"No, do not replace current draft\",\r\n              onClick: () => {\r\n                closeConfirmModal();\r\n              },\r\n              \"data-aq\": \"cancel-replace-confirmation\",\r\n            },\r\n            {\r\n              text: \"Yes, replace current draft\",\r\n              positive: true,\r\n              onClick: async () => {\r\n                await addNewTemplateVersionLogic({\r\n                  templateDetails,\r\n                  id,\r\n                });\r\n                closeConfirmModal();\r\n                onCloseSlider();\r\n                onFileUpload(false);\r\n                ehToast.success(null, TOAST_MESSAGES.TEMPLATE_DRAFT_SUCCESS, {\r\n                  ...TOAST_PROPS,\r\n                });\r\n              },\r\n              \"data-aq\": \"replace-draft\",\r\n            },\r\n          ]}\r\n        />\r\n      );\r\n    } else {\r\n      await addNewTemplateVersionLogic({ templateDetails, id });\r\n      onCloseSlider();\r\n      onFileUpload(false);\r\n      ehToast.success(null, TOAST_MESSAGES.TEMPLATE_DRAFT_SUCCESS, {\r\n        ...TOAST_PROPS,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Transition.Group animation=\"slide down\" duration={EXPAND_SLIDER_DURATION}>\r\n      <SliderContent>\r\n        <StyledContainer>\r\n          <EhForm onSave={saveAsDraftHandler}>\r\n            {(form) => (\r\n              <Grid>\r\n                <Grid.Row>\r\n                  <Grid.Column width={3}>\r\n                    <EhTextMat fontWeight=\"black\">Upload Letter</EhTextMat>\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                  <Grid.Column width={6}>\r\n                    <EhFileUploadField\r\n                      name=\"file\"\r\n                      maxSize={MAX_SIZE}\r\n                      accept={UPLOAD_ATTACHMENT_FORMAT}\r\n                      removeFromCache={false}\r\n                      required\r\n                      uploadUrl={`${APP_SETTINGS.letterAdminServices}FileCaches`}\r\n                      onChange={(response) => {\r\n                        if (!response?.data) {\r\n                          form.setFieldValue(\"file\");\r\n                          form.setFieldTouched(\"file\", false);\r\n                        } else {\r\n                          onFileUpload(true);\r\n                        }\r\n                      }}\r\n                      acceptText={UPLOAD_ATTACHMENT_MSG}\r\n                      renderError={({ message }) => {\r\n                        setValidationMsg(message);\r\n                        return (\r\n                          <EhTextMat size=\"small\" color=\"red\">\r\n                            {message}\r\n                          </EhTextMat>\r\n                        );\r\n                      }}\r\n                      uploadButtonPrimary\r\n                      showCustomisedFileUpload\r\n                    />\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                {!validationMsg && form.values.file && (\r\n                  <StyledFlexBox>\r\n                    <EhButton\r\n                      icon=\"trash alternate\"\r\n                      data-aq=\"trash-upload\"\r\n                      onClick={() => {\r\n                        form.setFieldValue(\"file\");\r\n                        form.setFieldTouched(\"file\", false);\r\n                        onFileUpload(false);\r\n                      }}\r\n                    />\r\n                    <StyledEhTextMat>\r\n                      {form.values?.file?.data[0].fileName}\r\n                    </StyledEhTextMat>\r\n                    <EhButton\r\n                      floated=\"right\"\r\n                      primary\r\n                      type=\"submit\"\r\n                      data-aq=\"save-as-draft-button\"\r\n                    >\r\n                      Save As Draft\r\n                    </EhButton>\r\n                  </StyledFlexBox>\r\n                )}\r\n              </Grid>\r\n            )}\r\n          </EhForm>\r\n        </StyledContainer>\r\n      </SliderContent>\r\n    </Transition.Group>\r\n  );\r\n};\r\n\r\nUploadTemplateComponent.propTypes = {\r\n  templateDetails: PropTypes.object,\r\n  addNewTemplateVersionLogic: PropTypes.func,\r\n  onCloseSlider: PropTypes.func,\r\n  onFileUpload: PropTypes.func,\r\n};\r\nexport const UploadTemplate = connect(null, { addNewTemplateVersionLogic })(\r\n  EhWithTracking(UploadTemplateComponent, \"UploadTemplateComponent\")\r\n);\r\n","import PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  EhAlertModalMat,\r\n  Colors,\r\n  EhWithTracking,\r\n  ehToast,\r\n} from \"@evolent/prism-react\";\r\nimport {\r\n  PUBLISH_REQUIRES_DATA,\r\n  VALIDATE_DRAFT,\r\n} from \"../../constants/templateActions\";\r\nimport { templateHasRequiredData, validateTemplateLogic } from \"../../services\";\r\nimport { TOAST_MESSAGES, TOAST_PROPS } from \"../../constants/global\";\r\n\r\nconst ValidateTemplate = (props) => {\r\n  const { data, closeModal, validateTemplateLogic, configuration } = props;\r\n\r\n  const hasRequiredData = templateHasRequiredData(data);\r\n\r\n  return hasRequiredData ? (\r\n    <EhAlertModalMat\r\n      heading={VALIDATE_DRAFT.TITLE}\r\n      iconName=\"info-circle\"\r\n      iconColor={Colors.blue[100]}\r\n      message={VALIDATE_DRAFT.TEXT}\r\n      data-aq=\"validate-template-modal\"\r\n      buttons={[\r\n        {\r\n          text: \"Cancel\",\r\n          onClick: () => {\r\n            closeModal();\r\n          },\r\n        },\r\n        {\r\n          text: \"Ok\",\r\n          primary: true,\r\n          onClick: async () => {\r\n            await validateTemplateLogic({\r\n              data,\r\n              configuration,\r\n            });\r\n            closeModal();\r\n            ehToast.success(null, TOAST_MESSAGES.VALIDATE_DRAFT_SUCCESS, {\r\n              ...TOAST_PROPS,\r\n            });\r\n          },\r\n        },\r\n      ]}\r\n    />\r\n  ) : (\r\n    <EhAlertModalMat\r\n      heading={PUBLISH_REQUIRES_DATA.TITLE}\r\n      iconName=\"info-circle\"\r\n      iconColor={Colors.blue[100]}\r\n      message={PUBLISH_REQUIRES_DATA.PUBLISH_TEXT}\r\n      data-aq=\"missing-required-fields-modal\"\r\n      buttons={[\r\n        {\r\n          text: \"Ok\",\r\n          onClick: () => {\r\n            closeModal();\r\n          },\r\n        },\r\n      ]}\r\n    />\r\n  );\r\n};\r\n\r\nValidateTemplate.propTypes = {\r\n  data: PropTypes.object,\r\n  configuration: PropTypes.object,\r\n  closeModal: PropTypes.func,\r\n  validateTemplateLogic: PropTypes.func,\r\n};\r\n\r\nexport default connect(null, { validateTemplateLogic })(\r\n  EhWithTracking(ValidateTemplate, \"ValidateTemplate\")\r\n);\r\n","import { Fragment, useEffect } from \"react\";\r\nimport {\r\n  EhForm,\r\n  EhButtonGroup,\r\n  EhButton,\r\n  EhInputField,\r\n  EhDropdownField,\r\n  EhCheckboxGroupField,\r\n  EhTextMat,\r\n  EhTextareaField,\r\n  EhWithTracking,\r\n  Colors,\r\n  Spacing,\r\n  showUnsavedChangeWarning,\r\n  ehToast,\r\n} from \"@evolent/prism-react\";\r\nimport styled from \"styled-components\";\r\nimport { connect } from \"react-redux\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { filter, cloneDeep } from \"lodash\";\r\nimport {\r\n  StyledBox,\r\n  StyledDiv,\r\n  StyledHeader,\r\n  StyledOuterContainer,\r\n  StyledButtonContainer,\r\n  StyledTemplateContainer,\r\n  StyledEhLabel,\r\n} from \"../../commonStyles/commonStyles\";\r\nimport { TemplateVersions } from \"./TemplateVersions\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { MODULES, userAppClientsSelector } from \"@evolent/roots\";\r\nimport {\r\n  TEMPLATE_DESCRIPTION_MAX_LENGTH,\r\n  TOAST_MESSAGES,\r\n  TOAST_PROPS,\r\n} from \"../../constants/global\";\r\nimport {\r\n  categorySelector,\r\n  linesOfBusinessSelector,\r\n  languagesSelector,\r\n  programsSelector,\r\n  opsSegmentsSelector,\r\n  reasonsSelector,\r\n  recipientsSelector,\r\n} from \"../../selectors\";\r\nimport {\r\n  getCategoriesLogic,\r\n  getLinesofBusinessLogic,\r\n  categoryChangeHandler,\r\n  showPrograms,\r\n  showReasons,\r\n  updateTemplateLogic,\r\n} from \"../../services\";\r\n\r\nconst StyledOuterBox = styled.div`\r\n  background-color: ${Colors.grey[5]};\r\n  border: ${Spacing.borderWidthThin} solid ${Colors.grey[25]};\r\n  border-radius: ${Spacing.borderRadiusLarge};\r\n  padding: ${Spacing.spacingXSmall};\r\n`;\r\n\r\nexport const EditTemplateComponent = ({\r\n  templateDetails,\r\n  changeMode,\r\n  clients,\r\n  languages,\r\n  programs,\r\n  opsSegments,\r\n  reasons,\r\n  recipientsData,\r\n  linesOfBusinessData,\r\n  categoriesData,\r\n  getLinesofBusinessLogic,\r\n  getCategoriesLogic,\r\n  updateTemplateLogic,\r\n}) => {\r\n  const {\r\n    displayName,\r\n    clientId,\r\n    application,\r\n    lineOfBusinesses,\r\n    categories,\r\n    templateId,\r\n  } = templateDetails;\r\n\r\n  const { loading: lobsLoading, data: linesOfBusiness } = linesOfBusinessData;\r\n  const { loading: categoriesLoading, data: categoryData } = categoriesData;\r\n  const { loading: recipientsLoading, data: recipients } = recipientsData;\r\n\r\n  const client = clients[MODULES.letterAdminTool]?.find(\r\n    (el) => el.id === clientId\r\n  );\r\n\r\n  const initialValues = {\r\n    ...cloneDeep(templateDetails),\r\n    lineOfBusinessIds: lineOfBusinesses.map((lob) => lob.lobId),\r\n    categoryIds: categories.map((cat) => cat.categoryId),\r\n  };\r\n\r\n  const cancelEditModeHandler = (form) => {\r\n    if (form?.dirty) {\r\n      showUnsavedChangeWarning((discard) => {\r\n        discard && changeMode(\"View\");\r\n      });\r\n    } else {\r\n      changeMode(\"View\");\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getLinesofBusinessLogic();\r\n      await getCategoriesLogic();\r\n    })();\r\n  }, []);\r\n\r\n  const templateSaveHandler = async (form) => {\r\n    await updateTemplateLogic({ form, categoryData, linesOfBusiness });\r\n    changeMode(\"View\");\r\n    ehToast.success(null, TOAST_MESSAGES.TEMPLATE_SAVED_SUCCESS, {\r\n      ...TOAST_PROPS,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <EhForm initialValues={initialValues} onSave={templateSaveHandler}>\r\n      {(form) => (\r\n        <Fragment>\r\n          <StyledBox>\r\n            <StyledDiv>\r\n              <Grid>\r\n                <Grid.Column width={6}>\r\n                  <StyledHeader data=\"template-sub-header\">\r\n                    {displayName}\r\n                  </StyledHeader>\r\n                </Grid.Column>\r\n                <StyledButtonContainer width={6} textAlign=\"right\">\r\n                  <EhButtonGroup>\r\n                    <EhButton\r\n                      text=\"Cancel\"\r\n                      data-aq=\"cancel-edit-button\"\r\n                      onClick={() => cancelEditModeHandler(form)}\r\n                    />\r\n                    <EhButton\r\n                      text=\"Save\"\r\n                      primary\r\n                      type=\"submit\"\r\n                      data-aq=\"save-template-btn\"\r\n                    />\r\n                  </EhButtonGroup>\r\n                </StyledButtonContainer>\r\n              </Grid>\r\n            </StyledDiv>\r\n          </StyledBox>\r\n          <StyledOuterContainer>\r\n            <StyledTemplateContainer>\r\n              <Grid>\r\n                <Grid.Row>\r\n                  <Grid.Column width={3}>\r\n                    <EhInputField\r\n                      name=\"displayName\"\r\n                      fieldLabel=\"Display Name\"\r\n                      data-aq=\"display-name\"\r\n                      required\r\n                    />\r\n                  </Grid.Column>\r\n                  <Grid.Column width={6}>\r\n                    <EhTextareaField\r\n                      name=\"description\"\r\n                      fieldLabel=\"Description\"\r\n                      data-aq=\"template-description\"\r\n                      maxLength={TEMPLATE_DESCRIPTION_MAX_LENGTH}\r\n                      required\r\n                    />\r\n                  </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                  <Grid.Column width={3}>\r\n                    <StyledEhLabel>Client</StyledEhLabel>\r\n                    <StyledOuterBox>\r\n                      <EhTextMat data-aq=\"template-client-name\">\r\n                        {client.name}\r\n                      </EhTextMat>\r\n                    </StyledOuterBox>\r\n                  </Grid.Column>\r\n                  <Grid.Column width={3}>\r\n                    <StyledEhLabel>Application</StyledEhLabel>\r\n                    <StyledOuterBox>\r\n                      <EhTextMat data-aq=\"template-application\">\r\n                        {application.name}\r\n                      </EhTextMat>\r\n                    </StyledOuterBox>\r\n                  </Grid.Column>\r\n                  {showPrograms(form?.values?.categoryIds) && (\r\n                    <Grid.Column width={3}>\r\n                      <EhDropdownField\r\n                        fieldLabel=\"Language\"\r\n                        keyField=\"key\"\r\n                        select=\"key\"\r\n                        name=\"languageId\"\r\n                        loading={languages[form?.values?.clientId]?.loading}\r\n                        options={languages[form?.values?.clientId]?.data}\r\n                        required\r\n                        clearable\r\n                        display=\"description\"\r\n                        data-aq=\"language-lookup\"\r\n                      />\r\n                    </Grid.Column>\r\n                  )}\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                  {form?.values?.application?.value !== 0 && (\r\n                    <Grid.Column width={3}>\r\n                      <EhCheckboxGroupField\r\n                        fieldLabel=\"Line(s) of Business\"\r\n                        name=\"lineOfBusinessIds\"\r\n                        keyField=\"lobId\"\r\n                        select=\"lobId\"\r\n                        loading={lobsLoading}\r\n                        options={filter(linesOfBusiness, {\r\n                          clientId: form?.values?.clientId,\r\n                        })}\r\n                        display=\"lobName\"\r\n                        data-aq=\"lob-checkbox\"\r\n                        showCount\r\n                        required\r\n                      />\r\n                    </Grid.Column>\r\n                  )}\r\n                  <Grid.Column width={3}>\r\n                    <EhCheckboxGroupField\r\n                      fieldLabel=\"Category\"\r\n                      name=\"categoryIds\"\r\n                      keyField=\"categoryId\"\r\n                      select=\"categoryId\"\r\n                      loading={categoriesLoading}\r\n                      onChange={(value) => {\r\n                        categoryChangeHandler(form, value);\r\n                      }}\r\n                      options={filter(categoryData, {\r\n                        applicationId: form?.values?.application.value,\r\n                      })}\r\n                      display=\"name\"\r\n                      data-aq=\"category-checkbox\"\r\n                      showCount\r\n                      required\r\n                    />\r\n                  </Grid.Column>\r\n                  {showReasons(form?.values?.categoryIds) && (\r\n                    <>\r\n                      <Grid.Column width={3}>\r\n                        <EhCheckboxGroupField\r\n                          fieldLabel=\"Reasons\"\r\n                          name=\"decisionReasonIds\"\r\n                          keyField=\"id\"\r\n                          select=\"id\"\r\n                          loading={reasons[form?.values?.clientId]?.loading}\r\n                          options={reasons[form?.values?.clientId]?.data}\r\n                          display=\"description\"\r\n                          data-aq=\"reasons-checkbox\"\r\n                          showCount\r\n                          required\r\n                        />\r\n                      </Grid.Column>\r\n                      <Grid.Column width={3}>\r\n                        <EhCheckboxGroupField\r\n                          fieldLabel=\"Recipient\"\r\n                          name=\"recipientCategoryIds\"\r\n                          keyField=\"recipientCategoryId\"\r\n                          select=\"recipientCategoryId\"\r\n                          loading={recipientsLoading}\r\n                          options={recipients}\r\n                          display=\"recipientCategoryDesc\"\r\n                          data-aq=\"recipients-checkbox\"\r\n                          showCount\r\n                          required\r\n                        />\r\n                      </Grid.Column>\r\n                    </>\r\n                  )}\r\n                  {showPrograms(form?.values?.categoryIds) && (\r\n                    <Grid.Column width={3}>\r\n                      <EhCheckboxGroupField\r\n                        fieldLabel=\"Programs\"\r\n                        name=\"programIds\"\r\n                        keyField=\"key\"\r\n                        select=\"key\"\r\n                        loading={programs[form?.values?.clientId]?.loading}\r\n                        options={programs[form?.values?.clientId]?.data}\r\n                        display=\"name\"\r\n                        data-aq=\"programs-checkbox\"\r\n                        showCount\r\n                        required\r\n                      />\r\n                    </Grid.Column>\r\n                  )}\r\n                  {(showPrograms(form?.values?.categoryIds) ||\r\n                    showReasons(form?.values?.categoryIds)) && (\r\n                    <Grid.Column width={3}>\r\n                      <EhCheckboxGroupField\r\n                        fieldLabel=\"Ops Segment\"\r\n                        name=\"opsSegmentIds\"\r\n                        keyField=\"id\"\r\n                        select=\"id\"\r\n                        loading={opsSegments[form?.values?.clientId]?.loading}\r\n                        options={opsSegments[form?.values?.clientId]?.data}\r\n                        display=\"opsSegment\"\r\n                        data-aq=\"opsSegments-checkbox\"\r\n                        showCount\r\n                        required\r\n                      />\r\n                    </Grid.Column>\r\n                  )}\r\n                </Grid.Row>\r\n              </Grid>\r\n              <TemplateVersions\r\n                templateId={templateId}\r\n                clientId={clientId}\r\n                templateDetails={templateDetails}\r\n                mode=\"Edit\"\r\n              />\r\n            </StyledTemplateContainer>\r\n          </StyledOuterContainer>\r\n        </Fragment>\r\n      )}\r\n    </EhForm>\r\n  );\r\n};\r\n\r\nEditTemplateComponent.propTypes = {\r\n  templateDetails: PropTypes.object,\r\n  changeMode: PropTypes.func,\r\n  clients: PropTypes.object,\r\n  linesOfBusinessData: PropTypes.object,\r\n  categoriesData: PropTypes.object,\r\n  languages: PropTypes.object,\r\n  reasons: PropTypes.object,\r\n  programs: PropTypes.object,\r\n  opsSegments: PropTypes.object,\r\n  recipientsData: PropTypes.object,\r\n  getLinesofBusinessLogic: PropTypes.func,\r\n  getCategoriesLogic: PropTypes.func,\r\n  updateTemplateLogic: PropTypes.func,\r\n};\r\n\r\nexport const EditTemplate = connect(\r\n  (state) => {\r\n    return {\r\n      clients: userAppClientsSelector(state),\r\n      linesOfBusinessData: linesOfBusinessSelector(state),\r\n      categoriesData: categorySelector(state),\r\n      languages: languagesSelector(state),\r\n      programs: programsSelector(state),\r\n      opsSegments: opsSegmentsSelector(state),\r\n      reasons: reasonsSelector(state),\r\n      recipientsData: recipientsSelector(state),\r\n    };\r\n  },\r\n  {\r\n    getLinesofBusinessLogic,\r\n    getCategoriesLogic,\r\n    updateTemplateLogic,\r\n  }\r\n)(EhWithTracking(EditTemplateComponent, \"EditTemplateComponent\"));\r\n","import { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { EhWithTracking, EhLoader } from \"@evolent/prism-react\";\r\nimport { ViewTemplate } from \"./ViewTemplate\";\r\nimport { EditTemplate } from \"./EditTemplate\";\r\nimport {\r\n  getTemplateDetailsLogic,\r\n  setTemplateDetailsLoadingLogic,\r\n} from \"../../services\";\r\nimport { templateDetailsSelector } from \"../../selectors\";\r\nimport { ACTION_STATUS } from \"../../constants/templateDetails\";\r\n\r\nconst { View } = ACTION_STATUS;\r\n\r\nconst TemplateDetailsComponent = ({\r\n  match,\r\n  template,\r\n  getTemplateDetailsLogic,\r\n  setTemplateDetailsLoadingLogic,\r\n}) => {\r\n  const [mode, setMode] = useState(View);\r\n  const { clientId, templateId } = match.params;\r\n  const { loading: templateDetailsLoading, data: templateDetails } = template;\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getTemplateDetailsLogic({\r\n        clientId,\r\n        templateId,\r\n      });\r\n    })();\r\n    return () => {\r\n      setTemplateDetailsLoadingLogic({ templateId });\r\n    };\r\n  }, []);\r\n\r\n  if (templateDetailsLoading) {\r\n    return <EhLoader loaderContent=\"Loading\" />;\r\n  }\r\n\r\n  return mode === View ? (\r\n    <ViewTemplate templateDetails={templateDetails} changeMode={setMode} />\r\n  ) : (\r\n    <EditTemplate templateDetails={templateDetails} changeMode={setMode} />\r\n  );\r\n};\r\n\r\nTemplateDetailsComponent.propTypes = {\r\n  match: PropTypes.object,\r\n  template: PropTypes.object,\r\n  getTemplateDetailsLogic: PropTypes.func,\r\n  setTemplateDetailsLoadingLogic: PropTypes.func,\r\n};\r\n\r\nexport const TemplateDetails = connect(\r\n  (state, ownProps) => {\r\n    const { match } = ownProps;\r\n    const { templateId } = match.params;\r\n    return {\r\n      template: templateDetailsSelector(state, templateId),\r\n    };\r\n  },\r\n  {\r\n    getTemplateDetailsLogic,\r\n    setTemplateDetailsLoadingLogic,\r\n  }\r\n)(EhWithTracking(TemplateDetailsComponent, \"TemplateDetailsComponent\"));\r\n","import { Fragment } from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport { download, userHasAppRoleSelector, MODULES } from \"@evolent/roots\";\r\nimport {\r\n  EhDataTable,\r\n  EhWithTracking,\r\n  EhTextMat,\r\n  Spacing,\r\n  EhDate,\r\n  Colors,\r\n  showModal,\r\n} from \"@evolent/prism-react\";\r\nimport { find } from \"lodash\";\r\nimport PreviewTemplate from \"../template-actions/PreviewTemplate\";\r\nimport ValidateTemplate from \"../template-actions/ValidateTemplate\";\r\nimport {\r\n  TEMPLATE_VERSIONS_COLUMNS,\r\n  TEMPLATE_STATUS_NAMES,\r\n  TEMPLATE_STATUS_MAPPING,\r\n} from \"./../../constants/templateDetails\";\r\nimport { TEMPLATE_STATUS } from \"../../constants/templateList\";\r\nimport { LETTER_ADMIN_USER_ROLES } from \"../../constants/global\";\r\nimport { templateConfigurationsSelector } from \"../../selectors\";\r\nimport { getDownloadTemplateLogic } from \"./../../services\";\r\nimport PublishTemplate from \"../template-actions/PublishTemplate\";\r\n\r\nconst {\r\n  VERSION,\r\n  TYPE,\r\n  FILE_NAME,\r\n  DRAFT_STATUS,\r\n  PUBLISHED_DATE,\r\n  UPDATED_DATE,\r\n  ACTIONS,\r\n} = TEMPLATE_VERSIONS_COLUMNS;\r\n\r\nconst textColor = (status) =>\r\n  status === TEMPLATE_STATUS_NAMES.PUBLISH ? Colors.green[25] : Colors.blue[25];\r\n\r\nconst StyledContainer = styled.div`\r\n  &&&& {\r\n    padding-top: ${Spacing.spacingXxLarge};\r\n  }\r\n`;\r\nconst StyledText = styled(EhTextMat)`\r\n  background-color: ${(props) =>\r\n    props.templateStatus === TEMPLATE_STATUS_NAMES.NEW\r\n      ? Colors.gold[25]\r\n      : textColor(props.templateStatus)};\r\n  padding: ${Spacing.spacingXxSmall};\r\n  border-radius: ${Spacing.spacingXxxLarge};\r\n`;\r\nconst StyledIcon = styled.span`\r\n  padding: ${Spacing.spacingXSmall} ${Spacing.spacingNone}\r\n    ${Spacing.spacingXxSmall} 0.2rem;\r\n  margin-right: ${Spacing.spacingXxSmall};\r\n  cursor: ${(props) => props.mode !== \"Edit\" && \"pointer\"};\r\n  border: ${Spacing.borderWidthThin} solid\r\n    ${(props) => (props.mode === \"Edit\" ? Colors.grey[40] : Colors.blue[100])};\r\n  border-radius: ${Spacing.spacingXxxSmall};\r\n`;\r\n\r\nconst getColumns = (\r\n  clientId,\r\n  downloadTemplate,\r\n  hasLetterPublisherRole,\r\n  templateDetails,\r\n  hasPublishedVersion,\r\n  mode\r\n) => [\r\n  {\r\n    fixedWidth: \"1rem\",\r\n    header: VERSION.name,\r\n    id: VERSION.id,\r\n    field: VERSION.fieldName,\r\n    renderData: (configuration) => (\r\n      <EhTextMat>{configuration.versionNumber}</EhTextMat>\r\n    ),\r\n  },\r\n  {\r\n    fixedWidth: \"1.5rem\",\r\n    header: TYPE.name,\r\n    id: TYPE.id,\r\n    field: TYPE.fieldName,\r\n    renderData: (configuration) => (\r\n      <StyledText\r\n        size=\"small\"\r\n        templateStatus={configuration.statusName}\r\n        textAlign=\"center\"\r\n      >\r\n        {TEMPLATE_STATUS_MAPPING[configuration.statusName]}\r\n      </StyledText>\r\n    ),\r\n  },\r\n  {\r\n    fixedWidth: \"4rem\",\r\n    header: FILE_NAME.name,\r\n    id: FILE_NAME.id,\r\n    field: FILE_NAME.fieldName,\r\n    renderData: (configuration) => (\r\n      <EhTextMat>{`${configuration.fileName}${configuration.fileExtension}`}</EhTextMat>\r\n    ),\r\n  },\r\n  {\r\n    fixedWidth: \"2rem\",\r\n    header: DRAFT_STATUS.name,\r\n    id: DRAFT_STATUS.id,\r\n    field: DRAFT_STATUS.fieldName,\r\n    renderData: (configuration) => {\r\n      if (configuration.statusName === TEMPLATE_STATUS_NAMES.NEW) {\r\n        return (\r\n          <EhTextMat>\r\n            {configuration.isReadyToPublish ? \"Validated\" : \"Not Validated\"}\r\n          </EhTextMat>\r\n        );\r\n      }\r\n      return (\r\n        <EhTextMat color=\"grey\" shade={40}>\r\n          N/A\r\n        </EhTextMat>\r\n      );\r\n    },\r\n  },\r\n  {\r\n    fixedWidth: \"3rem\",\r\n    header: PUBLISHED_DATE.name,\r\n    id: PUBLISHED_DATE.id,\r\n    field: PUBLISHED_DATE.fieldName,\r\n    renderData: (configuration) =>\r\n      configuration.statusName !== TEMPLATE_STATUS_NAMES.NEW ? (\r\n        <EhTextMat>\r\n          <EhDate value={configuration.publishDate} type=\"date\" localTime />\r\n          {`${configuration.publishedByUserLastName}, ${configuration.publishedByUserFirstName}`}\r\n        </EhTextMat>\r\n      ) : (\r\n        <EhTextMat color=\"grey\" shade={40}>\r\n          N/A\r\n        </EhTextMat>\r\n      ),\r\n  },\r\n  {\r\n    fixedWidth: \"3rem\",\r\n    header: UPDATED_DATE.name,\r\n    id: UPDATED_DATE.id,\r\n    field: UPDATED_DATE.fieldName,\r\n    renderData: (configuration) => (\r\n      <EhTextMat>\r\n        <EhDate value={configuration.updatedDate} type=\"date\" localTime />\r\n        {`${configuration.updatedByUserLastName}, ${configuration.updatedByUserFirstName}`}\r\n      </EhTextMat>\r\n    ),\r\n  },\r\n  {\r\n    fixedWidth: \"2rem\",\r\n    header: ACTIONS.name,\r\n    id: ACTIONS.id,\r\n    field: ACTIONS.fieldName,\r\n    renderData: (configuration) => (\r\n      <>\r\n        <StyledIcon\r\n          data-aq=\"preview-template-icon\"\r\n          onClick={() => {\r\n            if (mode === \"View\") {\r\n              const closeModal = showModal(\r\n                <PreviewTemplate\r\n                  closeModal={() => closeModal()}\r\n                  configId={configuration.configurationId}\r\n                  clientId={clientId}\r\n                />\r\n              );\r\n            }\r\n          }}\r\n          mode={mode}\r\n        >\r\n          <Icon name=\"eye\" color={`${mode === \"Edit\" ? \"grey\" : \"blue\"}`} />\r\n        </StyledIcon>\r\n        <StyledIcon\r\n          data-aq=\"download-template-icon\"\r\n          onClick={() => {\r\n            if (mode === \"View\") {\r\n              downloadTemplate(configuration.configurationId);\r\n            }\r\n          }}\r\n          mode={mode}\r\n        >\r\n          <Icon\r\n            name=\"download\"\r\n            color={`${mode === \"Edit\" ? \"grey\" : \"blue\"}`}\r\n          />\r\n        </StyledIcon>\r\n        {hasLetterPublisherRole &&\r\n          configuration.statusName !== TEMPLATE_STATUS_NAMES.PUBLISH && (\r\n            <StyledIcon\r\n              data-aq=\"publish-template-icon\"\r\n              onClick={() => {\r\n                if (mode === \"View\") {\r\n                  const closeConfirmModal = showModal(\r\n                    <PublishTemplate\r\n                      hasPublishedVersion={hasPublishedVersion}\r\n                      data={{\r\n                        ...templateDetails,\r\n                        configurationId: configuration.configurationId,\r\n                      }}\r\n                      configuration={configuration}\r\n                      closeConfirmModal={() => closeConfirmModal()}\r\n                    />\r\n                  );\r\n                }\r\n              }}\r\n              mode={mode}\r\n            >\r\n              <Icon\r\n                name=\"upload\"\r\n                color={`${mode === \"Edit\" ? \"grey\" : \"blue\"}`}\r\n              />\r\n            </StyledIcon>\r\n          )}\r\n        {configuration.statusName === TEMPLATE_STATUS_NAMES.NEW &&\r\n          !configuration.isReadyToPublish && (\r\n            <StyledIcon\r\n              data-aq=\"validate-template-icon\"\r\n              onClick={() => {\r\n                if (mode === \"View\") {\r\n                  const closeModal = showModal(\r\n                    <ValidateTemplate\r\n                      data={templateDetails}\r\n                      configuration={configuration}\r\n                      closeModal={() => closeModal()}\r\n                    />\r\n                  );\r\n                }\r\n              }}\r\n              mode={mode}\r\n            >\r\n              <Icon\r\n                name=\"check\"\r\n                color={`${mode === \"Edit\" ? \"grey\" : \"blue\"}`}\r\n              />\r\n            </StyledIcon>\r\n          )}\r\n      </>\r\n    ),\r\n  },\r\n];\r\n\r\nconst TemplateVersionsComponent = ({\r\n  configurations,\r\n  clientId,\r\n  getDownloadTemplateLogic,\r\n  hasLetterPublisherRole,\r\n  templateDetails,\r\n  mode,\r\n}) => {\r\n  const downloadTemplate = async (configId) => {\r\n    const logic = () =>\r\n      getDownloadTemplateLogic({\r\n        clientId,\r\n        configId,\r\n      });\r\n\r\n    await download(logic);\r\n  };\r\n\r\n  const hasPublishedVersion = !!find(configurations, {\r\n    statusId: TEMPLATE_STATUS.PUBLISHED,\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <StyledContainer>\r\n        <EhDataTable\r\n          stickyArea={{ headers: true }}\r\n          fixed\r\n          columns={getColumns(\r\n            clientId,\r\n            downloadTemplate,\r\n            hasLetterPublisherRole,\r\n            templateDetails,\r\n            hasPublishedVersion,\r\n            mode\r\n          )}\r\n          data={configurations}\r\n          keyField=\"configurationId\"\r\n          data-aq=\"template-versions-table\"\r\n        />\r\n      </StyledContainer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nTemplateVersionsComponent.propTypes = {\r\n  configurations: PropTypes.array,\r\n  clientId: PropTypes.number,\r\n  getDownloadTemplateLogic: PropTypes.func,\r\n  hasLetterPublisherRole: PropTypes.bool,\r\n  templateDetails: PropTypes.object,\r\n  mode: PropTypes.string,\r\n};\r\n\r\nexport const TemplateVersions = connect(\r\n  (state, props) => {\r\n    return {\r\n      configurations: templateConfigurationsSelector(state, props.templateId),\r\n      hasLetterPublisherRole: userHasAppRoleSelector(\r\n        state,\r\n        MODULES.letterAdminTool,\r\n        [LETTER_ADMIN_USER_ROLES.publishLetter]\r\n      ),\r\n    };\r\n  },\r\n  { getDownloadTemplateLogic }\r\n)(EhWithTracking(TemplateVersionsComponent, \"TemplateVersionsComponent\"));\r\n","import { Fragment, useEffect, useState } from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Grid, List } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport { find } from \"lodash\";\r\nimport {\r\n  EhWithTracking,\r\n  EhTextMat,\r\n  Colors,\r\n  Spacing,\r\n  EhButton,\r\n  EhButtonGroup,\r\n  EhAlertModalMat,\r\n  showModal,\r\n  EhFlexBox,\r\n  showUnsavedChangeWarning,\r\n  ehToast,\r\n} from \"@evolent/prism-react\";\r\nimport {\r\n  StyledBox,\r\n  StyledButtonContainer,\r\n  StyledDiv,\r\n  StyledHeader,\r\n  StyledOuterContainer,\r\n  StyledTemplateContainer,\r\n  StyledEhLabel,\r\n} from \"../../commonStyles/commonStyles\";\r\nimport {\r\n  MODULES,\r\n  userAppClientsSelector,\r\n  userHasAppRoleSelector,\r\n} from \"@evolent/roots\";\r\nimport { TemplateVersions } from \"./TemplateVersions\";\r\nimport {\r\n  showPrograms,\r\n  showReasons,\r\n  getReasonsLogic,\r\n  getRecipientsLogic,\r\n  getProgramsLogic,\r\n  getLanguagesLogic,\r\n  getOpsSegmentsLogic,\r\n  archiveTemplateLogic,\r\n} from \"../../services\";\r\nimport {\r\n  reasonsSelector,\r\n  programsSelector,\r\n  languagesSelector,\r\n  opsSegmentsSelector,\r\n  recipientsSelector,\r\n  templateStatusSelector,\r\n} from \"../../selectors\";\r\nimport { ARCHIVE_TEMPLATE } from \"../../constants/templateDetails\";\r\nimport {\r\n  APPLICATIONS,\r\n  MESSAGES,\r\n  LETTER_ADMIN_USER_ROLES,\r\n  TOAST_PROPS,\r\n  TOAST_MESSAGES,\r\n} from \"../../constants/global\";\r\nimport { TEMPLATE_STATUS } from \"../../constants/templateList\";\r\nimport { UploadTemplate } from \"../template-actions/UploadTemplate\";\r\n\r\nconst StyledContainer = styled.div`\r\n  background-color: ${Colors.grey[5]};\r\n  border: ${Spacing.borderWidthThin} solid ${Colors.grey[25]};\r\n  border-radius: ${Spacing.borderRadiusLarge};\r\n  padding: ${Spacing.spacingSmall};\r\n  ${(props) => props.field === \"textarea\" && \"height: 80px\"};\r\n  ${(props) => props.field === \"checkbox\" && \"height: 150px\"};\r\n  overflow-y: auto;\r\n`;\r\n\r\nconst StyledEhTextMat = styled(EhTextMat)`\r\n  && {\r\n    font-size: large;\r\n    margin: -${Spacing.spacingXxSmall} ${Spacing.spacingXxSmall};\r\n    cursor: pointer;\r\n  }\r\n`;\r\nconst StyledColumn = styled(Grid.Column)`\r\n  padding: ${Spacing.spacingSmall};\r\n`;\r\n\r\nconst ViewTemplateComponent = ({\r\n  templateDetails,\r\n  changeMode,\r\n  clients,\r\n  languagesData,\r\n  programsData,\r\n  opsSegmentsData,\r\n  reasonsData,\r\n  recipientsData,\r\n  hasLetterPublisherRole,\r\n  getLanguagesLogic,\r\n  getProgramsLogic,\r\n  getOpsSegmentsLogic,\r\n  getReasonsLogic,\r\n  getRecipientsLogic,\r\n  archiveTemplateLogic,\r\n  templateStatus,\r\n}) => {\r\n  const {\r\n    clientId,\r\n    displayName,\r\n    description,\r\n    application,\r\n    categories,\r\n    languageId,\r\n    lineOfBusinesses,\r\n    decisionReasonIds,\r\n    recipientCategoryIds,\r\n    programIds,\r\n    opsSegmentIds,\r\n    templateId,\r\n    configurations,\r\n    versions,\r\n  } = templateDetails;\r\n\r\n  const history = useHistory();\r\n\r\n  const [showUploadSlider, setShowUploadSlider] = useState(false);\r\n  const [formDirty, setFormDirty] = useState(false);\r\n\r\n  const client = find(\r\n    clients[MODULES.letterAdminTool],\r\n    (el) => el.id === clientId\r\n  );\r\n\r\n  const publishedConfiguration = find(\r\n    configurations,\r\n    (config) => config.statusId === TEMPLATE_STATUS.PUBLISHED\r\n  );\r\n\r\n  const publishedVersion = find(\r\n    versions,\r\n    (version) => version.statusId === TEMPLATE_STATUS.PUBLISHED\r\n  );\r\n\r\n  const archivedVersion = find(\r\n    versions,\r\n    (version) => version.statusId === TEMPLATE_STATUS.ARCHIVED\r\n  );\r\n\r\n  let templateType;\r\n  if (publishedVersion) {\r\n    templateType = \"Published\";\r\n  } else if (archivedVersion) {\r\n    templateType = \"Archived\";\r\n  } else {\r\n    templateType = \"New\";\r\n  }\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      switch (application.value) {\r\n        case APPLICATIONS.cm:\r\n          await Promise.all([\r\n            getLanguagesLogic({ clientId }),\r\n            getProgramsLogic({ clientId }),\r\n            getOpsSegmentsLogic({ clientId }),\r\n          ]);\r\n          break;\r\n        case APPLICATIONS.um:\r\n          await Promise.all([\r\n            getReasonsLogic({ clientId }),\r\n            getRecipientsLogic({ applicationId: application.value }),\r\n            getOpsSegmentsLogic({ clientId }),\r\n          ]);\r\n          break;\r\n      }\r\n    })();\r\n  }, []);\r\n  const categoryIds = categories?.map((category) => category.categoryId);\r\n  let language;\r\n  let programs;\r\n  let opsSegments;\r\n  let reasons;\r\n  let recipients;\r\n\r\n  if (showPrograms(categoryIds)) {\r\n    language = languagesData[clientId]?.data?.find(\r\n      (lang) => lang.key === languageId\r\n    );\r\n    programs = programsData[clientId]?.data?.filter((program) =>\r\n      programIds?.includes(program.key)\r\n    );\r\n\r\n    opsSegments = opsSegmentsData[clientId]?.data?.filter((ops) =>\r\n      opsSegmentIds?.includes(ops.id)\r\n    );\r\n  }\r\n  if (showReasons(categoryIds)) {\r\n    reasons = reasonsData[clientId]?.data?.filter((reason) =>\r\n      decisionReasonIds?.includes(reason.id)\r\n    );\r\n\r\n    recipients = recipientsData?.data?.filter((recipient) =>\r\n      recipientCategoryIds?.includes(recipient.recipientCategoryId)\r\n    );\r\n    opsSegments = opsSegmentsData[clientId]?.data?.filter((ops) =>\r\n      opsSegmentIds?.includes(ops.id)\r\n    );\r\n  }\r\n\r\n  const showArchiveTemplate = publishedConfiguration && hasLetterPublisherRole;\r\n\r\n  const discardUploadHandler = () => {\r\n    if (formDirty) {\r\n      showUnsavedChangeWarning((discard) => {\r\n        discard && setShowUploadSlider(false);\r\n      });\r\n    } else {\r\n      setShowUploadSlider(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <StyledBox>\r\n        <StyledDiv>\r\n          <Grid>\r\n            <Grid.Column width={6}>\r\n              <StyledHeader data=\"tempaltes-sub-header\">\r\n                <EhFlexBox>\r\n                  {!showUploadSlider && (\r\n                    <StyledEhTextMat\r\n                      color=\"blue\"\r\n                      fontWeight=\"normal\"\r\n                      data-aq=\"template-type-link\"\r\n                      onClick={() =>\r\n                        history.push(\r\n                          `/${(\r\n                            templateStatus?.statusName || templateType\r\n                          ).toLowerCase()}`\r\n                        )\r\n                      }\r\n                    >\r\n                      {`${templateStatus?.statusName ||\r\n                        templateType} Templates `}\r\n                    </StyledEhTextMat>\r\n                  )}\r\n                  {!showUploadSlider && `>`} {`${displayName}`}\r\n                </EhFlexBox>\r\n              </StyledHeader>\r\n            </Grid.Column>\r\n            <StyledButtonContainer width={6} textAlign=\"right\">\r\n              <EhButtonGroup>\r\n                {showUploadSlider && (\r\n                  <EhButton\r\n                    text=\"Discard Upload\"\r\n                    negative\r\n                    data-aq=\"discard-upload-template\"\r\n                    onClick={discardUploadHandler}\r\n                  />\r\n                )}\r\n                {!showUploadSlider && (\r\n                  <EhButton\r\n                    text=\"Upload\"\r\n                    data-aq=\"upload-template\"\r\n                    onClick={() => setShowUploadSlider(true)}\r\n                  />\r\n                )}\r\n                {showArchiveTemplate && !showUploadSlider && (\r\n                  <EhButton\r\n                    text=\"Archive Template\"\r\n                    data-aq=\"archive-template\"\r\n                    onClick={() => {\r\n                      const closeModal = showModal(\r\n                        <EhAlertModalMat\r\n                          heading={ARCHIVE_TEMPLATE.TITLE}\r\n                          iconName=\"warning sign\"\r\n                          iconColor={Colors.blue[100]}\r\n                          message={ARCHIVE_TEMPLATE.TEXT}\r\n                          data-aq=\"archive-template-modal\"\r\n                          buttons={[\r\n                            {\r\n                              text: \"Cancel\",\r\n                              onClick: () => {\r\n                                closeModal();\r\n                              },\r\n                            },\r\n                            {\r\n                              text: \"Ok\",\r\n                              primary: true,\r\n                              onClick: async () => {\r\n                                await archiveTemplateLogic({\r\n                                  configuration: publishedConfiguration,\r\n                                  template: templateDetails,\r\n                                });\r\n                                closeModal();\r\n                                ehToast.success(\r\n                                  null,\r\n                                  TOAST_MESSAGES.TEMPLATE_ARCHIVED_SUCCESS,\r\n                                  {\r\n                                    ...TOAST_PROPS,\r\n                                  }\r\n                                );\r\n                              },\r\n                            },\r\n                          ]}\r\n                        />\r\n                      );\r\n                    }}\r\n                  />\r\n                )}\r\n                {!showUploadSlider && (\r\n                  <EhButton\r\n                    text=\"Edit\"\r\n                    data-aq=\"edit-template\"\r\n                    onClick={() => changeMode(\"Edit\")}\r\n                  />\r\n                )}\r\n              </EhButtonGroup>\r\n            </StyledButtonContainer>\r\n          </Grid>\r\n        </StyledDiv>\r\n      </StyledBox>\r\n      {showUploadSlider ? (\r\n        <UploadTemplate\r\n          templateDetails={templateDetails}\r\n          onCloseSlider={() => setShowUploadSlider(false)}\r\n          onFileUpload={(value) => setFormDirty(value)}\r\n        />\r\n      ) : null}\r\n      <StyledOuterContainer>\r\n        <StyledTemplateContainer>\r\n          <Grid>\r\n            <Grid.Row>\r\n              <Grid.Column width={3}>\r\n                <StyledEhLabel>Display Name</StyledEhLabel>\r\n                <StyledContainer>\r\n                  <EhTextMat data-aq=\"template-displayName\">\r\n                    {displayName}\r\n                  </EhTextMat>\r\n                </StyledContainer>\r\n              </Grid.Column>\r\n              <Grid.Column width={6}>\r\n                <StyledEhLabel>Description</StyledEhLabel>\r\n                {description ? (\r\n                  <StyledContainer field=\"textarea\">\r\n                    <EhTextMat data-aq=\"template-description\">\r\n                      {description}\r\n                    </EhTextMat>\r\n                  </StyledContainer>\r\n                ) : (\r\n                  <EhTextMat\r\n                    color=\"grey\"\r\n                    shade={40}\r\n                    data-aq=\"description-required\"\r\n                  >\r\n                    {MESSAGES.REQUIRED_TO_PUBLISH}\r\n                  </EhTextMat>\r\n                )}\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column width={3}>\r\n                <StyledEhLabel>Client</StyledEhLabel>\r\n                <StyledContainer>\r\n                  <EhTextMat data-aq=\"template-client-name\">\r\n                    {client.name}\r\n                  </EhTextMat>\r\n                </StyledContainer>\r\n              </Grid.Column>\r\n              <Grid.Column width={3}>\r\n                <StyledEhLabel>Application</StyledEhLabel>\r\n                <StyledContainer>\r\n                  <EhTextMat data-aq=\"template-application\">\r\n                    {application.name}\r\n                  </EhTextMat>\r\n                </StyledContainer>\r\n              </Grid.Column>\r\n              {showPrograms(categoryIds) && (\r\n                <Grid.Column width={3}>\r\n                  <StyledEhLabel>Language</StyledEhLabel>\r\n                  <StyledContainer>\r\n                    <EhTextMat data-aq=\"template-language\">\r\n                      {language?.description}\r\n                    </EhTextMat>\r\n                  </StyledContainer>\r\n                </Grid.Column>\r\n              )}\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <StyledColumn width={3}>\r\n                <StyledEhLabel>Line(s) of Business</StyledEhLabel>\r\n                {lineOfBusinesses?.length ? (\r\n                  <StyledContainer field=\"checkbox\">\r\n                    <List>\r\n                      {lineOfBusinesses.map((lob) => (\r\n                        <List.Item key={lob.lobId} data-aq=\"lob-item\">\r\n                          <EhTextMat>{lob.lobName}</EhTextMat>\r\n                        </List.Item>\r\n                      ))}\r\n                    </List>\r\n                  </StyledContainer>\r\n                ) : (\r\n                  <EhTextMat color=\"grey\" shade={40} data-aq=\"lobs-required\">\r\n                    {MESSAGES.REQUIRED_TO_PUBLISH}\r\n                  </EhTextMat>\r\n                )}\r\n              </StyledColumn>\r\n              <StyledColumn width={3}>\r\n                <StyledEhLabel>Categories</StyledEhLabel>\r\n                {categories?.length ? (\r\n                  <StyledContainer field=\"checkbox\">\r\n                    <List>\r\n                      {categories.map((category) => (\r\n                        <List.Item\r\n                          key={category.categoryId}\r\n                          data-aq=\"category-item\"\r\n                        >\r\n                          <EhTextMat>{category.name}</EhTextMat>\r\n                        </List.Item>\r\n                      ))}\r\n                    </List>\r\n                  </StyledContainer>\r\n                ) : (\r\n                  <EhTextMat\r\n                    color=\"grey\"\r\n                    shade={40}\r\n                    data-aq=\"category-required\"\r\n                  >\r\n                    {MESSAGES.REQUIRED_TO_PUBLISH}\r\n                  </EhTextMat>\r\n                )}\r\n              </StyledColumn>\r\n              {showReasons(categoryIds) && (\r\n                <>\r\n                  <StyledColumn width={3}>\r\n                    <StyledEhLabel>Reasons</StyledEhLabel>\r\n                    {reasons?.length && (\r\n                      <StyledContainer field=\"checkbox\">\r\n                        <List>\r\n                          {reasons.map((reason) => (\r\n                            <List.Item key={reason.id} data-aq=\"reason-item\">\r\n                              <EhTextMat>{reason.description}</EhTextMat>\r\n                            </List.Item>\r\n                          ))}\r\n                        </List>\r\n                      </StyledContainer>\r\n                    )}\r\n                  </StyledColumn>\r\n                  <StyledColumn width={3}>\r\n                    <StyledEhLabel>Recipients</StyledEhLabel>\r\n                    {recipients?.length && (\r\n                      <StyledContainer field=\"checkbox\">\r\n                        <List>\r\n                          {recipients.map((recipient) => (\r\n                            <List.Item\r\n                              key={recipient.recipientCategoryId}\r\n                              data-aq=\"recipient-item\"\r\n                            >\r\n                              <EhTextMat>\r\n                                {recipient.recipientCategoryDesc}\r\n                              </EhTextMat>\r\n                            </List.Item>\r\n                          ))}\r\n                        </List>\r\n                      </StyledContainer>\r\n                    )}\r\n                  </StyledColumn>\r\n                </>\r\n              )}\r\n              {showPrograms(categoryIds) && (\r\n                <StyledColumn width={3}>\r\n                  <StyledEhLabel data-aq=\"programs-label\">\r\n                    Programs\r\n                  </StyledEhLabel>\r\n                  {programs?.length && (\r\n                    <StyledContainer field=\"checkbox\">\r\n                      <List>\r\n                        {programs.map((program) => (\r\n                          <List.Item key={program.key} data-aq=\"program-item\">\r\n                            <EhTextMat>{program.name}</EhTextMat>\r\n                          </List.Item>\r\n                        ))}\r\n                      </List>\r\n                    </StyledContainer>\r\n                  )}\r\n                </StyledColumn>\r\n              )}\r\n              {(showPrograms(categoryIds) || showReasons(categoryIds)) && (\r\n                <StyledColumn width={3}>\r\n                  <StyledEhLabel>Ops Segment</StyledEhLabel>\r\n                  {opsSegments?.length ? (\r\n                    <StyledContainer field=\"checkbox\">\r\n                      <List>\r\n                        {opsSegments.map((ops) => (\r\n                          <List.Item key={ops.id} data-aq=\"ops-segment-item\">\r\n                            <EhTextMat>{ops.opsSegment}</EhTextMat>\r\n                          </List.Item>\r\n                        ))}\r\n                      </List>\r\n                    </StyledContainer>\r\n                  ) : (\r\n                    <EhTextMat color=\"grey\" shade={40} data-aq=\"ops-required\">\r\n                      {MESSAGES.REQUIRED_TO_PUBLISH}\r\n                    </EhTextMat>\r\n                  )}\r\n                </StyledColumn>\r\n              )}\r\n            </Grid.Row>\r\n          </Grid>\r\n          <TemplateVersions\r\n            templateId={templateId}\r\n            clientId={clientId}\r\n            templateDetails={templateDetails}\r\n            mode={showUploadSlider ? \"Edit\" : \"View\"}\r\n          />\r\n        </StyledTemplateContainer>\r\n      </StyledOuterContainer>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nViewTemplateComponent.propTypes = {\r\n  templateDetails: PropTypes.object,\r\n  changeMode: PropTypes.func,\r\n  clients: PropTypes.object,\r\n  reasonsData: PropTypes.object,\r\n  recipientsData: PropTypes.object,\r\n  programsData: PropTypes.object,\r\n  opsSegmentsData: PropTypes.object,\r\n  languagesData: PropTypes.object,\r\n  getLanguagesLogic: PropTypes.func,\r\n  getProgramsLogic: PropTypes.func,\r\n  getOpsSegmentsLogic: PropTypes.func,\r\n  getReasonsLogic: PropTypes.func,\r\n  getRecipientsLogic: PropTypes.func,\r\n  hasLetterPublisherRole: PropTypes.bool,\r\n  archiveTemplateLogic: PropTypes.func,\r\n  templateStatus: PropTypes.object,\r\n};\r\n\r\nexport const ViewTemplate = connect(\r\n  (state) => {\r\n    return {\r\n      clients: userAppClientsSelector(state),\r\n      reasonsData: reasonsSelector(state),\r\n      recipientsData: recipientsSelector(state),\r\n      languagesData: languagesSelector(state),\r\n      programsData: programsSelector(state),\r\n      opsSegmentsData: opsSegmentsSelector(state),\r\n      hasLetterPublisherRole: userHasAppRoleSelector(\r\n        state,\r\n        MODULES.letterAdminTool,\r\n        [LETTER_ADMIN_USER_ROLES.publishLetter]\r\n      ),\r\n      templateStatus: templateStatusSelector(state),\r\n    };\r\n  },\r\n  {\r\n    getLanguagesLogic,\r\n    getProgramsLogic,\r\n    getOpsSegmentsLogic,\r\n    getReasonsLogic,\r\n    getRecipientsLogic,\r\n    archiveTemplateLogic,\r\n  }\r\n)(EhWithTracking(ViewTemplateComponent, \"ViewTemplateComponent\"));\r\n","import { Transition } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { EhWithTracking } from \"@evolent/prism-react\";\r\nimport { TemplateFilters } from \"./TemplateFilters\";\r\nimport {\r\n  showFiltersFlagSelector,\r\n  appliedFiltersSelector,\r\n} from \"../../selectors\";\r\nimport { SliderContent } from \"../../commonStyles/commonStyles\";\r\nimport { EXPAND_SLIDER_DURATION } from \"../../constants/templateFilters\";\r\n\r\nconst FilterSliderComponent = ({ showFilters, statusId, appliedFilters }) => {\r\n  return (\r\n    <Transition.Group animation=\"slide down\" duration={EXPAND_SLIDER_DURATION}>\r\n      {showFilters && (\r\n        <SliderContent>\r\n          <TemplateFilters\r\n            statusId={statusId}\r\n            appliedFilters={appliedFilters}\r\n          />\r\n        </SliderContent>\r\n      )}\r\n    </Transition.Group>\r\n  );\r\n};\r\n\r\nFilterSliderComponent.propTypes = {\r\n  showFilters: PropTypes.bool,\r\n  statusId: PropTypes.number,\r\n  appliedFilters: PropTypes.object,\r\n};\r\nexport const FilterSlider = connect((state, ownProps) => {\r\n  const { statusId } = ownProps;\r\n  return {\r\n    showFilters: showFiltersFlagSelector(state),\r\n    appliedFilters: appliedFiltersSelector(state, statusId),\r\n  };\r\n}, null)(EhWithTracking(FilterSliderComponent, \"FilterSliderComponent\"));\r\n","import { useEffect } from \"react\";\r\n\r\nimport {\r\n  EhForm,\r\n  EhDropdownField,\r\n  Spacing,\r\n  EhWithTracking,\r\n  EhInputField,\r\n  EhButton,\r\n  EhCheckboxGroupField,\r\n} from \"@evolent/prism-react\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport styled from \"styled-components\";\r\nimport { sortBy, filter } from \"lodash\";\r\nimport { DRAFT_STATUS } from \"./../../constants/templateFilters\";\r\nimport { MESSAGES } from \"./../../constants/global\";\r\nimport {\r\n  getApplicationsLogic,\r\n  showFiltersFlagLogic,\r\n  getLinesofBusinessLogic,\r\n  getCategoriesLogic,\r\n  setAppliedFiltersLogic,\r\n} from \"./../../services\";\r\nimport {\r\n  applicationSelector,\r\n  linesOfBusinessSelector,\r\n  categorySelector,\r\n} from \"./../../selectors\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { userAppClientsSelector, MODULES } from \"@evolent/roots\";\r\n\r\nconst StyledContainer = styled.div`\r\n  && {\r\n    padding: ${Spacing.spacingLarge} ${Spacing.spacingNone};\r\n  }\r\n`;\r\n\r\nconst StyledButton = styled(EhButton)`\r\n  && {\r\n    margin-top: ${Spacing.spacingLarge};\r\n  }\r\n`;\r\n\r\nconst TemplateFiltersComponent = ({\r\n  applicationsData,\r\n  clients,\r\n  statusId,\r\n  appliedFilters,\r\n  linesOfBusinessData,\r\n  categoriesData,\r\n  getCategoriesLogic,\r\n  getApplicationsLogic,\r\n  getLinesofBusinessLogic,\r\n  setAppliedFiltersLogic,\r\n}) => {\r\n  const { loading: appLoading, data: applications } = applicationsData;\r\n  const { loading: lobsLoading, data: linesOfBusiness } = linesOfBusinessData;\r\n  const { loading: categoriesLoading, data: categories } = categoriesData;\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getApplicationsLogic();\r\n      await getLinesofBusinessLogic();\r\n      await getCategoriesLogic();\r\n    })();\r\n  }, []);\r\n\r\n  const sortedClients = sortBy(clients[MODULES.letterAdminTool], [\"name\"]);\r\n\r\n  return (\r\n    <StyledContainer>\r\n      <EhForm\r\n        initialValues={appliedFilters}\r\n        onSave={async (data) => {\r\n          await setAppliedFiltersLogic({ statusId, data });\r\n        }}\r\n      >\r\n        {(form) => (\r\n          <Grid>\r\n            <Grid.Row>\r\n              <Grid.Column width={3}>\r\n                <EhDropdownField\r\n                  fieldLabel=\"Client\"\r\n                  display=\"name\"\r\n                  keyField=\"id\"\r\n                  name=\"client\"\r\n                  placeholder=\"Select Client\"\r\n                  options={sortedClients}\r\n                  clearable\r\n                  onChange={() => form.setFieldValue(\"linesOfBusiness\")}\r\n                  data-aq=\"client-filter\"\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column width={3}>\r\n                <EhDropdownField\r\n                  fieldLabel=\"Application\"\r\n                  display=\"name\"\r\n                  loading={appLoading}\r\n                  keyField=\"value\"\r\n                  name=\"application\"\r\n                  placeholder=\"Select Application\"\r\n                  options={applications}\r\n                  onChange={() => form.setFieldValue(\"categories\")}\r\n                  clearable\r\n                  data-aq=\"application-filter\"\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column width={4}>\r\n                <EhInputField\r\n                  name=\"keyword\"\r\n                  fieldLabel=\"Keyword\"\r\n                  placeholder=\"Search template display name\"\r\n                  data-aq=\"keyword-filter\"\r\n                />\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n            <Grid.Row>\r\n              <Grid.Column width={3}>\r\n                <EhCheckboxGroupField\r\n                  fieldLabel=\"Line(s) of Business\"\r\n                  name=\"linesOfBusiness\"\r\n                  keyField=\"lobId\"\r\n                  loading={lobsLoading}\r\n                  options={filter(linesOfBusiness, {\r\n                    clientId: form.values?.client?.id,\r\n                  })}\r\n                  display=\"lobName\"\r\n                  data-aq=\"lob-checkbox\"\r\n                  enableSelectAll\r\n                  showCount\r\n                  noResultsText={MESSAGES.CLIENT_NOT_SELECTED_MESSAGE}\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column width={3}>\r\n                <EhCheckboxGroupField\r\n                  fieldLabel=\"Category\"\r\n                  name=\"categories\"\r\n                  keyField=\"categoryId\"\r\n                  loading={categoriesLoading}\r\n                  options={filter(categories, {\r\n                    applicationId: form.values?.application?.value,\r\n                  })}\r\n                  display=\"name\"\r\n                  data-aq=\"category-checkbox\"\r\n                  enableSelectAll\r\n                  showCount\r\n                  noResultsText={MESSAGES.APPLICATION_NOT_SELECTED_MESSAGE}\r\n                />\r\n              </Grid.Column>\r\n              <Grid.Column width={3}>\r\n                <EhDropdownField\r\n                  fieldLabel=\"Draft Status\"\r\n                  display=\"name\"\r\n                  keyField=\"id\"\r\n                  name=\"draftStatus\"\r\n                  placeholder=\"Select draft status\"\r\n                  options={DRAFT_STATUS}\r\n                  clearable\r\n                  data-aq=\"draft-status-filter\"\r\n                />\r\n                <StyledButton\r\n                  primary\r\n                  type=\"submit\"\r\n                  data-aq=\"apply-filters-button\"\r\n                >\r\n                  Apply\r\n                </StyledButton>\r\n              </Grid.Column>\r\n            </Grid.Row>\r\n          </Grid>\r\n        )}\r\n      </EhForm>\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nTemplateFiltersComponent.propTypes = {\r\n  getApplicationsLogic: PropTypes.func,\r\n  applicationsData: PropTypes.object,\r\n  clients: PropTypes.object,\r\n  statusId: PropTypes.number,\r\n  appliedFilters: PropTypes.object,\r\n  linesOfBusinessData: PropTypes.object,\r\n  getLinesofBusinessLogic: PropTypes.func,\r\n  categoriesData: PropTypes.object,\r\n  getCategoriesLogic: PropTypes.func,\r\n  setAppliedFiltersLogic: PropTypes.func,\r\n};\r\n\r\nexport const TemplateFilters = connect(\r\n  (state) => ({\r\n    applicationsData: applicationSelector(state),\r\n    clients: userAppClientsSelector(state),\r\n    linesOfBusinessData: linesOfBusinessSelector(state),\r\n    categoriesData: categorySelector(state),\r\n  }),\r\n  {\r\n    getApplicationsLogic,\r\n    showFiltersFlagLogic,\r\n    getLinesofBusinessLogic,\r\n    getCategoriesLogic,\r\n    setAppliedFiltersLogic,\r\n  }\r\n)(EhWithTracking(TemplateFiltersComponent, \"TemplateFiltersComponent\"));\r\n","import { Fragment } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Grid } from \"semantic-ui-react\";\r\nimport { connect } from \"react-redux\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { isEmpty } from \"lodash\";\r\nimport {\r\n  EhFlexBox,\r\n  Spacing,\r\n  EhWithTracking,\r\n  EhDropdown,\r\n  EhButton,\r\n  EhTextMat,\r\n  EhButtonGroup,\r\n} from \"@evolent/prism-react\";\r\nimport {\r\n  showFiltersFlagSelector,\r\n  appliedFiltersSelector,\r\n  getFilterButtonText,\r\n} from \"../../selectors\";\r\nimport { FilterSlider } from \"./FilterSlider\";\r\nimport { showFiltersFlagLogic } from \"../../services\";\r\nimport { templateTypes } from \"../../constants/templatesHomePage\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {\r\n  StyledBox,\r\n  StyledDiv,\r\n  StyledHeader,\r\n} from \"../../commonStyles/commonStyles\";\r\n\r\nconst StyledFilterPills = styled(EhFlexBox)`\r\n  && {\r\n    padding-left: ${Spacing.spacingNone};\r\n    margin-left: -5rem;\r\n  }\r\n`;\r\n\r\nconst StyledDropdown = styled(EhDropdown)`\r\n  && {\r\n    margin-top: ${Spacing.spacingSmall};\r\n    margin-left: -4.5rem;\r\n  }\r\n`;\r\nconst StyledRightGrid = styled(Grid.Column)`\r\n  &&&&&&&&&& {\r\n    margin-top: ${Spacing.spacingSmall};\r\n    margin-right: ${Spacing.spacingSmall};\r\n    width: 265px !important;\r\n  }\r\n`;\r\nconst StyledText = styled(EhTextMat)`\r\n  && {\r\n    margin-top: ${Spacing.spacingLarge};\r\n    padding: ${Spacing.spacingSmall};\r\n  }\r\n`;\r\nconst TemplatesSubNavComponent = ({\r\n  statusId,\r\n  onTemplateChange,\r\n  showFilters,\r\n  appliedFilters,\r\n  showFiltersFlagLogic,\r\n}) => {\r\n  const filterHasData = !isEmpty(appliedFilters);\r\n  const history = useHistory();\r\n\r\n  const createAddTemplatesHandler = () => {\r\n    history.push(\"/add-new-templates\");\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <StyledBox>\r\n        <StyledDiv>\r\n          <Grid>\r\n            <Grid.Column width={2}>\r\n              <StyledHeader data=\"tempaltes-sub-header\">\r\n                Letter Templates\r\n              </StyledHeader>\r\n            </Grid.Column>\r\n            <Grid.Column width={3}>\r\n              <StyledDropdown\r\n                display=\"templateName\"\r\n                keyField=\"statusId\"\r\n                select=\"statusId\"\r\n                name=\"templateStatus\"\r\n                value={statusId}\r\n                options={templateTypes}\r\n                onChange={onTemplateChange}\r\n                data-aq=\"template-type\"\r\n              />\r\n            </Grid.Column>\r\n            {filterHasData && (\r\n              <StyledFilterPills justifyContent=\"space-between\">\r\n                {!isEmpty(appliedFilters.client) && (\r\n                  <>\r\n                    <Grid.Column width={2}>\r\n                      <StyledText>\r\n                        Client: {appliedFilters.client.name}\r\n                      </StyledText>\r\n                    </Grid.Column>\r\n                    {(!isEmpty(appliedFilters.application) ||\r\n                      !isEmpty(appliedFilters.draftStatus)) && (\r\n                      <Grid.Column width={1}>\r\n                        <StyledText>|</StyledText>\r\n                      </Grid.Column>\r\n                    )}\r\n                  </>\r\n                )}\r\n                {!isEmpty(appliedFilters.application) && (\r\n                  <>\r\n                    <Grid.Column width={2}>\r\n                      <StyledText>\r\n                        Application: {appliedFilters.application.name}\r\n                      </StyledText>\r\n                    </Grid.Column>\r\n                    {!isEmpty(appliedFilters.draftStatus) && (\r\n                      <Grid.Column width={1}>\r\n                        <StyledText>|</StyledText>\r\n                      </Grid.Column>\r\n                    )}\r\n                  </>\r\n                )}\r\n                {!isEmpty(appliedFilters.draftStatus) && (\r\n                  <Grid.Column width={2}>\r\n                    <StyledText>\r\n                      Draft Status: {appliedFilters.draftStatus.name}\r\n                    </StyledText>\r\n                  </Grid.Column>\r\n                )}\r\n              </StyledFilterPills>\r\n            )}\r\n            <StyledRightGrid width={6} floated=\"right\" textAlign=\"right\">\r\n              <EhButtonGroup>\r\n                {!showFilters ? (\r\n                  <EhButton\r\n                    text={`${getFilterButtonText(appliedFilters)} Filter`}\r\n                    onClick={() => showFiltersFlagLogic(true)}\r\n                    data-aq=\"filter-button\"\r\n                  />\r\n                ) : (\r\n                  <EhButton\r\n                    text=\"Discard Filter\"\r\n                    negative\r\n                    onClick={() => showFiltersFlagLogic(false)}\r\n                    data-aq=\"discard-filter-button\"\r\n                  />\r\n                )}\r\n                <EhButton\r\n                  icon=\"add circle\"\r\n                  text=\"Add Template\"\r\n                  data-aq=\"add-template-btn\"\r\n                  primary\r\n                  positive\r\n                  onClick={createAddTemplatesHandler}\r\n                />\r\n              </EhButtonGroup>\r\n            </StyledRightGrid>\r\n          </Grid>\r\n        </StyledDiv>\r\n      </StyledBox>\r\n      <FilterSlider statusId={statusId} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nTemplatesSubNavComponent.propTypes = {\r\n  statusId: PropTypes.number,\r\n  onTemplateChange: PropTypes.func,\r\n  showFilters: PropTypes.bool,\r\n  appliedFilters: PropTypes.object,\r\n  showFiltersFlagLogic: PropTypes.func,\r\n};\r\n\r\nexport const TemplatesSubNav = connect(\r\n  (state, ownProps) => {\r\n    const { statusId } = ownProps;\r\n    return {\r\n      showFilters: showFiltersFlagSelector(state),\r\n      appliedFilters: appliedFiltersSelector(state, statusId),\r\n    };\r\n  },\r\n  { showFiltersFlagLogic }\r\n)(EhWithTracking(TemplatesSubNavComponent, \"TemplatesSubNavComponent\"));\r\n","import { Fragment } from \"react\";\r\nimport { PropTypes } from \"prop-types\";\r\nimport { useHistory, useRouteMatch, Route, Switch } from \"react-router-dom\";\r\nimport { EhWithTracking } from \"@evolent/prism-react\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  TEMPLATE_STATUS,\r\n  TEMPLATE_STATUS_BY_ID,\r\n} from \"../../constants/templateList\";\r\nimport { TemplatesList } from \"./TemplatesList\";\r\nimport { showFiltersFlagLogic } from \"../../services\";\r\nimport { TemplatesSubNav } from \"../template-filters/TemplatesSubNav\";\r\n\r\nconst TemplatesHomePageComponent = ({ showFiltersFlagLogic }) => {\r\n  const history = useHistory();\r\n  const match = useRouteMatch();\r\n\r\n  const templateStatus = match?.url?.replace(\"/\", \"\");\r\n  const statusId = TEMPLATE_STATUS[templateStatus.toUpperCase()];\r\n\r\n  const templateChangeHandler = async (value) => {\r\n    await showFiltersFlagLogic(false);\r\n    history.push(`/${TEMPLATE_STATUS_BY_ID[value]}`);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <TemplatesSubNav\r\n        statusId={statusId}\r\n        onTemplateChange={templateChangeHandler}\r\n      />\r\n      <Switch>\r\n        <Route exact path=\"/published\" component={TemplatesList} />\r\n        <Route exact path=\"/archived\" component={TemplatesList} />\r\n        <Route exact path=\"/new\" component={TemplatesList} />\r\n      </Switch>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nTemplatesHomePageComponent.propTypes = {\r\n  showFiltersFlagLogic: PropTypes.func,\r\n};\r\n\r\nexport const TemplatesHomePage = connect(null, { showFiltersFlagLogic })(\r\n  EhWithTracking(TemplatesHomePageComponent, \"TemplatesHomePageComponent\")\r\n);\r\n","import { useEffect, useState } from \"react\";\r\nimport {\r\n  EhFlexBox,\r\n  Spacing,\r\n  Colors,\r\n  EhTextMat,\r\n  EhDataTable,\r\n  EhDate,\r\n  EhMessage,\r\n  EhWithTracking,\r\n  EhPaginationLabel,\r\n  EhTablePagination,\r\n  showModal,\r\n} from \"@evolent/prism-react\";\r\nimport styled from \"styled-components\";\r\nimport { Icon } from \"semantic-ui-react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { useRouteMatch, useHistory } from \"react-router-dom\";\r\nimport { join, map, chunk, isEmpty } from \"lodash\";\r\nimport { download, userHasAppRoleSelector, MODULES } from \"@evolent/roots\";\r\nimport {\r\n  getTemplatesLogic,\r\n  getDownloadTemplateLogic,\r\n  setTemplatesLoadingLogic,\r\n} from \"../../services\";\r\nimport {\r\n  templatesDataSelector,\r\n  getTemplateRelatedData,\r\n  sortByColumns,\r\n  appliedFiltersSelector,\r\n  filterTemplates,\r\n  templatesErrorSelector,\r\n  templatesLoadingSelector,\r\n} from \"../../selectors\";\r\nimport {\r\n  TEMPLATES_LIST_COLUMNS,\r\n  TEMPLATES_PER_PAGE,\r\n  TEMPLATE_STATUS,\r\n} from \"../../constants/templateList\";\r\nimport { LETTER_ADMIN_USER_ROLES } from \"../../constants/global\";\r\nimport PreviewTemplate from \"../template-actions/PreviewTemplate\";\r\nimport PublishTemplate from \"../template-actions/PublishTemplate\";\r\nimport {\r\n  StyledOuterContainer,\r\n  StyledInnerContainer,\r\n} from \"../../commonStyles/commonStyles\";\r\n\r\nconst StyledContentContainer = styled.div`\r\n  margin: ${Spacing.spacingSmall} 0;\r\n`;\r\nconst StyledEhText = styled(EhTextMat)`\r\n  cursor: pointer;\r\n`;\r\nconst StyledEhMessage = styled(EhMessage)`\r\n  &&&& {\r\n    margin-top: ${Spacing.spacingSmall};\r\n  }\r\n`;\r\nconst StyledTableContainer = styled.div`\r\n  margin: ${Spacing.spacingMedium};\r\n`;\r\nconst StyledIconContainer = styled(EhFlexBox)`\r\n  && {\r\n    width: ${(props) => (props.showPublishIcon ? \"82px\" : \"54px\")};\r\n    margin-left: -1rem;\r\n  }\r\n`;\r\nconst StyledIcon = styled.span`\r\n  padding: 0 0 0 0.2rem;\r\n  cursor: pointer;\r\n  border: ${Spacing.borderWidthThin} solid ${Colors.blue[100]};\r\n  border-radius: ${Spacing.spacingXxxSmall};\r\n`;\r\nconst StyledPaginationContainer = styled.div`\r\n  padding-right: ${Spacing.spacingNone};\r\n`;\r\nconst StyledFlexBox = styled(EhFlexBox)`\r\n  padding: 0 ${Spacing.spacingLarge};\r\n`;\r\n\r\nconst getLobNames = (lobs) => join(map(lobs, \"name\"), \", \");\r\n\r\nconst getCategoryNames = (categories) => join(map(categories, \"name\"), \", \");\r\n\r\nconst {\r\n  DISPLAY_NAME,\r\n  CLIENT,\r\n  LOB,\r\n  CATEGORY,\r\n  DRAFT,\r\n  UPDATED_DATE,\r\n  ICON,\r\n} = TEMPLATES_LIST_COLUMNS;\r\n\r\nconst viewTemplateHandler = (templateData, history) => {\r\n  const { clientId, templateId } = templateData;\r\n  history.push(`/clients/${clientId}/template-details/${templateId}`);\r\n};\r\n\r\nconst getTemplateTableColumns = (\r\n  downloadTemplate,\r\n  showPublishIcon,\r\n  history\r\n) => [\r\n  {\r\n    width: 3,\r\n    field: DISPLAY_NAME.fieldName,\r\n    header: DISPLAY_NAME.name,\r\n    id: DISPLAY_NAME.id,\r\n    renderData: (template) => (\r\n      <StyledEhText\r\n        ellipsis\r\n        color=\"blue\"\r\n        shade={100}\r\n        data-aq=\"template-name\"\r\n        onClick={() => viewTemplateHandler(template, history)}\r\n      >\r\n        {template.displayName}\r\n      </StyledEhText>\r\n    ),\r\n  },\r\n  {\r\n    width: 2,\r\n    field: CLIENT.fieldName,\r\n    header: CLIENT.name,\r\n    id: CLIENT.id,\r\n    renderData: (template) => (\r\n      <EhTextMat ellipsis>{template.clientName}</EhTextMat>\r\n    ),\r\n  },\r\n  {\r\n    width: 2,\r\n    field: LOB.fieldName,\r\n    header: LOB.name,\r\n    id: LOB.id,\r\n    renderData: (template) => (\r\n      <EhTextMat ellipsis>{getLobNames(template.lineOfBusinesses)}</EhTextMat>\r\n    ),\r\n    nosort: true,\r\n  },\r\n  {\r\n    width: 2,\r\n    field: CATEGORY.fieldName,\r\n    header: CATEGORY.name,\r\n    id: CATEGORY.id,\r\n    renderData: (template) => (\r\n      <EhTextMat ellipsis>{getCategoryNames(template.categories)}</EhTextMat>\r\n    ),\r\n    nosort: true,\r\n  },\r\n  {\r\n    width: 2,\r\n    field: DRAFT.fieldName,\r\n    header: DRAFT.name,\r\n    id: DRAFT.id,\r\n    renderData: (template) => (\r\n      <EhTextMat ellipsis>{template.draftStatus}</EhTextMat>\r\n    ),\r\n  },\r\n  {\r\n    width: 2,\r\n    field: UPDATED_DATE.fieldName,\r\n    header: UPDATED_DATE.name,\r\n    id: UPDATED_DATE.id,\r\n    renderData: (template) => (\r\n      <EhDate value={template.updatedDate} type=\"date\" localTime />\r\n    ),\r\n  },\r\n  {\r\n    width: 1,\r\n    field: ICON.fieldName,\r\n    header: ICON.name,\r\n    id: ICON.id,\r\n    renderData: (template) => (\r\n      <StyledIconContainer\r\n        showPublishIcon={showPublishIcon}\r\n        justifyContent=\"space-between\"\r\n      >\r\n        <StyledIcon\r\n          onClick={() => {\r\n            const closeModal = showModal(\r\n              <PreviewTemplate\r\n                closeModal={() => closeModal()}\r\n                configId={template.configurationId}\r\n                clientId={template.clientId}\r\n              />\r\n            );\r\n          }}\r\n          data-aq=\"preview-template-icon\"\r\n        >\r\n          <Icon name=\"eye\" color=\"blue\" />\r\n        </StyledIcon>\r\n        <StyledIcon\r\n          onClick={() => {\r\n            downloadTemplate(template.clientId, template.configurationId);\r\n          }}\r\n          data-aq=\"download-template-icon\"\r\n        >\r\n          <Icon name=\"download\" color=\"blue\" />\r\n        </StyledIcon>\r\n        {showPublishIcon && (\r\n          <StyledIcon\r\n            onClick={() => {\r\n              const closeConfirmModal = showModal(\r\n                <PublishTemplate\r\n                  hasPublishedVersion={false}\r\n                  data={template}\r\n                  closeConfirmModal={() => closeConfirmModal()}\r\n                />\r\n              );\r\n            }}\r\n            data-aq=\"publish-template-icon\"\r\n          >\r\n            <Icon name=\"upload\" color=\"blue\" />\r\n          </StyledIcon>\r\n        )}\r\n      </StyledIconContainer>\r\n    ),\r\n    nosort: true,\r\n  },\r\n];\r\n\r\nconst TemplatesListComponent = (props) => {\r\n  const [page, setPage] = useState(1);\r\n  const [tableState, setTableState] = useState({\r\n    sortColumn: \"updatedDate\",\r\n    sortDescending: true,\r\n  });\r\n\r\n  const {\r\n    templatesData,\r\n    loading,\r\n    templatesError,\r\n    getTemplatesLogic,\r\n    getDownloadTemplateLogic,\r\n    hasLetterPublisherRole,\r\n    appliedFilters,\r\n    setTemplatesLoadingLogic,\r\n  } = props;\r\n\r\n  const match = useRouteMatch();\r\n  const history = useHistory();\r\n\r\n  const templateStatus = match?.url?.replace(\"/\", \"\");\r\n\r\n  const {\r\n    statusId,\r\n    NO_TEMPLATES_MESSAGE,\r\n    ERROR_MESSAGE,\r\n  } = getTemplateRelatedData(templateStatus);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      await getTemplatesLogic({ statusId });\r\n    })();\r\n    return () => {\r\n      setTemplatesLoadingLogic({ statusId });\r\n    };\r\n  }, [statusId]);\r\n\r\n  useEffect(() => {\r\n    setPage(1);\r\n  }, [appliedFilters]);\r\n\r\n  const downloadTemplate = async (clientId, configId) => {\r\n    const logic = () =>\r\n      getDownloadTemplateLogic({\r\n        clientId,\r\n        configId,\r\n      });\r\n\r\n    await download(logic);\r\n  };\r\n\r\n  const onSortChange = ({ field, sortDescending }) => {\r\n    setTableState({\r\n      sortColumn: field,\r\n      sortDescending,\r\n    });\r\n  };\r\n\r\n  const { sortColumn, sortDescending } = tableState;\r\n\r\n  let templatesList = [...templatesData];\r\n\r\n  if (!isEmpty(appliedFilters)) {\r\n    templatesList = filterTemplates(appliedFilters, templatesData);\r\n  }\r\n\r\n  const totalTemplatesCount = templatesList?.length;\r\n  const templates = chunk(\r\n    sortByColumns(templatesList, sortColumn, sortDescending),\r\n    TEMPLATES_PER_PAGE\r\n  )[page - 1];\r\n\r\n  const showPaginationContent = !loading && totalTemplatesCount;\r\n\r\n  const paginationContent = showPaginationContent ? (\r\n    <StyledPaginationContainer>\r\n      <StyledFlexBox justifyContent=\"space-between\" alignItems=\"baseline\">\r\n        <EhPaginationLabel\r\n          pageNumber={page}\r\n          totalCount={totalTemplatesCount}\r\n          pageSize={TEMPLATES_PER_PAGE}\r\n          endingText=\"Templates\"\r\n        />\r\n        <EhTablePagination\r\n          data-aq=\"template-table-pagination\"\r\n          totalPages={Math.ceil(totalTemplatesCount / TEMPLATES_PER_PAGE)}\r\n          activePage={page}\r\n          onPageChange={(e, { activePage, totalPages }) => {\r\n            activePage <= totalPages + 1 && setPage(activePage);\r\n          }}\r\n        />\r\n      </StyledFlexBox>\r\n    </StyledPaginationContainer>\r\n  ) : null;\r\n\r\n  const showPublishIcon =\r\n    hasLetterPublisherRole && statusId === TEMPLATE_STATUS.NEW;\r\n\r\n  return (\r\n    <StyledOuterContainer>\r\n      <StyledInnerContainer>\r\n        <EhFlexBox flexDirection=\"column\">\r\n          <StyledContentContainer>\r\n            {paginationContent}\r\n            <StyledTableContainer>\r\n              <EhDataTable\r\n                stickyArea={{ headers: true }}\r\n                key={`${templateStatus}-${loading}`}\r\n                fixed\r\n                loading={loading}\r\n                columns={getTemplateTableColumns(\r\n                  downloadTemplate,\r\n                  showPublishIcon,\r\n                  history\r\n                )}\r\n                data={templates}\r\n                keyField=\"templateId\"\r\n                noResultsMessage={\r\n                  <StyledEhMessage\r\n                    warning={!templatesError}\r\n                    error={templatesError}\r\n                    header={\r\n                      templatesError ? ERROR_MESSAGE : NO_TEMPLATES_MESSAGE\r\n                    }\r\n                    data-aq=\"no-templates-message\"\r\n                  />\r\n                }\r\n                data-aq=\"templates-table\"\r\n                sortable\r\n                sortColumn={sortColumn}\r\n                sortDescending={sortDescending}\r\n                onSortChange={onSortChange}\r\n              />\r\n            </StyledTableContainer>\r\n            {paginationContent}\r\n          </StyledContentContainer>\r\n        </EhFlexBox>\r\n      </StyledInnerContainer>\r\n    </StyledOuterContainer>\r\n  );\r\n};\r\n\r\nTemplatesListComponent.propTypes = {\r\n  getTemplatesLogic: PropTypes.func,\r\n  getDownloadTemplateLogic: PropTypes.func,\r\n  loading: PropTypes.bool,\r\n  templatesError: PropTypes.bool,\r\n  templatesData: PropTypes.array,\r\n  hasLetterPublisherRole: PropTypes.bool,\r\n  appliedFilters: PropTypes.object,\r\n  setTemplatesLoadingLogic: PropTypes.func,\r\n};\r\nexport const TemplatesList = connect(\r\n  (state, ownProps) => {\r\n    const { location } = ownProps;\r\n    const templateStatus = location?.pathname.replace(\"/\", \"\");\r\n    const statusId = TEMPLATE_STATUS[templateStatus.toUpperCase()];\r\n    return {\r\n      templatesData: templatesDataSelector(state, statusId),\r\n      loading: templatesLoadingSelector(state, statusId),\r\n      templatesError: templatesErrorSelector(state, statusId),\r\n      hasLetterPublisherRole: userHasAppRoleSelector(\r\n        state,\r\n        MODULES.letterAdminTool,\r\n        [LETTER_ADMIN_USER_ROLES.publishLetter]\r\n      ),\r\n      appliedFilters: appliedFiltersSelector(state, statusId),\r\n    };\r\n  },\r\n  { getTemplatesLogic, getDownloadTemplateLogic, setTemplatesLoadingLogic }\r\n)(EhWithTracking(TemplatesListComponent, \"TemplatesListComponent\"));\r\n","export const SHOW_HIDE_REASON_CRITERIA = {\r\n  ids: [22, 23, 24],\r\n};\r\n\r\nexport const SHOW_HIDE_PROGRAM_CRITERIA = {\r\n  ids: [25, 26, 27],\r\n};\r\n\r\nexport const ATTACHMENTS_STRINGS = {\r\n  MAX_SIZE: \"5MB\",\r\n  MAX_FILES: 25,\r\n  UPLOAD_ATTACHMENT_FORMAT:\r\n    \"application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.openxmlformats-officedocument.wordprocessingml.template\",\r\n  UPLOAD_ATTACHMENT_MSG:\r\n    \"Supports files up to 5 MB and file types .docx and .dotx\",\r\n  SUPPORTED_FILES_MESSAGE:\r\n    \"Supports up to 25 files per upload (up to 5 MB and files types - .docx and .dotx)\",\r\n};\r\n\r\nexport const DUPLICATE_TEMPLATE_MESSAGE =\r\n  \"Display names must be unique. You have entered the following display names multiple times:\";\r\n","export const MESSAGES = {\r\n  APPLICATION_NOT_SELECTED_MESSAGE: \"Select Application to view options\",\r\n  CLIENT_NOT_SELECTED_MESSAGE: \"Select Client to view options\",\r\n  REQUIRED_TO_PUBLISH: \"Required to Publish\",\r\n};\r\n\r\nexport const APPLICATIONS = {\r\n  cm: 1,\r\n  um: 2,\r\n  all: 0,\r\n};\r\n\r\nexport const LETTER_ADMIN_USER_ROLES = {\r\n  authorLetter: \"Letter Author\",\r\n  publishLetter: \"Letter Publisher\",\r\n};\r\nexport const TEMPLATE_DESCRIPTION_MAX_LENGTH = 2000;\r\n\r\nexport const TOAST_PROPS = {\r\n  position: \"bottom-right\",\r\n};\r\n\r\nexport const TOAST_MESSAGES = {\r\n  TEMPLATE_ARCHIVED_SUCCESS: \"The template was successfully archived\",\r\n  TEMPLATE_DRAFT_SUCCESS: \"The template draft was successfully saved\",\r\n  TEMPLATE_SAVED_SUCCESS: \"The template was successfully saved\",\r\n  VALIDATE_DRAFT_SUCCESS: \"Draft Successfully Validated\",\r\n  TEMPLATE_PUBLISH_SUCCESS: \"The Template was successfully published\",\r\n};\r\n\r\nexport const DEFAULT_BACKGROUND_COLOR = \"#d5d5d6\";\r\n","export const MERGE_FIELDS_COLUMNS = {\r\n  APPLICATION: {\r\n    id: \"m1\",\r\n    name: \"Application\",\r\n    fieldName: \"application\",\r\n  },\r\n  NAME: {\r\n    id: \"m2\",\r\n    name: \"Name\",\r\n    fieldName: \"displayName\",\r\n  },\r\n  DESCRIPTION: {\r\n    id: \"m3\",\r\n    name: \"Description\",\r\n    fieldName: \"description\",\r\n  },\r\n};\r\n\r\nexport const USER_DEFINED_FIELD_COLUMNS = {\r\n  APPLICATION: {\r\n    id: 0,\r\n    name: \"Application\",\r\n    fieldName: \"application\",\r\n  },\r\n  NAME: {\r\n    id: 1,\r\n    name: \"Name\",\r\n    fieldName: \"displayName\",\r\n  },\r\n  PROMPT_TEXT: {\r\n    id: 2,\r\n    name: \"Prompt Text\",\r\n    fieldName: \"promptText\",\r\n  },\r\n  REFERENCE_TEXT: {\r\n    id: 3,\r\n    name: \"Reference Text?\",\r\n    fieldName: \"hasRefText\",\r\n  },\r\n};\r\n\r\nexport const MESSAGES = {\r\n  NO_USER_DEFINED_FIELDS_MESSAGE: \"No User Defined Fields Found\",\r\n  NO_MERGE_FIELDS_MESSAGE: \"Mo Merge Fields Found\",\r\n  ERROR_GETTING_MERGE_FIELDS: \"Error in getting Merge Fields\",\r\n  ERROR_GETTING_USER_DEFINED_FIELDS: \"Error in getting User Defined Fields\",\r\n};\r\n\r\nexport const FIELDS_PER_PAGE = 25;\r\n\r\nexport const GUIDE_FIELDS_STATUS = {\r\n  MERGE_FIELDS: \"Merge_Fields\",\r\n  USER_DEFINED_FIELDS: \"User_Defined_Fields\",\r\n};\r\n","export const PREVIEW_TITLES = {\r\n  STEP_ONE: \"Letter Details\",\r\n  STEP_TWO: \"Preview Template\",\r\n};\r\n\r\nexport const PUBLISH_TEMPLATE = {\r\n  TITLE: \"Publish this Letter?\",\r\n  TEXT: \"Are you sure you want to publish this letter?\",\r\n  TEXT_REPLACE: \"This letter will replace the currently published letter.\",\r\n};\r\n\r\nexport const PUBLISH_REQUIRES_DATA = {\r\n  TITLE: \"Missing Required Fields\",\r\n  PUBLISH_TEXT: \"Please complete all fields before publishing.\",\r\n};\r\n\r\nexport const VALIDATE_DRAFT = {\r\n  TITLE: \"Validate this Draft?\",\r\n  TEXT: \"Are you sure you want to mark this draft as validated?\",\r\n  SUCCESS: \"Draft Successfully Validated\",\r\n};\r\n\r\nexport const REPLACE_DRAFT = {\r\n  TITLE: \"Are you sure?\",\r\n  TEXT: \"This letter will replace the current draft.\",\r\n};\r\n","export const TEMPLATE_VERSIONS_COLUMNS = {\r\n  VERSION: {\r\n    id: 0,\r\n    name: \"Version\",\r\n    fieldName: \"version\",\r\n  },\r\n  TYPE: {\r\n    id: 1,\r\n    name: \"Type\",\r\n    fieldName: \"type\",\r\n  },\r\n  FILE_NAME: {\r\n    id: 2,\r\n    name: \"File Name\",\r\n    fieldName: \"fileName\",\r\n  },\r\n  DRAFT_STATUS: {\r\n    id: 3,\r\n    name: \"Draft Status\",\r\n    fieldName: \"draftStatus\",\r\n  },\r\n  PUBLISHED_DATE: {\r\n    id: 5,\r\n    name: \"Published\",\r\n    fieldName: \"publishedDate\",\r\n  },\r\n  UPDATED_DATE: {\r\n    id: 5,\r\n    name: \"Updated\",\r\n    fieldName: \"updatedDate\",\r\n  },\r\n  ACTIONS: {\r\n    id: 6,\r\n    name: \"\",\r\n    fieldName: \"actionButtons\",\r\n  },\r\n};\r\nexport const TEMPLATE_STATUS_NAMES = {\r\n  NEW: \"New\",\r\n  PUBLISH: \"Publish\",\r\n  ARCHIVE: \"Archive\",\r\n};\r\n\r\nexport const TEMPLATE_STATUS_MAPPING = {\r\n  New: \"Draft\",\r\n  Publish: \"Published\",\r\n  Archive: \"Prior Version\",\r\n};\r\n\r\nexport const ACTION_STATUS = {\r\n  Edit: \"Edit\",\r\n  View: \"View\",\r\n};\r\n\r\nexport const ARCHIVE_TEMPLATE = {\r\n  TITLE: \"Archive Template\",\r\n  TEXT: \"Archiving the template will unpublish the letter from Identifi\",\r\n};\r\n","export const DRAFT_STATUS = [\r\n  {\r\n    name: \"Validated\",\r\n    id: 1,\r\n  },\r\n  {\r\n    name: \"Not Validated\",\r\n    id: 2,\r\n  },\r\n];\r\n\r\nexport const EXPAND_SLIDER_DURATION = 300;\r\n","export const DRAFT_STATUS = {\r\n  STATUS: [\r\n    {\r\n      name: \"Validated\",\r\n      value: true,\r\n    },\r\n    {\r\n      name: \"Not Validated\",\r\n      value: false,\r\n    },\r\n  ],\r\n};\r\n\r\nexport const TEMPLATE_STATUS = {\r\n  ARCHIVED: 1,\r\n  PUBLISHED: 2,\r\n  NEW: 3,\r\n};\r\n\r\nexport const TEMPLATE_STATUS_DETAILS = {\r\n  Archived: { statusName: \"Archived\", statusId: 1 },\r\n  Published: { statusName: \"Published\", statusId: 2 },\r\n  New: { statusName: \"New\", statusId: 3 },\r\n};\r\n\r\nexport const TEMPLATE_STATUS_NAME = {\r\n  PUBLISHED: \"Published\",\r\n  NEW: \"New\",\r\n  ARCHIVED: \"Archived\",\r\n};\r\n\r\nexport const TEMPLATE_STATUS_BY_ID = {\r\n  1: \"archived\",\r\n  2: \"published\",\r\n  3: \"new\",\r\n};\r\n\r\nexport const MESSAGES = {\r\n  NO_NEW_TEMPLATES_MESSAGE: \"No New Letter Templates Found\",\r\n  NO_ARCHIVED_TEMPLATES_MESSAGE: \"No Archived Letter Templates Found\",\r\n  NO_PUBLISHED_TEMPLATES_MESSAGE: \"No Published Letter Templates Found\",\r\n  ERROR_GETTING_PUBLISHED_TEMPLATES: \"Error in getting Published Templates\",\r\n  ERROR_GETTING_NEW_TEMPLATES: \"Error in getting New Templates\",\r\n  ERROR_GETTING_ARCHIVED_TEMPLATES: \"Error in getting Archived Templates\",\r\n};\r\n\r\nexport const TEMPLATES_LIST_COLUMNS = {\r\n  DISPLAY_NAME: {\r\n    id: 0,\r\n    name: \"Display Name\",\r\n    fieldName: \"displayName\",\r\n  },\r\n  CLIENT: {\r\n    id: 1,\r\n    name: \"Client\",\r\n    fieldName: \"clientName\",\r\n  },\r\n  LOB: {\r\n    id: 2,\r\n    name: \"LOB\",\r\n    fieldName: \"lob\",\r\n  },\r\n  CATEGORY: {\r\n    id: 3,\r\n    name: \"Category\",\r\n    fieldName: \"category\",\r\n  },\r\n  DRAFT: {\r\n    id: 4,\r\n    name: \"Draft\",\r\n    fieldName: \"draftStatus\",\r\n  },\r\n  UPDATED_DATE: {\r\n    id: 5,\r\n    name: \"Updated\",\r\n    fieldName: \"updatedDate\",\r\n  },\r\n  ICON: {\r\n    id: 6,\r\n    name: \"\",\r\n    fieldName: \"\",\r\n  },\r\n};\r\n\r\nexport const TEMPLATES_PER_PAGE = 25;\r\n","export const templateTypes = [\r\n  { templateName: \"Published\", statusId: 2 },\r\n  { templateName: \"Archived\", statusId: 1 },\r\n  { templateName: \"New\", statusId: 3 },\r\n];\r\n","import { store } from \"./createStore\";\r\nimport { LocalStorageLogging } from \"@evolent/roots\";\r\nimport { get } from \"lodash\";\r\n\r\nconst getUserName = () => {\r\n  return get(store.getState(), \"app.auth.userProfile.id\");\r\n};\r\n\r\nconst localStorageLogStore = new LocalStorageLogging({\r\n  applicationName: \"Letter Admin UI\",\r\n  localStorageKey: \"Identifi.ErrorLog\",\r\n  userNameGetter: getUserName,\r\n});\r\n\r\nexport default localStorageLogStore;\r\n","import thunk from \"redux-thunk\";\r\nimport { applyMiddleware, combineReducers, compose, createStore } from \"redux\";\r\nimport immutableStateInvariant from \"redux-immutable-state-invariant\";\r\nimport domain from \"scripts/ducks\";\r\nimport { APP_SETTINGS, RequestInterceptor } from \"@evolent/roots\";\r\n\r\nimport { createHttpClient } from \"@evolent/prism-react\";\r\n\r\nimport app from \"@evolent/roots/lib/ducks\";\r\n\r\nexport const reducers = combineReducers({\r\n  app,\r\n  domain,\r\n});\r\n\r\nfunction setupStore() {\r\n  const idpClient = createHttpClient(\r\n    APP_SETTINGS.idpUrl,\r\n    null,\r\n    RequestInterceptor\r\n  );\r\n\r\n  const identifiServicesClient = createHttpClient(\r\n    APP_SETTINGS.identifiServices,\r\n    null,\r\n    RequestInterceptor\r\n  );\r\n\r\n  const letterAdminServicesClient = createHttpClient(\r\n    APP_SETTINGS.letterAdminServices,\r\n    null,\r\n    RequestInterceptor\r\n  );\r\n\r\n  const identifiUmServicesClient = createHttpClient(\r\n    APP_SETTINGS.identifiUmServices,\r\n    null,\r\n    RequestInterceptor\r\n  );\r\n\r\n  const servicesClient = createHttpClient(\r\n    APP_SETTINGS.services,\r\n    null,\r\n    RequestInterceptor\r\n  );\r\n\r\n  const careServicesClient = createHttpClient(\r\n    APP_SETTINGS.careServices,\r\n    null,\r\n    RequestInterceptor\r\n  );\r\n\r\n  const middlewares = [];\r\n\r\n  middlewares.push(\r\n    thunk.withExtraArgument({\r\n      idpClient,\r\n      identifiServicesClient,\r\n      letterAdminServicesClient,\r\n      identifiUmServicesClient,\r\n      servicesClient,\r\n      careServicesClient,\r\n    })\r\n  );\r\n\r\n  let composeEnhancers = compose;\r\n  if (process.env.NODE_ENV === \"development\") {\r\n    middlewares.push(immutableStateInvariant());\r\n    composeEnhancers = window[\"__REDUX_DEVTOOLS_EXTENSION__\"]\r\n      ? window[\"__REDUX_DEVTOOLS_EXTENSION_COMPOSE__\"]\r\n      : compose;\r\n  }\r\n\r\n  const enhancer = composeEnhancers(applyMiddleware(...middlewares));\r\n\r\n  const store = createStore(reducers, {}, enhancer);\r\n\r\n  if (module.hot) {\r\n    // Enable Webpack hot module replacement for reducers\r\n    module.hot.accept(\"scripts/ducks\", () => {\r\n      const newDuck = require(\"scripts/ducks\").default;\r\n      const nextRootReducer = combineReducers({\r\n        app,\r\n        domain: newDuck,\r\n      });\r\n      store.replaceReducer(nextRootReducer);\r\n    });\r\n  }\r\n\r\n  return store;\r\n}\r\n\r\nexport const store = setupStore();\r\n","import { createAction } from \"@evolent/roots\";\r\n\r\nconst INITIAL_STATE = { loading: false, data: [] };\r\n\r\nconst actionTypes = {\r\n  SET_APPLICATIONS: \"SET_APPLICATIONS\",\r\n  SET_APPLICATIONS_LOADING: \"SET_APPLICATIONS_LOADING\",\r\n};\r\n\r\nconst setApplicationsHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    data: action.data,\r\n  };\r\n};\r\n\r\nconst setApplicationsLoadingHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loading: action.data,\r\n  };\r\n};\r\n\r\nexport const actions = {\r\n  setApplications: createAction(actionTypes.SET_APPLICATIONS),\r\n  setApplicationsLoading: createAction(actionTypes.SET_APPLICATIONS_LOADING),\r\n};\r\n\r\nconst ACTION_HANDLERS = {\r\n  [actionTypes.SET_APPLICATIONS]: setApplicationsHandler,\r\n  [actionTypes.SET_APPLICATIONS_LOADING]: setApplicationsLoadingHandler,\r\n};\r\n\r\nconst applicationsReducer = (state = INITIAL_STATE, action) => {\r\n  const handler = ACTION_HANDLERS[action.type];\r\n  return handler ? handler(state, action) : state;\r\n};\r\n\r\nexport default applicationsReducer;\r\n","import { createAction } from \"@evolent/roots\";\r\n\r\nconst INITIAL_STATE = { loading: false, data: [] };\r\n\r\nconst actionTypes = {\r\n  SET_CATEGORIES: \"SET_CATEGORIES\",\r\n  SET_CATEGORIES_LOADING: \"SET_CATEGORIES_LOADING\",\r\n};\r\n\r\nconst setCategoriesHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    data: action.data,\r\n  };\r\n};\r\n\r\nconst setCategoriesLoadingHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loading: action.data,\r\n  };\r\n};\r\n\r\nexport const actions = {\r\n  setCategories: createAction(actionTypes.SET_CATEGORIES),\r\n  setCategoriesLoading: createAction(actionTypes.SET_CATEGORIES_LOADING),\r\n};\r\n\r\nconst ACTION_HANDLERS = {\r\n  [actionTypes.SET_CATEGORIES]: setCategoriesHandler,\r\n  [actionTypes.SET_CATEGORIES_LOADING]: setCategoriesLoadingHandler,\r\n};\r\n\r\nconst categoriesReducer = (state = INITIAL_STATE, action) => {\r\n  const handler = ACTION_HANDLERS[action.type];\r\n  return handler ? handler(state, action) : state;\r\n};\r\n\r\nexport default categoriesReducer;\r\n","import { createAction } from \"@evolent/roots\";\r\nimport { GUIDE_FIELDS_STATUS } from \"../constants/guide\";\r\n\r\nconst INITIAL_STATE = {\r\n  mergeFieldsFilters: {},\r\n  userDefinedFieldFilters: {},\r\n};\r\n\r\nconst SET_GUIDE_FILTERS = \"SET_GUIDE_FILTERS\";\r\n\r\nconst setGuideFiltersHandler = (state, action) => {\r\n  if (action.data.type === GUIDE_FIELDS_STATUS.MERGE_FIELDS) {\r\n    return {\r\n      ...state,\r\n      mergeFieldsFilters: action.data.data,\r\n    };\r\n  }\r\n  return {\r\n    ...state,\r\n    userDefinedFieldFilters: action.data.data,\r\n  };\r\n};\r\n\r\nexport const actions = {\r\n  setGuideFilters: createAction(SET_GUIDE_FILTERS),\r\n};\r\n\r\nconst ACTION_HANDLERS = {\r\n  [SET_GUIDE_FILTERS]: setGuideFiltersHandler,\r\n};\r\n\r\nconst guideFiltersReducer = (state = INITIAL_STATE, action) => {\r\n  const handler = ACTION_HANDLERS[action.type];\r\n  return handler ? handler(state, action) : state;\r\n};\r\n\r\nexport default guideFiltersReducer;\r\n","import { combineReducers } from \"redux\";\r\nimport templates, { actions as templateActions } from \"./templateList.reducer\";\r\nimport templateStatus, {\r\n  actions as templateStatusActions,\r\n} from \"./templateStatus.reducer\";\r\nimport mergeFields, {\r\n  actions as mergeFieldsActions,\r\n} from \"./mergeFields.reducer\";\r\nimport userDefinedFields, {\r\n  actions as userDefinedFieldsActions,\r\n} from \"./userDefinedFields.reducer\";\r\nimport templateFilters, {\r\n  actions as templateFilterActions,\r\n} from \"./templateFilters.reducer\";\r\nimport applications, {\r\n  actions as applicationActions,\r\n} from \"./applications.reducer\";\r\nimport lobs, { actions as lobActions } from \"./lobs.reducer\";\r\nimport categories, { actions as categoryActions } from \"./categories.reducer\";\r\nimport reasons, { actions as reasonActions } from \"./reasons.reducer\";\r\nimport recipients, { actions as recipientActions } from \"./recipients.reducer\";\r\nimport languages, { actions as languageActions } from \"./languages.reducer\";\r\nimport programs, { actions as programActions } from \"./programs.reducer\";\r\nimport opsSegments, {\r\n  actions as opsSegmentActions,\r\n} from \"./opsSegments.reducer\";\r\nimport templateDetails, {\r\n  actions as templateDetailActions,\r\n} from \"./templateDetails.reducer\";\r\nimport guideFilters, {\r\n  actions as guideFiltersActions,\r\n} from \"./guideFilters.reducer\";\r\n\r\nexport default combineReducers({\r\n  templates,\r\n  mergeFields,\r\n  userDefinedFields,\r\n  templateFilters,\r\n  applications,\r\n  lobs,\r\n  categories,\r\n  reasons,\r\n  recipients,\r\n  languages,\r\n  programs,\r\n  opsSegments,\r\n  templateDetails,\r\n  guideFilters,\r\n  templateStatus,\r\n});\r\n\r\nexport const actions = {\r\n  templateActions,\r\n  mergeFieldsActions,\r\n  userDefinedFieldsActions,\r\n  templateFilterActions,\r\n  applicationActions,\r\n  lobActions,\r\n  categoryActions,\r\n  reasonActions,\r\n  recipientActions,\r\n  languageActions,\r\n  programActions,\r\n  opsSegmentActions,\r\n  templateDetailActions,\r\n  guideFiltersActions,\r\n  templateStatusActions,\r\n};\r\n","import { createAction } from \"@evolent/roots\";\r\n\r\nconst INITIAL_STATE = {};\r\n\r\nconst actionTypes = {\r\n  SET_LANGUAGES: \"SET_LANGUAGES\",\r\n  SET_LANGUAGES_LOADING: \"SET_LANGUAGES_LOADING\",\r\n};\r\n\r\nconst setLanguagesHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    [action.data.clientId]: {\r\n      loading: false,\r\n      data: action.data.data,\r\n    },\r\n  };\r\n};\r\n\r\nconst setLanguagesLoadingHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    [action.data.clientId]: {\r\n      ...state.clientId,\r\n      loading: action.data.data,\r\n    },\r\n  };\r\n};\r\n\r\nexport const actions = {\r\n  setLanguages: createAction(actionTypes.SET_LANGUAGES),\r\n  setLanguagesLoading: createAction(actionTypes.SET_LANGUAGES_LOADING),\r\n};\r\n\r\nconst ACTION_HANDLERS = {\r\n  [actionTypes.SET_LANGUAGES]: setLanguagesHandler,\r\n  [actionTypes.SET_LANGUAGES_LOADING]: setLanguagesLoadingHandler,\r\n};\r\n\r\nconst languagesReducer = (state = INITIAL_STATE, action) => {\r\n  const handler = ACTION_HANDLERS[action.type];\r\n  return handler ? handler(state, action) : state;\r\n};\r\n\r\nexport default languagesReducer;\r\n","import { createAction } from \"@evolent/roots\";\r\n\r\nconst INITIAL_STATE = { loading: false, data: [] };\r\n\r\nconst actionTypes = {\r\n  SET_LOBS: \"SET_LOBS\",\r\n  SET_LOBS_LOADING: \"SET_LOBS_LOADING\",\r\n};\r\n\r\nconst setLobsHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    data: action.data,\r\n  };\r\n};\r\n\r\nconst setLobsLoadingHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loading: action.data,\r\n  };\r\n};\r\n\r\nexport const actions = {\r\n  setLobs: createAction(actionTypes.SET_LOBS),\r\n  setLobsLoading: createAction(actionTypes.SET_LOBS_LOADING),\r\n};\r\n\r\nconst ACTION_HANDLERS = {\r\n  [actionTypes.SET_LOBS]: setLobsHandler,\r\n  [actionTypes.SET_LOBS_LOADING]: setLobsLoadingHandler,\r\n};\r\n\r\nconst lobsReducer = (state = INITIAL_STATE, action) => {\r\n  const handler = ACTION_HANDLERS[action.type];\r\n  return handler ? handler(state, action) : state;\r\n};\r\n\r\nexport default lobsReducer;\r\n","import { createAction } from \"@evolent/roots\";\r\n\r\nconst INITIAL_STATE = { data: [] };\r\n\r\nconst SET_MERGE_FIELDS = \"SET_MERGE_FIELDS\";\r\n\r\nconst setMergeFieldsHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    data: action.data,\r\n  };\r\n};\r\n\r\nexport const actions = {\r\n  setMergeFields: createAction(SET_MERGE_FIELDS),\r\n};\r\n\r\nconst ACTION_HANDLERS = {\r\n  [SET_MERGE_FIELDS]: setMergeFieldsHandler,\r\n};\r\n\r\nconst mergeFieldsReducer = (state = INITIAL_STATE, action) => {\r\n  const handler = ACTION_HANDLERS[action.type];\r\n  return handler ? handler(state, action) : state;\r\n};\r\n\r\nexport default mergeFieldsReducer;\r\n","import { createAction } from \"@evolent/roots\";\r\n\r\nconst INITIAL_STATE = {};\r\n\r\nconst actionTypes = {\r\n  SET_OPS_SEGMENTS: \"SET_OPS_SEGMENTS\",\r\n  SET_OPS_SEGMENTS_LOADING: \"SET_OPS_SEGMENTS_LOADING\",\r\n};\r\n\r\nconst setOpsSegmentsHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    [action.data.clientId]: {\r\n      loading: false,\r\n      data: action.data.data,\r\n    },\r\n  };\r\n};\r\n\r\nconst setOpsSegmentsLoadingHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    [action.data.clientId]: {\r\n      ...state.clientId,\r\n      loading: action.data.data,\r\n    },\r\n  };\r\n};\r\n\r\nexport const actions = {\r\n  setOpsSegments: createAction(actionTypes.SET_OPS_SEGMENTS),\r\n  setOpsSegmentsLoading: createAction(actionTypes.SET_OPS_SEGMENTS_LOADING),\r\n};\r\n\r\nconst ACTION_HANDLERS = {\r\n  [actionTypes.SET_OPS_SEGMENTS]: setOpsSegmentsHandler,\r\n  [actionTypes.SET_OPS_SEGMENTS_LOADING]: setOpsSegmentsLoadingHandler,\r\n};\r\n\r\nconst opsSegmentsReducer = (state = INITIAL_STATE, action) => {\r\n  const handler = ACTION_HANDLERS[action.type];\r\n  return handler ? handler(state, action) : state;\r\n};\r\n\r\nexport default opsSegmentsReducer;\r\n","import { createAction } from \"@evolent/roots\";\r\n\r\nconst INITIAL_STATE = {};\r\n\r\nconst actionTypes = {\r\n  SET_PROGRAMS: \"SET_PROGRAMS\",\r\n  SET_PROGRAMS_LOADING: \"SET_PROGRAMS_LOADING\",\r\n};\r\n\r\nconst setProgramsHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    [action.data.clientId]: {\r\n      loading: false,\r\n      data: action.data.data,\r\n    },\r\n  };\r\n};\r\n\r\nconst setProgramsLoadingHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    [action.data.clientId]: {\r\n      ...state.clientId,\r\n      loading: action.data.data,\r\n    },\r\n  };\r\n};\r\n\r\nexport const actions = {\r\n  setPrograms: createAction(actionTypes.SET_PROGRAMS),\r\n  setProgramsLoading: createAction(actionTypes.SET_PROGRAMS_LOADING),\r\n};\r\n\r\nconst ACTION_HANDLERS = {\r\n  [actionTypes.SET_PROGRAMS]: setProgramsHandler,\r\n  [actionTypes.SET_PROGRAMS_LOADING]: setProgramsLoadingHandler,\r\n};\r\n\r\nconst programsReducer = (state = INITIAL_STATE, action) => {\r\n  const handler = ACTION_HANDLERS[action.type];\r\n  return handler ? handler(state, action) : state;\r\n};\r\n\r\nexport default programsReducer;\r\n","import { createAction } from \"@evolent/roots\";\r\n\r\nconst INITIAL_STATE = {};\r\n\r\nconst actionTypes = {\r\n  SET_REASONS: \"SET_REASONS\",\r\n  SET_REASONS_LOADING: \"SET_REASONS_LOADING\",\r\n};\r\n\r\nconst setReasonsHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    [action.data.clientId]: {\r\n      loading: false,\r\n      data: action.data.data,\r\n    },\r\n  };\r\n};\r\n\r\nconst setReasonsLoadingHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    [action.data.clientId]: {\r\n      ...state.clientId,\r\n      loading: action.data.data,\r\n    },\r\n  };\r\n};\r\n\r\nexport const actions = {\r\n  setReasons: createAction(actionTypes.SET_REASONS),\r\n  setReasonsLoading: createAction(actionTypes.SET_REASONS_LOADING),\r\n};\r\n\r\nconst ACTION_HANDLERS = {\r\n  [actionTypes.SET_REASONS]: setReasonsHandler,\r\n  [actionTypes.SET_REASONS_LOADING]: setReasonsLoadingHandler,\r\n};\r\n\r\nconst reasonsReducer = (state = INITIAL_STATE, action) => {\r\n  const handler = ACTION_HANDLERS[action.type];\r\n  return handler ? handler(state, action) : state;\r\n};\r\n\r\nexport default reasonsReducer;\r\n","import { createAction } from \"@evolent/roots\";\r\n\r\nconst INITIAL_STATE = { loading: false, data: [] };\r\n\r\nconst actionTypes = {\r\n  SET_RECIPIENTS: \"SET_RECIPIENTS\",\r\n  SET_RECIPIENTS_LOADING: \"SET_RECIPIENTS_LOADING\",\r\n};\r\n\r\nconst setRecipientsHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loading: false,\r\n    data: action.data,\r\n  };\r\n};\r\n\r\nconst setRecipientsLoadingHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    loading: action.data,\r\n  };\r\n};\r\n\r\nexport const actions = {\r\n  setRecipients: createAction(actionTypes.SET_RECIPIENTS),\r\n  setRecipientsLoading: createAction(actionTypes.SET_RECIPIENTS_LOADING),\r\n};\r\n\r\nconst ACTION_HANDLERS = {\r\n  [actionTypes.SET_RECIPIENTS]: setRecipientsHandler,\r\n  [actionTypes.SET_RECIPIENTS_LOADING]: setRecipientsLoadingHandler,\r\n};\r\n\r\nconst recipientsReducer = (state = INITIAL_STATE, action) => {\r\n  const handler = ACTION_HANDLERS[action.type];\r\n  return handler ? handler(state, action) : state;\r\n};\r\n\r\nexport default recipientsReducer;\r\n","import { createAction } from \"@evolent/roots\";\r\n\r\nconst actionTypes = {\r\n  SET_TEMPLATE_DETAILS: \"SET_TEMPLATE_DETAILS\",\r\n  SET_TEMPLATE_DETAILS_LOADING: \"SET_TEMPLATE_DETAILS_LOADING\",\r\n};\r\n\r\nconst INITIAL_STATE = {};\r\n\r\nconst setTemplateDetailsLoadingHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    [action.data.templateId]: {\r\n      ...state.templateId,\r\n      loading: action.data.data,\r\n    },\r\n  };\r\n};\r\n\r\nconst setTemplatesDetailsHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    [action.data.templateId]: {\r\n      loading: false,\r\n      data: {\r\n        ...action.data.data,\r\n      },\r\n    },\r\n  };\r\n};\r\n\r\nexport const actions = {\r\n  setTemplateDetails: createAction(actionTypes.SET_TEMPLATE_DETAILS),\r\n  setTemplateDetailsLoading: createAction(\r\n    actionTypes.SET_TEMPLATE_DETAILS_LOADING\r\n  ),\r\n};\r\nconst ACTION_HANDLERS = {\r\n  [actionTypes.SET_TEMPLATE_DETAILS]: setTemplatesDetailsHandler,\r\n  [actionTypes.SET_TEMPLATE_DETAILS_LOADING]: setTemplateDetailsLoadingHandler,\r\n};\r\n\r\nconst templateDetailsReducer = (state = INITIAL_STATE, action) => {\r\n  const handler = ACTION_HANDLERS[action.type];\r\n  return handler ? handler(state, action) : state;\r\n};\r\n\r\nexport default templateDetailsReducer;\r\n","import { createAction } from \"@evolent/roots\";\r\nimport { TEMPLATE_STATUS } from \"../constants/templateList\";\r\n\r\nconst INITIAL_STATE = {\r\n  showFilters: false,\r\n  publishedTemplatesFilter: {},\r\n  archivedTemplatesFilter: {},\r\n  newTemplatesFilter: {},\r\n};\r\n\r\nconst actionTypes = {\r\n  SET_APPLIED_FILTERS: \"SET_APPLIED_FILTERS\",\r\n  SHOW_FILTERS_FLAG: \"SHOW_FILTERS_FLAG\",\r\n};\r\n\r\nconst setAppliedFiltersHandler = (state, action) => {\r\n  if (action.data.statusId === TEMPLATE_STATUS.ARCHIVED) {\r\n    return {\r\n      ...state,\r\n      archivedTemplatesFilter: action.data.data,\r\n      showFilters: false,\r\n    };\r\n  } else if (action.data.statusId === TEMPLATE_STATUS.NEW) {\r\n    return {\r\n      ...state,\r\n      newTemplatesFilter: action.data.data,\r\n      showFilters: false,\r\n    };\r\n  }\r\n  return {\r\n    ...state,\r\n    publishedTemplatesFilter: action.data.data,\r\n    showFilters: false,\r\n  };\r\n};\r\n\r\nconst setShowFiltersFlagHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    showFilters: action.data,\r\n  };\r\n};\r\n\r\nexport const actions = {\r\n  setAppliedFilters: createAction(actionTypes.SET_APPLIED_FILTERS),\r\n  setShowFiltersFlag: createAction(actionTypes.SHOW_FILTERS_FLAG),\r\n};\r\n\r\nconst ACTION_HANDLERS = {\r\n  [actionTypes.SET_APPLIED_FILTERS]: setAppliedFiltersHandler,\r\n  [actionTypes.SHOW_FILTERS_FLAG]: setShowFiltersFlagHandler,\r\n};\r\n\r\nconst templateFiltersReducer = (state = INITIAL_STATE, action) => {\r\n  const handler = ACTION_HANDLERS[action.type];\r\n  return handler ? handler(state, action) : state;\r\n};\r\n\r\nexport default templateFiltersReducer;\r\n","import { createAction } from \"@evolent/roots\";\r\nimport { TEMPLATE_STATUS } from \"../constants/templateList\";\r\n\r\nconst actionTypes = {\r\n  SET_TEMPLATES: \"SET_TEMPLATES\",\r\n  SET_LOADING: \"SET_LOADING\",\r\n  SET_ERROR: \"SET_ERROR\",\r\n  DELETE_TEMPLATE: \"DELETE_TEMPLATE\",\r\n};\r\n\r\nconst INITIAL_STATE = {\r\n  publishedTemplates: { loading: true, error: false, data: {} },\r\n  archivedTemplates: { loading: true, error: false, data: {} },\r\n  newTemplates: { loading: true, error: false, data: {} },\r\n};\r\n\r\nconst setLoadingHandler = (state, action) => {\r\n  switch (action.data.statusId) {\r\n    case TEMPLATE_STATUS.ARCHIVED:\r\n      return {\r\n        ...state,\r\n        archivedTemplates: {\r\n          ...state.archivedTemplates,\r\n          loading: true,\r\n          error: false,\r\n        },\r\n      };\r\n    case TEMPLATE_STATUS.NEW:\r\n      return {\r\n        ...state,\r\n        newTemplates: {\r\n          ...state.newTemplates,\r\n          loading: true,\r\n          error: false,\r\n        },\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n        publishedTemplates: {\r\n          ...state.publishedTemplates,\r\n          loading: true,\r\n          error: false,\r\n        },\r\n      };\r\n  }\r\n};\r\n\r\nconst setErrorHandler = (state, action) => {\r\n  switch (action.data.statusId) {\r\n    case TEMPLATE_STATUS.ARCHIVED:\r\n      return {\r\n        ...state,\r\n        archivedTemplates: {\r\n          ...state.archivedTemplates,\r\n          loading: false,\r\n          error: true,\r\n        },\r\n      };\r\n    case TEMPLATE_STATUS.NEW:\r\n      return {\r\n        ...state,\r\n        newTemplates: {\r\n          ...state.newTemplates,\r\n          loading: false,\r\n          error: true,\r\n        },\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n        publishedTemplates: {\r\n          ...state.publishedTemplates,\r\n          loading: false,\r\n          error: true,\r\n        },\r\n      };\r\n  }\r\n};\r\n\r\nconst setTemplatesHandler = (state, action) => {\r\n  switch (action.data.statusId) {\r\n    case TEMPLATE_STATUS.ARCHIVED:\r\n      return {\r\n        ...state,\r\n        archivedTemplates: {\r\n          data: action.data.data,\r\n          loading: false,\r\n          error: false,\r\n        },\r\n      };\r\n    case TEMPLATE_STATUS.NEW:\r\n      return {\r\n        ...state,\r\n        newTemplates: {\r\n          data: action.data.data,\r\n          loading: false,\r\n          error: false,\r\n        },\r\n      };\r\n    default:\r\n      return {\r\n        ...state,\r\n        publishedTemplates: {\r\n          data: action.data.data,\r\n          loading: false,\r\n          error: false,\r\n        },\r\n      };\r\n  }\r\n};\r\nconst deleteTemplateHandler = (state, action) => {\r\n  const newTemplatesData = { ...state.newTemplates.data };\r\n  delete newTemplatesData[action.data.templateId];\r\n  return {\r\n    ...state,\r\n    newTemplates: {\r\n      ...state.newTemplates,\r\n      data: newTemplatesData,\r\n    },\r\n  };\r\n};\r\n\r\nexport const actions = {\r\n  setTemplates: createAction(actionTypes.SET_TEMPLATES),\r\n  setLoading: createAction(actionTypes.SET_LOADING),\r\n  setError: createAction(actionTypes.SET_ERROR),\r\n  deleteTemplate: createAction(actionTypes.DELETE_TEMPLATE),\r\n};\r\nconst ACTION_HANDLERS = {\r\n  [actionTypes.SET_TEMPLATES]: setTemplatesHandler,\r\n  [actionTypes.DELETE_TEMPLATE]: deleteTemplateHandler,\r\n  [actionTypes.SET_LOADING]: setLoadingHandler,\r\n  [actionTypes.SET_ERROR]: setErrorHandler,\r\n};\r\n\r\nconst templateReducer = (state = INITIAL_STATE, action) => {\r\n  const handler = ACTION_HANDLERS[action.type];\r\n  return handler ? handler(state, action) : state;\r\n};\r\n\r\nexport default templateReducer;\r\n","import { createAction, simpleDataSetReducer } from \"@evolent/roots\";\r\n\r\nconst SET_TEMPLATE_STATUS = \"SET_TEMPLATE_STATUS\";\r\n\r\nexport default simpleDataSetReducer(\r\n  {\r\n    replaceActionType: SET_TEMPLATE_STATUS,\r\n  },\r\n  {}\r\n);\r\n\r\nexport const actions = {\r\n  setTemplateStatus: createAction(SET_TEMPLATE_STATUS),\r\n};\r\n","import { createAction } from \"@evolent/roots\";\r\n\r\nconst INITIAL_STATE = { data: [] };\r\n\r\nconst SET_USER_DEFINED_FIELDS = \"SET_USER_DEFINED_FIELDS\";\r\n\r\nconst setUserDefinedFieldsHandler = (state, action) => {\r\n  return {\r\n    ...state,\r\n    data: action.data,\r\n  };\r\n};\r\n\r\nexport const actions = {\r\n  setUserDefinedFields: createAction(SET_USER_DEFINED_FIELDS),\r\n};\r\n\r\nconst ACTION_HANDLERS = {\r\n  [SET_USER_DEFINED_FIELDS]: setUserDefinedFieldsHandler,\r\n};\r\n\r\nconst userDefinedFieldsReducer = (state = INITIAL_STATE, action) => {\r\n  const handler = ACTION_HANDLERS[action.type];\r\n  return handler ? handler(state, action) : state;\r\n};\r\n\r\nexport default userDefinedFieldsReducer;\r\n","import { createRoot } from \"react-dom/client\";\r\nimport { RouteConfig } from \"./route-config\";\r\nimport { store } from \"./createStore\";\r\n\r\n// Do not change APP_SETTINGS import to react-core,\r\n// we are adding the moduleId for this app\r\nimport APP_SETTINGS from \"./app-settings\";\r\nimport {\r\n  EhAppRoot,\r\n  EhReactPlugin,\r\n  EhThemeProvider,\r\n  EhTheme,\r\n} from \"@evolent/prism-react\";\r\nimport {\r\n  Logger,\r\n  Session,\r\n  JSUtils,\r\n  AI_SEVERITY,\r\n  AppInsightsService,\r\n  getUserProfileSelector,\r\n} from \"@evolent/roots\";\r\nimport { createBrowserHistory } from \"history\";\r\nimport localStorageLogStore from \"./createLocalStorageLogStore\";\r\n\r\nconst history = createBrowserHistory();\r\nAppInsightsService.setUpAppInsights({\r\n  history,\r\n  reactPlugin: EhReactPlugin,\r\n  getTelemetryItemProps: () => {\r\n    const userMeta = getUserProfileSelector(store.getState());\r\n    const telemetryItemProps = {};\r\n    if (userMeta) {\r\n      telemetryItemProps[\"User Name\"] = userMeta.id;\r\n    }\r\n    return telemetryItemProps;\r\n  },\r\n});\r\n\r\nLogger.initialize({\r\n  onMessageReceived: (e) => {\r\n    localStorageLogStore.log(e);\r\n    const { entry, entryType, entrySource } = e;\r\n    let { message, ...props } = entry || {};\r\n\r\n    if (typeof entry === \"string\") {\r\n      message = entry;\r\n    }\r\n\r\n    AppInsightsService.logTrace(\r\n      message,\r\n      { otherParams: JSUtils.safeStringify(props), entryType, entrySource },\r\n      AI_SEVERITY[entryType]\r\n    );\r\n  },\r\n});\r\n\r\nSession.bootstrap({\r\n  authority: APP_SETTINGS.idpUrl,\r\n  client_id: APP_SETTINGS.idpClientId,\r\n  scope: APP_SETTINGS.idpRequiredScopes,\r\n});\r\n\r\nconst renderApp = () => {\r\n  const container = document.getElementById(\"root\");\r\n  const root = createRoot(container);\r\n  root.render(\r\n    <EhAppRoot store={store}>\r\n      <EhThemeProvider theme={EhTheme}>\r\n        <RouteConfig />\r\n      </EhThemeProvider>\r\n    </EhAppRoot>\r\n  );\r\n};\r\n\r\nrenderApp();\r\n\r\nif (module.hot) {\r\n  module.hot.accept(\"./\", () => renderApp());\r\n}\r\n","import { HashRouter, Route, Switch } from \"react-router-dom\";\r\n\r\nimport Layout from \"scripts/components/layout/Layout\";\r\nimport {\r\n  createUnsavedConfirmation,\r\n  CompleteAuthentication,\r\n} from \"@evolent/prism-react\";\r\n\r\nexport const RouteConfig = () => {\r\n  return (\r\n    <HashRouter getUserConfirmation={createUnsavedConfirmation()}>\r\n      <Switch>\r\n        <Route\r\n          path=\"/complete-authentication\"\r\n          component={CompleteAuthentication}\r\n        />\r\n        <Route component={Layout} />\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n};\r\n","import {\r\n  get,\r\n  toPairs,\r\n  cloneDeep,\r\n  filter,\r\n  includes,\r\n  isEmpty,\r\n  keys,\r\n} from \"lodash\";\r\nimport { GUIDE_FIELDS_STATUS } from \"../constants/guide\";\r\n\r\nexport const mergeFieldsSelector = (state) =>\r\n  get(state, `domain.mergeFields.data`, []);\r\n\r\nexport const userDefinedFieldsSelector = (state) =>\r\n  get(state, `domain.userDefinedFields.data`, []);\r\n\r\nexport const guideFiltersSelector = (state, type) => {\r\n  if (type === GUIDE_FIELDS_STATUS.MERGE_FIELDS) {\r\n    return get(state, `domain.guideFilters.mergeFieldsFilters`, {});\r\n  }\r\n  return get(state, `domain.guideFilters.userDefinedFieldFilters`, {});\r\n};\r\n\r\nexport const filterGuideFields = (appliedFieldFilters, guideList) => {\r\n  let guides = cloneDeep(guideList);\r\n  toPairs(appliedFieldFilters).forEach(([key, value]) => {\r\n    switch (key) {\r\n      case \"application\":\r\n        guides = filter(guides, { application: value.name });\r\n        break;\r\n      case \"fieldName\":\r\n        guides = filter(guides, (guide) =>\r\n          includes(guide.displayName.toLowerCase(), value.toLowerCase())\r\n        );\r\n        break;\r\n    }\r\n  });\r\n  return guides;\r\n};\r\n\r\nexport const filterButtonText = (filters) => {\r\n  return isEmpty(filters) ||\r\n    (keys(filters).length === 1 && filters.fieldName === \"\")\r\n    ? \"\"\r\n    : \"Edit\";\r\n};\r\n","export * from \"./templateList.selector\";\r\nexport * from \"./guide.selector\";\r\nexport * from \"./templateFilters.selector\";\r\nexport * from \"./templateLookups.selector\";\r\nexport * from \"./templateDetails.selector\";\r\nexport * from \"./statusDetails.selector\";\r\n","import { get } from \"@evolent/roots\";\r\n\r\nexport const templateStatusSelector = (state) =>\r\n  get(state, \"domain.templateStatus\", {});\r\n","import { get, cloneDeep, values, orderBy } from \"lodash\";\r\n\r\nconst INITIAL_STATE = { loading: true, data: {} };\r\n\r\nexport const templateDetailsSelector = (state, templateId) =>\r\n  get(state, `domain.templateDetails[${templateId}]`, INITIAL_STATE);\r\n\r\nexport const templateConfigurationsSelector = (state, templateId) => {\r\n  const templatesConfigurations = get(\r\n    state,\r\n    `domain.templateDetails[${templateId}].data.configurations`,\r\n    {}\r\n  );\r\n\r\n  const tempConfigurations = values(cloneDeep(templatesConfigurations));\r\n  return orderBy(tempConfigurations, [\"statusName\"], [\"desc\"]);\r\n};\r\n","import { get, isEmpty, keys } from \"lodash\";\r\nimport { TEMPLATE_STATUS } from \"../constants/templateList\";\r\n\r\nexport const showFiltersFlagSelector = (state) =>\r\n  get(state, `domain.templateFilters.showFilters`, false);\r\n\r\nexport const appliedFiltersSelector = (state, statusId) => {\r\n  switch (statusId) {\r\n    case TEMPLATE_STATUS.ARCHIVED:\r\n      return get(state, `domain.templateFilters.archivedTemplatesFilter`, {});\r\n    case TEMPLATE_STATUS.NEW:\r\n      return get(state, `domain.templateFilters.newTemplatesFilter`, {});\r\n    case TEMPLATE_STATUS.PUBLISHED:\r\n      return get(state, `domain.templateFilters.publishedTemplatesFilter`, {});\r\n  }\r\n};\r\n\r\nexport const getFilterButtonText = (filters) => {\r\n  return isEmpty(filters) ||\r\n    (keys(filters).length === 1 && filters.keyword === \"\")\r\n    ? \"\"\r\n    : \"Edit\";\r\n};\r\n","import {\r\n  get,\r\n  values,\r\n  find,\r\n  map,\r\n  cloneDeep,\r\n  sortBy,\r\n  reverse,\r\n  partition,\r\n  concat,\r\n  toPairs,\r\n  every,\r\n  filter,\r\n  includes,\r\n  some,\r\n} from \"lodash\";\r\nimport { createSelector } from \"reselect\";\r\nimport { DateHandler } from \"@evolent/roots\";\r\nimport APP_SETTINGS from \"../app-settings\";\r\nimport {\r\n  DRAFT_STATUS,\r\n  TEMPLATE_STATUS,\r\n  MESSAGES,\r\n} from \"../constants/templateList\";\r\n\r\nconst templateDataSelector = (state, statusId) => {\r\n  switch (statusId) {\r\n    case TEMPLATE_STATUS.ARCHIVED:\r\n      return get(state, `domain.templates.archivedTemplates.data`, {});\r\n    case TEMPLATE_STATUS.NEW:\r\n      return get(state, `domain.templates.newTemplates.data`, {});\r\n    default:\r\n      return get(state, `domain.templates.publishedTemplates.data`, {});\r\n  }\r\n};\r\n\r\nexport const templatesLoadingSelector = (state, statusId) => {\r\n  switch (statusId) {\r\n    case TEMPLATE_STATUS.ARCHIVED:\r\n      return get(state, `domain.templates.archivedTemplates.loading`, true);\r\n    case TEMPLATE_STATUS.NEW:\r\n      return get(state, `domain.templates.newTemplates.loading`, true);\r\n    default:\r\n      return get(state, `domain.templates.publishedTemplates.loading`, true);\r\n  }\r\n};\r\n\r\nexport const templatesErrorSelector = (state, statusId) => {\r\n  switch (statusId) {\r\n    case TEMPLATE_STATUS.ARCHIVED:\r\n      return get(state, `domain.templates.archivedTemplates.error`, false);\r\n    case TEMPLATE_STATUS.NEW:\r\n      return get(state, `domain.templates.newTemplates.error`, false);\r\n    default:\r\n      return get(state, `domain.templates.publishedTemplates.error`, false);\r\n  }\r\n};\r\n\r\nconst userDataSelector = (state) =>\r\n  get(state, `app.auth.normalizedUserProfile`, {});\r\n\r\nconst decorateTemplateData = (templates, userData) => {\r\n  return map(templates, (value) => {\r\n    value.clientName = find(userData.userAppClients[APP_SETTINGS.moduleId], {\r\n      id: value.clientId,\r\n    }).name;\r\n    value.draftStatus = get(\r\n      find(DRAFT_STATUS.STATUS, [\"value\", value.hasDraftVersionValidated]),\r\n      \"name\"\r\n    );\r\n    return value;\r\n  });\r\n};\r\n\r\nexport const templatesDataSelector = createSelector(\r\n  [\r\n    (state, statusId) => templateDataSelector(state, statusId),\r\n    userDataSelector,\r\n  ],\r\n  (templateData, userData) => {\r\n    const templates = values(cloneDeep(templateData));\r\n    return decorateTemplateData(templates, userData);\r\n  }\r\n);\r\n\r\nexport const getTemplateRelatedData = (templateStatus) => {\r\n  switch (templateStatus) {\r\n    case \"new\":\r\n      return {\r\n        statusId: TEMPLATE_STATUS.NEW,\r\n        NO_TEMPLATES_MESSAGE: MESSAGES.NO_NEW_TEMPLATES_MESSAGE,\r\n        ERROR_MESSAGE: MESSAGES.ERROR_GETTING_NEW_TEMPLATES,\r\n      };\r\n    case \"archived\":\r\n      return {\r\n        statusId: TEMPLATE_STATUS.ARCHIVED,\r\n        NO_TEMPLATES_MESSAGE: MESSAGES.NO_ARCHIVED_TEMPLATES_MESSAGE,\r\n        ERROR_MESSAGE: MESSAGES.ERROR_GETTING_ARCHIVED_TEMPLATES,\r\n      };\r\n    default:\r\n      return {\r\n        statusId: TEMPLATE_STATUS.PUBLISHED,\r\n        NO_TEMPLATES_MESSAGE: MESSAGES.NO_PUBLISHED_TEMPLATES_MESSAGE,\r\n        ERROR_MESSAGE: MESSAGES.ERROR_GETTING_PUBLISHED_TEMPLATES,\r\n      };\r\n  }\r\n};\r\n\r\nexport const sortByColumns = (templateItems, sortColumn, sortDescending) => {\r\n  const templatesList = partition(\r\n    templateItems,\r\n    (item) => !!get(item, sortColumn, undefined)\r\n  );\r\n  const sortedList = sortBy(templatesList[0], (item) =>\r\n    sortColumn === \"updatedDate\"\r\n      ? DateHandler.getDate(item[sortColumn])\r\n      : [item[sortColumn]?.toLowerCase()]\r\n  );\r\n  const sortedItems = concat(sortedList, templatesList[1]);\r\n\r\n  return sortDescending ? reverse(sortedItems) : sortedItems;\r\n};\r\n\r\nexport const filterTemplates = (appliedTemplateFilters, templatesList) => {\r\n  let templates = cloneDeep(templatesList);\r\n  toPairs(appliedTemplateFilters).forEach(([key, value]) => {\r\n    switch (key) {\r\n      case \"client\":\r\n        templates = filter(templates, { clientId: value.id });\r\n        break;\r\n      case \"application\":\r\n        templates = filter(templates, { applicationId: value.value });\r\n        break;\r\n      case \"keyword\":\r\n        templates = filter(templates, (template) =>\r\n          includes(template.displayName.toLowerCase(), value.toLowerCase())\r\n        );\r\n        break;\r\n      case \"linesOfBusiness\":\r\n        templates = filter(templates, (template) =>\r\n          every(value, (lob) => includes(template.lineOfBusinessIds, lob.lobId))\r\n        );\r\n        break;\r\n      case \"categories\":\r\n        templates = filter(templates, (template) =>\r\n          every(value, (category) =>\r\n            some(\r\n              template.categories,\r\n              (el) => el.categoryId === category.categoryId\r\n            )\r\n          )\r\n        );\r\n        break;\r\n      case \"draftStatus\":\r\n        templates = filter(templates, { draftStatus: value.name });\r\n        break;\r\n    }\r\n  });\r\n  return templates;\r\n};\r\n","import { get } from \"lodash\";\r\n\r\nconst INITIAL_STATE = { loading: false, data: [] };\r\n\r\nexport const applicationSelector = (state) =>\r\n  get(state, `domain.applications`, INITIAL_STATE);\r\n\r\nexport const linesOfBusinessSelector = (state) =>\r\n  get(state, `domain.lobs`, INITIAL_STATE);\r\n\r\nexport const categorySelector = (state) =>\r\n  get(state, `domain.categories`, INITIAL_STATE);\r\n\r\nexport const reasonsSelector = (state) => get(state, `domain.reasons`, {});\r\n\r\nexport const recipientsSelector = (state) =>\r\n  get(state, `domain.recipients`, INITIAL_STATE);\r\n\r\nexport const languagesSelector = (state) => get(state, `domain.languages`, {});\r\n\r\nexport const programsSelector = (state) => get(state, `domain.programs`, {});\r\n\r\nexport const opsSegmentsSelector = (state) =>\r\n  get(state, `domain.opsSegments`, {});\r\n","import { createLogic } from \"@evolent/roots\";\r\n\r\nexport const saveTemplateLogic = createLogic(\r\n  async ({ letterAdminServicesClient }, { templateData }) => {\r\n    return (await letterAdminServicesClient.post(`templates`, templateData))\r\n      .data.data;\r\n  }\r\n);\r\n","import { createLogic } from \"@evolent/roots\";\r\nimport { actions } from \"../../ducks\";\r\nimport { partition, sortBy, get, concat, reverse } from \"lodash\";\r\n\r\nexport const getMergeFieldsLogic = createLogic(\r\n  async ({ dispatch, letterAdminServicesClient }) => {\r\n    const mergeFieldsList = (\r\n      await letterAdminServicesClient.get(`Guides/Mergefields`)\r\n    ).data.data;\r\n    mergeFieldsList.map((field, index) => (field.id = index));\r\n    dispatch(actions.mergeFieldsActions.setMergeFields(mergeFieldsList));\r\n  }\r\n);\r\n\r\nexport const getAskFieldLogic = createLogic(\r\n  async ({ dispatch, letterAdminServicesClient }) => {\r\n    const askFields = (await letterAdminServicesClient.get(\"Guides/AskFields\"))\r\n      .data.data;\r\n    askFields.map((field, index) => {\r\n      field.id = index;\r\n      field.hasRefText = field.hasRefText ? \"Yes\" : \"No\";\r\n    });\r\n    dispatch(actions.userDefinedFieldsActions.setUserDefinedFields(askFields));\r\n  }\r\n);\r\n\r\nexport const sortFieldsByColumns = (fields, sortColumn, sortDescending) => {\r\n  const fieldsList = partition(\r\n    fields,\r\n    (item) => !!get(item, sortColumn, undefined)\r\n  );\r\n  const sortedList = sortBy(fieldsList[0], (item) => [\r\n    item[sortColumn]?.toLowerCase(),\r\n  ]);\r\n  const sortedItems = concat(sortedList, fieldsList[1]);\r\n\r\n  return sortDescending ? reverse(sortedItems) : sortedItems;\r\n};\r\n\r\nexport const setGuideFilterLogic = createLogic(\r\n  async ({ dispatch }, filterData) => {\r\n    dispatch(\r\n      actions.guideFiltersActions.setGuideFilters({\r\n        type: filterData.type,\r\n        data: filterData.data,\r\n      })\r\n    );\r\n  }\r\n);\r\n","export * from \"./guide/guide.service\";\r\nexport * from \"./templateList/templateList.service\";\r\nexport * from \"./templateActions/templateActions.service\";\r\nexport * from \"./layout/header.service\";\r\nexport * from \"./templateFilters/templateFilters.service\";\r\nexport * from \"./templateLookups/templateLookups.service\";\r\nexport * from \"./addNewTemplates/addNewTemplates.service\";\r\nexport * from \"./templateDetails/templateDetails.service\";\r\n","import { createLogic } from \"@evolent/roots\";\r\n\r\nexport const downloadStarterTemplateLogic = createLogic(\r\n  async ({ letterAdminServicesClient }) => {\r\n    const template = await letterAdminServicesClient.get(\r\n      `Templates/StarterTemplate`,\r\n      {\r\n        responseType: \"blob\",\r\n      }\r\n    );\r\n    return template;\r\n  }\r\n);\r\n","import {\r\n  createLogic,\r\n  DateHandler,\r\n  getUserProfileSelector,\r\n} from \"@evolent/roots\";\r\nimport { find, cloneDeep, remove } from \"lodash\";\r\nimport { APPLICATIONS } from \"../../constants/global\";\r\nimport {\r\n  TEMPLATE_STATUS,\r\n  TEMPLATE_STATUS_DETAILS,\r\n} from \"../../constants/templateList\";\r\nimport { TEMPLATE_STATUS_NAMES } from \"../../constants/templateDetails\";\r\nimport { actions } from \"../../ducks\";\r\n\r\nexport const getDownloadTemplateLogic = createLogic(\r\n  async ({ letterAdminServicesClient }, { clientId, configId }) => {\r\n    const templateData = await letterAdminServicesClient.get(\r\n      `Clients/${clientId}/Documents/${configId}/Download`,\r\n      { responseType: \"blob\" }\r\n    );\r\n    return templateData;\r\n  }\r\n);\r\n\r\nexport const getTemplateUdfLogic = createLogic(\r\n  async ({ letterAdminServicesClient }, { clientId, configId, id }) => {\r\n    const url = id\r\n      ? `Documents/${id}/userinputfields/cached`\r\n      : `Clients/${clientId}/Documents/${configId}/userinputfields`;\r\n    const data = await letterAdminServicesClient.get(url);\r\n    return data.data;\r\n  }\r\n);\r\n\r\nexport const setTemplateUdfLogic = createLogic(\r\n  async (\r\n    { letterAdminServicesClient },\r\n    { clientId, configId, params, cacheKey }\r\n  ) => {\r\n    const url = cacheKey\r\n      ? `Documents/${cacheKey}/cache/setUserInputFields`\r\n      : `Clients/${clientId}/Documents/${configId}/disk/setUserInputFields`;\r\n    return letterAdminServicesClient\r\n      .post(url, { userInputFieldKeyValuePairs: { ...params } })\r\n      .then((data) => data.data);\r\n  }\r\n);\r\n\r\nexport const getTemplateContentLogic = createLogic(\r\n  async ({ letterAdminServicesClient }, { id }) => {\r\n    const documentData = await letterAdminServicesClient.get(\r\n      `documents/${id}`,\r\n      { responseType: \"blob\" }\r\n    );\r\n    return documentData;\r\n  }\r\n);\r\n\r\nexport const templateHasRequiredData = (template) => {\r\n  const {\r\n    description,\r\n    displayName,\r\n    clientId,\r\n    application,\r\n    applicationId,\r\n    lineOfBusinesses,\r\n    categories,\r\n  } = template;\r\n  return !!(\r\n    description &&\r\n    displayName &&\r\n    clientId &&\r\n    (application || applicationId !== undefined) &&\r\n    ((application && application.value === APPLICATIONS.all) ||\r\n      lineOfBusinesses.length ||\r\n      applicationId === APPLICATIONS.all) &&\r\n    categories.length\r\n  );\r\n};\r\n\r\nexport const publishTemplateLogic = createLogic(\r\n  async (\r\n    { dispatch, getState, letterAdminServicesClient },\r\n    { clientId, configurationId }\r\n  ) => {\r\n    await letterAdminServicesClient.put(\r\n      `Clients/${clientId}/templateversions/Status`,\r\n      { configurationId }\r\n    );\r\n\r\n    const template = find(getState().domain.templates.newTemplates.data, [\r\n      \"configurationId\",\r\n      configurationId,\r\n    ]);\r\n    dispatch(\r\n      actions.templateActions.deleteTemplate({\r\n        templateId: template.templateId,\r\n      })\r\n    );\r\n  }\r\n);\r\n\r\nconst getUpdatedByInformation = (loggedInUserMeta) => {\r\n  const { userKey, firstName, lastName } = loggedInUserMeta;\r\n  return {\r\n    updatedDate: DateHandler.today(),\r\n    updatedUserId: userKey,\r\n    updatedByUserFirstName: firstName,\r\n    updatedByUserLastName: lastName,\r\n  };\r\n};\r\n\r\nexport const validateTemplateLogic = createLogic(\r\n  async (\r\n    { dispatch, getState, letterAdminServicesClient },\r\n    { data, configuration }\r\n  ) => {\r\n    const { clientId, templateId } = data;\r\n    const { configurationId } = configuration;\r\n\r\n    await letterAdminServicesClient.put(\r\n      `Clients/${clientId}/TemplateVersions/Validate`,\r\n      { configurationId }\r\n    );\r\n\r\n    const updatedData = cloneDeep(data);\r\n    const loggedInUserMeta = getUserProfileSelector(getState());\r\n\r\n    updatedData.configurations[configurationId] = {\r\n      ...updatedData.configurations[configurationId],\r\n      ...getUpdatedByInformation(loggedInUserMeta),\r\n      isReadyToPublish: true,\r\n    };\r\n\r\n    dispatch(\r\n      actions.templateDetailActions.setTemplateDetails({\r\n        data: updatedData,\r\n        templateId,\r\n      })\r\n    );\r\n  }\r\n);\r\n\r\nexport const publishTemplateVersionLogic = createLogic(\r\n  async (\r\n    { dispatch, getState, letterAdminServicesClient },\r\n    { configuration, clientId, templateId }\r\n  ) => {\r\n    const { configurationId } = configuration;\r\n    const newVersion = (\r\n      await letterAdminServicesClient.put(\r\n        `Clients/${clientId}/templateVersions/Status`,\r\n        { configurationId }\r\n      )\r\n    ).data.data;\r\n\r\n    const templateData = getState().domain.templateDetails[templateId]?.data;\r\n    const { configurations } = templateData;\r\n    const loggedInUserMeta = getUserProfileSelector(getState());\r\n\r\n    const { firstName, lastName } = loggedInUserMeta;\r\n\r\n    const configurationsClone = cloneDeep(configurations);\r\n    configurationsClone[configurationId] = {\r\n      ...configurationsClone[configurationId],\r\n      ...getUpdatedByInformation(loggedInUserMeta),\r\n      statusId: TEMPLATE_STATUS.PUBLISHED,\r\n      statusName: TEMPLATE_STATUS_NAMES.PUBLISH,\r\n      publishDate: DateHandler.today(),\r\n      publishedByUserFirstName: firstName,\r\n      publishedByUserLastName: lastName,\r\n      ...newVersion,\r\n    };\r\n\r\n    const previousPublishedConfiguration = find(configurations, {\r\n      statusId: TEMPLATE_STATUS.PUBLISHED,\r\n    });\r\n\r\n    if (previousPublishedConfiguration) {\r\n      configurationsClone[previousPublishedConfiguration.configurationId] = {\r\n        ...previousPublishedConfiguration,\r\n        statusId: TEMPLATE_STATUS.ARCHIVED,\r\n        statusName: TEMPLATE_STATUS_NAMES.ARCHIVE,\r\n        ...getUpdatedByInformation(loggedInUserMeta),\r\n      };\r\n    }\r\n\r\n    const template = cloneDeep(templateData);\r\n    template.configurations = configurationsClone;\r\n\r\n    dispatch(\r\n      actions.templateDetailActions.setTemplateDetails({\r\n        data: template,\r\n        templateId,\r\n      })\r\n    );\r\n    dispatch(\r\n      actions.templateStatusActions.setTemplateStatus(\r\n        TEMPLATE_STATUS_DETAILS.Published\r\n      )\r\n    );\r\n  }\r\n);\r\n\r\nexport const addNewTemplateVersionLogic = createLogic(\r\n  async (\r\n    { dispatch, getState, letterAdminServicesClient },\r\n    { templateDetails, id }\r\n  ) => {\r\n    const {\r\n      clientId,\r\n      templateId,\r\n      templateVersions: versions,\r\n      configurations: configs,\r\n    } = templateDetails;\r\n\r\n    const newVersion = (\r\n      await letterAdminServicesClient.post(\r\n        `Clients/${clientId}/TemplateVersions`,\r\n        {\r\n          id,\r\n          templateId,\r\n        }\r\n      )\r\n    ).data.data;\r\n\r\n    const extension = newVersion.fileNameWithExtension.includes(\".docx\")\r\n      ? \".docx\"\r\n      : \".dotx\";\r\n    const fileName = newVersion.fileNameWithExtension.replace(extension, \"\");\r\n    const loggedInUserMeta = getUserProfileSelector(getState());\r\n\r\n    const templateVersion = {\r\n      configurationId: newVersion.configurationId,\r\n      fileName: fileName,\r\n      fileExtension: extension,\r\n      statusId: TEMPLATE_STATUS.NEW,\r\n      statusName: TEMPLATE_STATUS_NAMES.NEW,\r\n      isReadyToPublish: false,\r\n      ...getUpdatedByInformation(loggedInUserMeta),\r\n    };\r\n\r\n    const previousDraftConfiguration = find(configs, {\r\n      statusId: TEMPLATE_STATUS.NEW,\r\n    });\r\n\r\n    const templateVersions = cloneDeep(versions);\r\n    if (previousDraftConfiguration) {\r\n      remove(\r\n        templateVersions,\r\n        (version) => version === previousDraftConfiguration.configurationId\r\n      );\r\n    }\r\n    templateVersions.push(newVersion.configurationId);\r\n\r\n    dispatch(\r\n      actions.templateDetailActions.setTemplateDetails({\r\n        data: {\r\n          ...templateDetails,\r\n          templateVersions,\r\n          configurations: {\r\n            ...configs,\r\n            [templateVersion.configurationId]: { ...templateVersion },\r\n          },\r\n          ...getUpdatedByInformation(loggedInUserMeta),\r\n        },\r\n        templateId,\r\n      })\r\n    );\r\n  }\r\n);\r\n","import { normalize } from \"normalizr\";\r\nimport {\r\n  createLogic,\r\n  DateHandler,\r\n  getUserProfileSelector,\r\n} from \"@evolent/roots\";\r\nimport { actions } from \"../../ducks/index\";\r\nimport { forEach, filter, pick } from \"lodash\";\r\nimport { templateSchema } from \"../templateList/schema\";\r\nimport {\r\n  SHOW_HIDE_PROGRAM_CRITERIA,\r\n  SHOW_HIDE_REASON_CRITERIA,\r\n} from \"../../constants/addNewTemplate\";\r\nimport { TEMPLATE_STATUS_NAMES } from \"../../constants/templateDetails\";\r\nimport {\r\n  TEMPLATE_STATUS,\r\n  TEMPLATE_STATUS_DETAILS,\r\n} from \"../../constants/templateList\";\r\n\r\nexport const showReasons = (categoryIds) => {\r\n  return categoryIds?.some((category) =>\r\n    SHOW_HIDE_REASON_CRITERIA.ids.includes(category)\r\n  );\r\n};\r\n\r\nexport const showPrograms = (categoryIds) => {\r\n  return categoryIds?.some((category) =>\r\n    SHOW_HIDE_PROGRAM_CRITERIA.ids.includes(category)\r\n  );\r\n};\r\n\r\nexport const categoryChangeHandler = (form, value) => {\r\n  if (!showReasons(value)) {\r\n    form.setFieldValue(\"decisionReasonIds\", []);\r\n    form.setFieldTouched(\"decisionReasonIds\", false);\r\n    form.setFieldValue(\"recipientCategoryIds\", []);\r\n    form.setFieldTouched(\"recipientCategoryIds\", false);\r\n  }\r\n  if (!showPrograms(value)) {\r\n    form.setFieldValue(\"languageId\");\r\n    form.setFieldTouched(\"languageId\", false);\r\n    form.setFieldValue(\"programIds\", []);\r\n    form.setFieldTouched(\"programIds\", false);\r\n  }\r\n  if (!showReasons(value) && !showPrograms(value)) {\r\n    form.setFieldValue(\"opsSegmentIds\", []);\r\n    form.setFieldTouched(\"opsSegmentIds\", false);\r\n  }\r\n};\r\n\r\nexport const setTemplateDetailsLoadingLogic = createLogic(\r\n  async ({ dispatch }, { templateId }) => {\r\n    dispatch(\r\n      actions.templateDetailActions.setTemplateDetailsLoading({\r\n        data: true,\r\n        templateId,\r\n      })\r\n    );\r\n  }\r\n);\r\nexport const getTemplateDetailsLogic = createLogic(\r\n  async ({ dispatch, letterAdminServicesClient }, { clientId, templateId }) => {\r\n    dispatch(\r\n      actions.templateDetailActions.setTemplateDetailsLoading({\r\n        data: true,\r\n        templateId,\r\n      })\r\n    );\r\n\r\n    const templateData = (\r\n      await letterAdminServicesClient.get(\r\n        `Clients/${clientId}/Templates/${templateId}`\r\n      )\r\n    ).data;\r\n\r\n    forEach(templateData.templateVersions, (version) => {\r\n      version.fileName = version.fileName.substring(\r\n        version.fileName.indexOf(\";\") + 1\r\n      );\r\n    });\r\n    const normalizedTemplateData = normalize(templateData, templateSchema);\r\n    dispatch(\r\n      actions.templateDetailActions.setTemplateDetails({\r\n        data: {\r\n          ...normalizedTemplateData.entities.templates[templateId],\r\n          configurations: normalizedTemplateData.entities.configurations,\r\n          versions: normalizedTemplateData.entities.configurations,\r\n        },\r\n        templateId,\r\n      })\r\n    );\r\n  }\r\n);\r\n\r\nexport const updateTemplateLogic = createLogic(\r\n  async (\r\n    { dispatch, letterAdminServicesClient },\r\n    { form, categoryData, linesOfBusiness }\r\n  ) => {\r\n    const templateData = {\r\n      ...form,\r\n      applicationId: form.application.value,\r\n    };\r\n\r\n    const payloadData = pick(templateData, [\r\n      \"applicationId\",\r\n      \"categoryIds\",\r\n      \"clientId\",\r\n      \"decisionReasonIds\",\r\n      \"description\",\r\n      \"displayName\",\r\n      \"languageId\",\r\n      \"lineOfBusinessIds\",\r\n      \"opsSegmentIds\",\r\n      \"programIds\",\r\n      \"recipientCategoryIds\",\r\n      \"templateId\",\r\n    ]);\r\n\r\n    await letterAdminServicesClient.put(\r\n      `Clients/${form.clientId}/Templates`,\r\n      payloadData\r\n    );\r\n    dispatch(\r\n      actions.templateDetailActions.setTemplateDetails({\r\n        data: {\r\n          ...templateData,\r\n          categories: filter(categoryData, (category) =>\r\n            form.categoryIds.includes(category.categoryId)\r\n          ),\r\n          lineOfBusinesses: filter(linesOfBusiness, (lob) => {\r\n            return (\r\n              form.lineOfBusinessIds.includes(lob.lobId) &&\r\n              lob.clientId === form.clientId\r\n            );\r\n          }),\r\n        },\r\n        templateId: templateData.templateId,\r\n      })\r\n    );\r\n  }\r\n);\r\n\r\nconst getUpdatedByInformation = (userData) => {\r\n  const { userKey, firstName, lastName } = userData;\r\n  return {\r\n    updatedDate: DateHandler.today(),\r\n    updatedUserId: userKey,\r\n    updatedByUserFirstName: firstName,\r\n    updatedByUserLastName: lastName,\r\n  };\r\n};\r\n\r\nexport const archiveTemplateLogic = createLogic(\r\n  async (\r\n    { dispatch, letterAdminServicesClient, getState },\r\n    { configuration, template }\r\n  ) => {\r\n    const { clientId, configurations: configs, templateId } = template;\r\n\r\n    await letterAdminServicesClient.put(\r\n      `Clients/${clientId}/templateversions/Status`,\r\n      { configurationId: configuration.configurationId }\r\n    );\r\n\r\n    const userData = getUserProfileSelector(getState());\r\n\r\n    const configurationData = {\r\n      ...configuration,\r\n      ...getUpdatedByInformation(userData),\r\n      statusId: TEMPLATE_STATUS.ARCHIVED,\r\n      statusName: TEMPLATE_STATUS_NAMES.ARCHIVE,\r\n    };\r\n\r\n    dispatch(\r\n      actions.templateDetailActions.setTemplateDetails({\r\n        data: {\r\n          ...template,\r\n          configurations: {\r\n            ...configs,\r\n            [configuration.configurationId]: configurationData,\r\n          },\r\n        },\r\n        templateId,\r\n      })\r\n    );\r\n    dispatch(\r\n      actions.templateStatusActions.setTemplateStatus(\r\n        TEMPLATE_STATUS_DETAILS.Archived\r\n      )\r\n    );\r\n  }\r\n);\r\n","import { createLogic } from \"@evolent/roots\";\r\nimport { actions } from \"../../ducks/index\";\r\n\r\nexport const showFiltersFlagLogic = createLogic(async ({ dispatch }, data) => {\r\n  dispatch(actions.templateFilterActions.setShowFiltersFlag(data));\r\n});\r\n\r\nexport const setAppliedFiltersLogic = createLogic(\r\n  async ({ dispatch }, { statusId, data }) => {\r\n    dispatch(\r\n      actions.templateFilterActions.setAppliedFilters({ statusId, data })\r\n    );\r\n  }\r\n);\r\n","import { schema } from \"normalizr\";\r\n\r\nexport const configurationSchema = new schema.Entity(\r\n  \"configurations\",\r\n  {},\r\n  { idAttribute: \"configurationId\" }\r\n);\r\n\r\nexport const templateSchema = new schema.Entity(\r\n  \"templates\",\r\n  { templateVersions: [configurationSchema] },\r\n  { idAttribute: \"templateId\" }\r\n);\r\n","import { normalize } from \"normalizr\";\r\nimport { createLogic } from \"@evolent/roots\";\r\nimport { actions } from \"../../ducks/index\";\r\nimport { templateSchema } from \"./schema\";\r\nimport { TEMPLATE_STATUS_DETAILS } from \"../../constants/templateList\";\r\n\r\nexport const setTemplatesLoadingLogic = createLogic(\r\n  ({ dispatch }, { statusId }) => {\r\n    dispatch(actions.templateActions.setLoading({ statusId }));\r\n  }\r\n);\r\n\r\nexport const getTemplatesLogic = createLogic(\r\n  async ({ dispatch, letterAdminServicesClient }, { statusId }) => {\r\n    try {\r\n      switch (statusId) {\r\n        case 1:\r\n          dispatch(\r\n            actions.templateStatusActions.setTemplateStatus(\r\n              TEMPLATE_STATUS_DETAILS.Archived\r\n            )\r\n          );\r\n          break;\r\n        case 2:\r\n          dispatch(\r\n            actions.templateStatusActions.setTemplateStatus(\r\n              TEMPLATE_STATUS_DETAILS.Published\r\n            )\r\n          );\r\n          break;\r\n        case 3:\r\n          dispatch(\r\n            actions.templateStatusActions.setTemplateStatus(\r\n              TEMPLATE_STATUS_DETAILS.New\r\n            )\r\n          );\r\n          break;\r\n      }\r\n      dispatch(actions.templateActions.setLoading({ statusId }));\r\n      const templates = (\r\n        await letterAdminServicesClient.get(\"Templates\", {\r\n          params: { statusId },\r\n        })\r\n      ).data.data;\r\n      const normalizedData = normalize(templates, [templateSchema]);\r\n      dispatch(\r\n        actions.templateActions.setTemplates({\r\n          statusId,\r\n          data: normalizedData.entities.templates,\r\n        })\r\n      );\r\n    } catch (error) {\r\n      dispatch(\r\n        actions.templateActions.setError({\r\n          statusId,\r\n        })\r\n      );\r\n    }\r\n  }\r\n);\r\n","import { createLogic } from \"@evolent/roots\";\r\nimport { actions } from \"../../ducks/index\";\r\nimport {\r\n  applicationSelector,\r\n  categorySelector,\r\n  languagesSelector,\r\n  linesOfBusinessSelector,\r\n  opsSegmentsSelector,\r\n  programsSelector,\r\n  reasonsSelector,\r\n  recipientsSelector,\r\n} from \"../../selectors\";\r\n\r\nexport const getApplicationsLogic = createLogic(\r\n  async ({ dispatch, getState, letterAdminServicesClient }) => {\r\n    const applications = applicationSelector(getState());\r\n    if (!applications.data.length) {\r\n      dispatch(actions.applicationActions.setApplicationsLoading(true));\r\n      const applicationsData = (\r\n        await letterAdminServicesClient.get(\"Applications\")\r\n      ).data.data;\r\n      dispatch(actions.applicationActions.setApplications(applicationsData));\r\n    }\r\n  }\r\n);\r\n\r\nexport const getLinesofBusinessLogic = createLogic(\r\n  async ({ dispatch, getState, letterAdminServicesClient }) => {\r\n    const lobs = linesOfBusinessSelector(getState());\r\n    if (!lobs.data.length) {\r\n      dispatch(actions.lobActions.setLobsLoading(true));\r\n      const lobsData = (await letterAdminServicesClient.get(\"lobs\")).data.data;\r\n      dispatch(actions.lobActions.setLobs(lobsData));\r\n    }\r\n  }\r\n);\r\n\r\nexport const getCategoriesLogic = createLogic(\r\n  async ({ dispatch, getState, letterAdminServicesClient }) => {\r\n    const categories = categorySelector(getState());\r\n    if (!categories.data.length) {\r\n      dispatch(actions.categoryActions.setCategoriesLoading(true));\r\n      const categoriesData = (await letterAdminServicesClient.get(\"Categories\"))\r\n        .data.data;\r\n      dispatch(actions.categoryActions.setCategories(categoriesData));\r\n    }\r\n  }\r\n);\r\n\r\nexport const getReasonsLogic = createLogic(\r\n  async ({ dispatch, getState, identifiUmServicesClient }, { clientId }) => {\r\n    const reasons = reasonsSelector(getState());\r\n    const reasonsData = reasons[clientId]?.data;\r\n    if (!reasonsData?.length) {\r\n      dispatch(\r\n        actions.reasonActions.setReasonsLoading({ data: true, clientId })\r\n      );\r\n      const reasonData = (\r\n        await identifiUmServicesClient.get(\r\n          `Clients/${clientId}/lookups/ApprovalReasons`\r\n        )\r\n      ).data.data;\r\n      dispatch(\r\n        actions.reasonActions.setReasons({\r\n          data: reasonData,\r\n          clientId,\r\n        })\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const getRecipientsLogic = createLogic(\r\n  async (\r\n    { dispatch, getState, letterAdminServicesClient },\r\n    { applicationId }\r\n  ) => {\r\n    const recipients = recipientsSelector(getState());\r\n    if (!recipients.data.length) {\r\n      dispatch(actions.recipientActions.setRecipientsLoading(true));\r\n      const recipientsData = (\r\n        await letterAdminServicesClient.get(\r\n          `Categories/App/${applicationId}/Recipients`\r\n        )\r\n      ).data.data;\r\n      dispatch(actions.recipientActions.setRecipients(recipientsData));\r\n    }\r\n  }\r\n);\r\n\r\nexport const getLanguagesLogic = createLogic(\r\n  async ({ dispatch, getState, servicesClient }, { clientId }) => {\r\n    const languages = languagesSelector(getState());\r\n    const languagesData = languages[clientId]?.data;\r\n    if (!languagesData?.length) {\r\n      dispatch(\r\n        actions.languageActions.setLanguagesLoading({ data: true, clientId })\r\n      );\r\n      const data = (\r\n        await servicesClient.get(\"ReferenceData/Language\", {\r\n          params: { clientId },\r\n        })\r\n      ).data;\r\n      dispatch(\r\n        actions.languageActions.setLanguages({\r\n          data,\r\n          clientId,\r\n        })\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const getProgramsLogic = createLogic(\r\n  async ({ dispatch, getState, servicesClient }, { clientId }) => {\r\n    const programs = programsSelector(getState());\r\n    const programsData = programs[clientId]?.data;\r\n    if (!programsData?.length) {\r\n      dispatch(\r\n        actions.programActions.setProgramsLoading({ data: true, clientId })\r\n      );\r\n      const data = (\r\n        await servicesClient.get(\"CareManagementProgramTypes\", {\r\n          params: { clientId },\r\n        })\r\n      ).data;\r\n      dispatch(\r\n        actions.programActions.setPrograms({\r\n          data,\r\n          clientId,\r\n        })\r\n      );\r\n    }\r\n  }\r\n);\r\n\r\nexport const getOpsSegmentsLogic = createLogic(\r\n  async ({ dispatch, getState, careServicesClient }, { clientId }) => {\r\n    const opsSegments = opsSegmentsSelector(getState());\r\n    const opsSegmentsData = opsSegments[clientId]?.data;\r\n    if (!opsSegmentsData?.length) {\r\n      dispatch(\r\n        actions.opsSegmentActions.setOpsSegmentsLoading({\r\n          data: true,\r\n          clientId,\r\n        })\r\n      );\r\n      const data = (\r\n        await careServicesClient.get(`Clients/${clientId}/OpsSegments`)\r\n      ).data.data;\r\n      dispatch(\r\n        actions.opsSegmentActions.setOpsSegments({\r\n          data,\r\n          clientId,\r\n        })\r\n      );\r\n    }\r\n  }\r\n);\r\n"],"names":["APP_SETTINGS","moduleId","MODULES","letterAdminTool","StyledBox","styled","EhFlexBox","Colors","white","Spacing","spacingXxLarge","spacingXLarge","spacingLarge","StyledDiv","div","StyledHeader","EhHeaderMat","spacingSmall","StyledOuterContainer","spacingNone","StyledInnerContainer","borderRadiusSmall","StyledEhMessage","EhMessage","StyledTableContainer","spacingMedium","StyledFlexBox","StyledButtonContainer","Grid","Column","StyledTemplateContainer","StyledEhLabel","EhLabelMat","SliderContent","indigo","StyledFilterDiv","StyledGuideFilterContainer","StyledApplyButton","EhButton","showUnsavedWarning","closeModal","showUnsavedChangeWarning","discard","i","StyledButton","spacingXSmall","InnerContainer","borderWidthThin","borderRadiusLarge","StyledTemplateHeader","Row","props","border","UploadContainer","StrechDiv","StyledProgress","Progress","MultiFileUploadField","asField","MultiFileUpload","AddNewTemplatesComponent","clients","applicationsData","linesOfBusinessData","categoriesData","getApplicationsLogic","getLinesofBusinessLogic","getCategoriesLogic","getReasonsLogic","getRecipientsLogic","getLanguagesLogic","getProgramsLogic","getOpsSegmentsLogic","saveTemplateLogic","languages","recipientsData","history","reasons","programs","opsSegments","appLoading","loading","applications","data","lobsLoading","linesOfBusiness","categoriesLoading","categories","recipientsLoading","recipients","clientNames","sortBy","useState","validationMsg","setValidationMsg","fileInfo","setFileInfo","progressInfo","setProgressInfo","dispNames","setDispNames","MAX_SIZE","ATTACHMENTS_STRINGS","UPLOAD_ATTACHMENT_FORMAT","SUPPORTED_FILES_MESSAGE","MAX_FILES","useEffect","navigateToPreviousPage","goBack","findDuplicates","arr","filter","item","index","indexOf","addNewTemplatesHandler","form","files","descriptions","displayNames","uniqueDuplicateNames","Set","length","message","DUPLICATE_TEMPLATE_MESSAGE","join","showModal","EhAlertModalMat","heading","iconName","iconColor","blue","buttons","text","onClick","TemplateDescriptorDtos","map","file","displayName","description","TemplateLookupDataDto","pick","templateData","publishTemplate","AddNewTemplatesDto","applicationId","application","value","push","ehToast","success","TOAST_MESSAGES","TEMPLATE_SAVED_SUCCESS","TOAST_PROPS","clientChangeHandler","clientId","setFieldValue","Promise","all","applicationChangeHandler","APPLICATIONS","um","doUploadHandler","uploadUrl","letterAdminServices","filesClone","cloneDeep","values","setFieldTouched","updatedFiles","updatedDisplayNames","size","bytes","parse","fileSizeLimit","prevState","newState","prevPro","newPro","FormData","append","name","axios","post","onUploadProgress","element","Math","floor","loaded","total","withCredentials","then","response","prevProgressState","newProgressState","fileName","replace","prevFiles","prevNames","removeUploadHandler","lastFileRemove","newFiles","remove","el","id","fileIndex","findIndex","newDisplayNames","splice","descriptionsClone","EhForm","onSave","Fragment","width","floated","textAlign","negative","dirty","discardTemplateHandler","EhDropdownField","fieldLabel","keyField","select","options","clearable","required","display","onChange","placeholder","showPrograms","categoryIds","MESSAGES","CLIENT_NOT_SELECTED_MESSAGE","EhCheckboxGroupField","showCount","noResultsText","categoryChangeHandler","APPLICATION_NOT_SELECTED_MESSAGE","showReasons","EhTextMat","fontWeight","EhInputField","EhTextareaField","maxLength","TEMPLATE_DESCRIPTION_MAX_LENGTH","EhButtonGroup","icon","progress","percent","prevProgress","newProgress","borderless","accept","buttonText","acceptText","setTimeout","color","primary","type","propTypes","PropTypes","object","func","AddNewTemplates","connect","state","userAppClientsSelector","applicationSelector","linesOfBusinessSelector","categorySelector","reasonsSelector","recipientsSelector","languagesSelector","programsSelector","opsSegmentsSelector","EhWithTracking","StyledText","GuideFilterPills","filters","fieldName","justifyContent","isEmpty","GuideFilterSliderComponent","showFilters","fieldType","onApplyFilter","Transition","Group","animation","duration","EXPAND_SLIDER_DURATION","GuideFilters","closeFilterSlider","bool","string","GuideFilterSlider","GuideFiltersComponent","appliedFilters","setGuideFilterLogic","saveFiltersHandler","initialValues","GUIDE_FIELDS_STATUS","MERGE_FIELDS","guideFiltersSelector","APPLICATION","MERGE_FIELDS_COLUMNS","NAME","DESCRIPTION","MergeFieldsComponent","mergeFields","getMergeFieldsLogic","guideFilters","setLoading","mergeFieldsError","setMergeFieldsError","page","setPage","sortColumn","sortDescending","tableState","setTableState","filterOpen","setFilterOpen","filterHasData","filterGuideFields","totalMergeFieldsCount","sortedMergeFields","chunk","sortFieldsByColumns","FIELDS_PER_PAGE","paginationContent","alignItems","EhPaginationLabel","pageNumber","totalCount","pageSize","endingText","EhTablePagination","totalPages","ceil","activePage","onPageChange","e","filterButtonText","EhDataTable","stickyArea","headers","fixed","columns","field","header","renderData","mergeField","ellipsis","noResultsMessage","warning","error","ERROR_GETTING_MERGE_FIELDS","NO_MERGE_FIELDS_MESSAGE","sortable","onSortChange","array","MergeFields","mergeFieldsSelector","USER_DEFINED_FIELD_COLUMNS","PROMPT_TEXT","REFERENCE_TEXT","UserDefinedFieldComponent","askFields","getAskFieldLogic","askFieldsError","setAskFieldsError","totalFieldCount","sortedUserDefinedFields","USER_DEFINED_FIELDS","askField","promptText","hasRefText","ERROR_GETTING_USER_DEFINED_FIELDS","NO_USER_DEFINED_FIELDS_MESSAGE","UserDefinedField","userDefinedFieldsSelector","StyledMenu","EhMenu","spacingXxxLarge","aqua","Typography","fontWeightRegular","fontSizeMedium","spacingXxSmall","StyledIcon","Icon","fontSizeLarge","StyledLayoutHeader","EhLayoutHeader","StyledLogo","Image","ContactSupportButton","HeaderComponent","user","location","downloadStarterTemplateLogic","firstName","lastName","email","isJiraSupportLinkEnabled","jiraSupportLinkEnabled","downloadStarterTemplate","logic","download","logo","Link","to","alt","src","appControls","inverted","pointing","Item","active","includes","pathname","as","platformControls","EhHeaderMenu","items","window","open","EhAppDrawer","launcherUrl","handleContactSupport","Session","end","shape","Header","StyledContainer","DEFAULT_BACKGROUND_COLOR","Layout","hasAccess","loggedInUserMeta","getUserProfile","getTermsAndConditionLogic","onAuthenticateSuccess","AppInsightsService","setAuthId","userKey","SecureSession","onSessionStart","setAuthorizationToken","token","defaults","common","Switch","Route","exact","path","render","Redirect","EhRoute","component","TemplatesHomePage","title","TemplateDetails","Forbidden","Footer","getTermsLogic","EhGlobalComponents","search","hasAccessSelector","getUserProfileSelector","withRouter","StyledDropzone","Dropzone","fontWeightBold","fontSizeSmall","multiple","onDrop","acceptedFiles","PreviewTemplate","configId","templateId","configuration","getTemplateUdfLogic","setTemplateUdfLogic","getTemplateContentLogic","publishTemplateLogic","publishTemplateVersionLogic","udf","setUdf","currentStep","setCurrentStep","showBackButton","setShowBackButton","generatedTemplateId","setGeneratedTemplateId","generateTemplate","params","cacheKey","configurationId","TEMPLATE_PUBLISH_SUCCESS","EhLoader","loaderContent","EhFormModalMat","renderHeader","PREVIEW_TITLES","STEP_ONE","STEP_TWO","renderFooter","showUnsavedWarningModal","closeIcon","onClose","renderContent","bookmarkName","rows","EhDocument","number","isRequired","PublishTemplate","closeConfirmModal","hasPublishedVersion","hasRequiredData","templateHasRequiredData","modalMessage","PUBLISH_TEMPLATE","TEXT_REPLACE","TEXT","TITLE","PUBLISH_REQUIRES_DATA","PUBLISH_TEXT","StyledEhTextMat","UploadTemplateComponent","templateDetails","addNewTemplateVersionLogic","onCloseSlider","onFileUpload","UPLOAD_ATTACHMENT_MSG","saveAsDraftHandler","configurations","find","statusId","TEMPLATE_STATUS","NEW","REPLACE_DRAFT","positive","TEMPLATE_DRAFT_SUCCESS","EhFileUploadField","maxSize","removeFromCache","renderError","uploadButtonPrimary","showCustomisedFileUpload","UploadTemplate","ValidateTemplate","validateTemplateLogic","VALIDATE_DRAFT","VALIDATE_DRAFT_SUCCESS","StyledOuterBox","grey","EditTemplateComponent","changeMode","updateTemplateLogic","lineOfBusinesses","categoryData","client","lineOfBusinessIds","lob","lobId","cat","categoryId","templateSaveHandler","cancelEditModeHandler","TemplateVersions","mode","EditTemplate","View","ACTION_STATUS","TemplateDetailsComponent","match","template","getTemplateDetailsLogic","setTemplateDetailsLoadingLogic","setMode","templateDetailsLoading","ViewTemplate","ownProps","templateDetailsSelector","VERSION","TEMPLATE_VERSIONS_COLUMNS","TYPE","FILE_NAME","DRAFT_STATUS","PUBLISHED_DATE","UPDATED_DATE","ACTIONS","templateStatus","TEMPLATE_STATUS_NAMES","gold","PUBLISH","green","span","spacingXxxSmall","getColumns","downloadTemplate","hasLetterPublisherRole","fixedWidth","versionNumber","statusName","TEMPLATE_STATUS_MAPPING","fileExtension","isReadyToPublish","shade","EhDate","publishDate","localTime","publishedByUserLastName","publishedByUserFirstName","updatedDate","updatedByUserLastName","updatedByUserFirstName","TemplateVersionsComponent","getDownloadTemplateLogic","PUBLISHED","templateConfigurationsSelector","userHasAppRoleSelector","LETTER_ADMIN_USER_ROLES","publishLetter","StyledColumn","ViewTemplateComponent","templateType","languagesData","programsData","opsSegmentsData","reasonsData","archiveTemplateLogic","languageId","decisionReasonIds","recipientCategoryIds","programIds","opsSegmentIds","versions","useHistory","showUploadSlider","setShowUploadSlider","formDirty","setFormDirty","publishedConfiguration","config","publishedVersion","version","archivedVersion","ARCHIVED","cm","language","category","lang","key","program","ops","reason","recipient","recipientCategoryId","showArchiveTemplate","toLowerCase","ARCHIVE_TEMPLATE","TEMPLATE_ARCHIVED_SUCCESS","REQUIRED_TO_PUBLISH","List","lobName","recipientCategoryDesc","opsSegment","templateStatusSelector","FilterSliderComponent","TemplateFilters","FilterSlider","showFiltersFlagSelector","appliedFiltersSelector","TemplateFiltersComponent","setAppliedFiltersLogic","sortedClients","enableSelectAll","showFiltersFlagLogic","StyledFilterPills","StyledDropdown","EhDropdown","StyledRightGrid","TemplatesSubNavComponent","onTemplateChange","templateTypes","draftStatus","getFilterButtonText","TemplatesSubNav","TemplatesHomePageComponent","useRouteMatch","url","toUpperCase","templateChangeHandler","TEMPLATE_STATUS_BY_ID","TemplatesList","StyledContentContainer","StyledEhText","StyledIconContainer","showPublishIcon","StyledPaginationContainer","DISPLAY_NAME","TEMPLATES_LIST_COLUMNS","CLIENT","LOB","CATEGORY","DRAFT","ICON","getTemplateTableColumns","viewTemplateHandler","clientName","lobs","nosort","TemplatesListComponent","templatesData","templatesError","getTemplatesLogic","setTemplatesLoadingLogic","getTemplateRelatedData","NO_TEMPLATES_MESSAGE","ERROR_MESSAGE","templatesList","filterTemplates","totalTemplatesCount","templates","sortByColumns","TEMPLATES_PER_PAGE","flexDirection","templatesDataSelector","templatesLoadingSelector","templatesErrorSelector","ids","authorLetter","position","SUCCESS","ARCHIVE","New","Publish","Archive","Edit","STATUS","Archived","Published","NO_NEW_TEMPLATES_MESSAGE","NO_ARCHIVED_TEMPLATES_MESSAGE","NO_PUBLISHED_TEMPLATES_MESSAGE","ERROR_GETTING_PUBLISHED_TEMPLATES","ERROR_GETTING_NEW_TEMPLATES","ERROR_GETTING_ARCHIVED_TEMPLATES","templateName","LocalStorageLogging","applicationName","localStorageKey","userNameGetter","get","store","getState","reducers","combineReducers","app","domain","idpClient","createHttpClient","idpUrl","RequestInterceptor","identifiServicesClient","identifiServices","letterAdminServicesClient","identifiUmServicesClient","identifiUmServices","servicesClient","services","careServicesClient","careServices","middlewares","thunk","withExtraArgument","enhancer","composeEnhancers","compose","applyMiddleware","createStore","setupStore","INITIAL_STATE","actionTypes","actions","setApplications","createAction","setApplicationsLoading","ACTION_HANDLERS","action","handler","setCategories","setCategoriesLoading","mergeFieldsFilters","userDefinedFieldFilters","SET_GUIDE_FILTERS","setGuideFilters","userDefinedFields","templateFilters","templateActions","mergeFieldsActions","userDefinedFieldsActions","templateFilterActions","applicationActions","lobActions","categoryActions","reasonActions","recipientActions","languageActions","programActions","opsSegmentActions","templateDetailActions","guideFiltersActions","templateStatusActions","setLanguages","setLanguagesLoading","setLobs","setLobsLoading","SET_MERGE_FIELDS","setMergeFields","setOpsSegments","setOpsSegmentsLoading","setPrograms","setProgramsLoading","setReasons","setReasonsLoading","setRecipients","setRecipientsLoading","setTemplateDetails","setTemplateDetailsLoading","publishedTemplatesFilter","archivedTemplatesFilter","newTemplatesFilter","setAppliedFilters","setShowFiltersFlag","publishedTemplates","archivedTemplates","newTemplates","setTemplates","setError","deleteTemplate","newTemplatesData","SET_TEMPLATE_STATUS","simpleDataSetReducer","replaceActionType","setTemplateStatus","SET_USER_DEFINED_FIELDS","setUserDefinedFields","createBrowserHistory","setUpAppInsights","reactPlugin","EhReactPlugin","getTelemetryItemProps","userMeta","telemetryItemProps","Logger","initialize","onMessageReceived","localStorageLogStore","log","entry","entryType","entrySource","logTrace","otherParams","JSUtils","safeStringify","AI_SEVERITY","bootstrap","authority","client_id","idpClientId","scope","idpRequiredScopes","container","document","getElementById","createRoot","EhAppRoot","EhThemeProvider","theme","EhTheme","RouteConfig","HashRouter","getUserConfirmation","createUnsavedConfirmation","CompleteAuthentication","appliedFieldFilters","guideList","guides","toPairs","forEach","guide","keys","templatesConfigurations","tempConfigurations","orderBy","keyword","createSelector","templateDataSelector","userData","userAppClients","hasDraftVersionValidated","decorateTemplateData","templateItems","partition","undefined","sortedList","DateHandler","getDate","sortedItems","concat","reverse","appliedTemplateFilters","every","some","createLogic","dispatch","mergeFieldsList","fields","fieldsList","filterData","responseType","userInputFieldKeyValuePairs","documentData","put","getUpdatedByInformation","today","updatedUserId","updatedData","newVersion","configurationsClone","previousPublishedConfiguration","TEMPLATE_STATUS_DETAILS","templateVersions","configs","extension","fileNameWithExtension","templateVersion","previousDraftConfiguration","SHOW_HIDE_REASON_CRITERIA","SHOW_HIDE_PROGRAM_CRITERIA","substring","normalizedTemplateData","normalize","templateSchema","entities","payloadData","configurationData","configurationSchema","schema","Entity","idAttribute","normalizedData","lobsData","reasonData"],"sourceRoot":""}